TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE    1

      46 00043a                 .text
      47                        .copy       "sond_v1.2.asm"
 A     1              ;*****************************************************************************
 A     2              ;
 A     3              ; Dartmouth College AGO Rx-DSP Program
 A     4              ;
 A     5              ; Written by: Micah P. Dombrowski and Nathan B. Utterback
 A     6              ;     w/ code segments from TI DSP Library
 A     7              ;
 A     8              ;*****************************************************************************
 A     9              ;
 A    10              ; History
 A    11              ; v1.2  2012.10.21      Added toggle of 
 A    12              ; v1.1  2012.06.01      Added 1-frequency debug mode controlled by trm_28 jumper
 A    13              ; v1.0                          First production code
 A    14              
 A    15                      .mmregs
 A    16                      .global ZERO, BMAR, PREG, DBMR, INDX, ARCR, TREG1
 A    17                      .global TREG2, CBSR1, CBER1, CBSR2, CBER2
 A    18                      .global RXDSP_START
 A    19              ;       .ref    _RxDSP_Monitor
 A    20                      .ref    _serial_cook
 A    21                      .ref    rsp_clear, rsp_reset, rsp_init, rsp_mstart, rsp_sstart, rsp_freq
 A    22              ;       .ref    ad6620_soft_reset, ad6620_filter, ad6620_master_run, rsp_setup
 A    23                      .ref    transfer, transfer_table_sz
 A    24                      .global bridge_data, buff_clear_loop
 A    25                      .def    ago_main, int_nmi
 A    26                      
 A    27                      .include "rx-dsp.h"
 A    28              ;       .include "int_table.h"
 A    29 00043a               .text
 A    30              
 A    31 00043a 6B28  find_me                         .ulong          0x6B28FE40
         00043b FE40 
 A    32 00043c 0000  unit_designation        .uword          0       ; Unit number (Master = 0)
 A    33 00043d 0076  code_version            .string         "v1.0"
         00043e 0031 
         00043f 002E 
         000440 0030 
 A    34 000441 0053  station_code            .string         "SS"
         000442 0053 
 A    35              
 A    36 000443 0030  band_width                      .string         "0750"
         000444 0037 
         000445 0035 
         000446 0030 
 A    37              
 A    38              ; Rotating center frequency table
 A    39              ;       32-bit values derived by mapping the sampling frequency (S) to the 0:2^32 range,
 A    40              ;       then taking the ratio of center frequency (C) to S, i.e. C/S*2^32
 A    41              
 A    42 000447       cfreq_table:
 A    43 000447 01D2                  .word   0x01d2, 0xf1c9  ;  475 kHz
         000448 F1C9 
 A    44 000449 04B4                  .word   0x04b4, 0x39a7  ; 1225 kHz
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE    2

         00044a 39A7 
 A    45 00044b 0795                  .word   0x0795, 0x8185  ; 1975 kHz
         00044c 8185 
 A    46 00044d 0A76                  .word   0x0a76, 0xc964  ; 2725 kHz
         00044e C964 
 A    47 00044f       cfreq_table_end:
 A    48        0008  cfreq_table_sz  .set    cfreq_table_end-cfreq_table
 A    49              
 A    50 00044f 0E66  cfreq_test              .word   0x0e66, 0x6758  ; 3750 KHz, used when trm_28 jumper is on
         000450 6758 
 A    51              
 A    52        0999  cfreq_toggle1   .set    0x0999  ; 2500 kHz
 A    53        9A3B  cfreq_toggle2   .set    0x9A3B
 A    54              
 A    55              
 A    56              ; Run constants 
 A    57        0200  data_n                  .set    512     ; Size of each FFT (# of IQ pairs)
 A    58        0200  data_discard    .set    512             ; number of words to discard from Rx FIFO before taking data
 A    59        0001  data_minor_sz   .set    1               ; number of acquisitions per half-buffer interrupt
 A    60        0418  abu_buff_sz             .set    1048    ; size of serial buffer (2x major frame size IN BYTES)
 A    61        0004  fsync_sz                .set    4               ; # of serial frame sync bytes (should be multiple of 4)
 A    62              
 A    63              ; Memory allocations
 A    64 002000       data_addr               .usect  ".data_v", 0x800, 1, 1
 A    65 000100       stackres                .usect  ".stack_v", 0x40, 1, 1
 A    66 000800       abu_buff_loc    .usect  ".sbuff_v", abu_buff_sz, 1, 1
 A    67        0A0C- abu_buff_hloc   .set    abu_buff_loc+abu_buff_sz/2      ; half-way
 A    68              
 A    69              ; Scratchpad RAM usage
 A    70        0060  bridge_count    .set    scratch
 A    71        0061  minor_count             .set    scratch+1
 A    72        0062  bspce_save              .set    scratch+2
 A    73        0063  bridge_size             .set    scratch+3
 A    74        0064  major_count             .set    scratch+4       ; two words!
 A    75        0066  nco_freq                .set    scratch+6       ; two words!
 A    76        0068  cfreq_tp                .set    scratch+8
 A    77              
 A    78 000140               .bss TempLmem,1*2,0,0  ;temporary dword
 A    79              
 A    80              
 A    81 000451       RXDSP_START
 A    82 000451       ago_main:
 A    83              
 A    84 000451 F6BD          rsbx    XF
 A    85              
 A    86              ; Processor setup
 A    87 000452 F7BB          ssbx    INTM            ; Disable interrupts 
 A    88 000453 7718          stm     #(stackres+0x40), SP    ; set Stack Pointer
         000454 0140-
 A    89 000455 771D          stm     #npmst,PMST     ; Set processor mode/status
         000456 00A3 
 A    90              ;       stm #defst0, ST0
 A    91              ;       stm     #defst1, ST1
 A    92 000457 F6B8          rsbx    SXM             ; Suppress sign extension 
 A    93              ;       rsbx    XF
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE    3

 A    94 000458 F495          nop                     ; Space for branch to app
 A    95 000459 F495          nop
 A    96                      
 A    97 00045a F7BD          ssbx    XF
 A    98 00045b EC40          rpt             #64
 A    99 00045c F495          nop
 A   100 00045d F6BD          rsbx    XF
 A   101               
 A   102 00045e       appcode:
 A   103              ;       stm     #0,state        ; Clear interrupt routine state
 A   104 00045e 7710          stm     #0,AR0          ; Clear auxilliary register 0
         00045f 0000 
 A   105 000460 7510          portw   AR0,wr_rs_rx    ; Reset AD6620 RSP
         000461 0000 
 A   106 000462 7510          portw   AR0,wr_disc     ; Enable parallel TLM drivers, I_Q out
         000463 8000 
 A   107 000464 7510          portw   AR0,wr_dog      ; Strobe watchdog timer
         000465 A000 
 A   108                      
 A   109 000466 7710          stm     #0,AR0  ; Clear all auxiliary registers
         000467 0000 
 A   110 000468 7711          stm     #0,AR1
         000469 0000 
 A   111 00046a 7712          stm     #0,AR2
         00046b 0000 
 A   112 00046c 7713          stm     #0,AR3
         00046d 0000 
 A   113 00046e 7714          stm     #0,AR4
         00046f 0000 
 A   114 000470 7715          stm     #0,AR5
         000471 0000 
 A   115 000472 7716          stm     #0,AR6
         000473 0000 
 A   116 000474 7717          stm     #0,AR7
         000475 0000 
 A   117              
 A   118 000476 7701          stm             #0FFh,IFR       ; Clear any pending interrupts
         000477 00FF 
 A   119 000478 7726          stm     #ntss,TCR       ; Stop timer, if running
         000479 0010 
 A   120                      .global read_init
 A   121              ; Main data code start
 A   122 00047a       read_init:
 A   123 00047a F074          call    rsp_reset
         00047b 01CD!
 A   124 00047c F074          call    rsp_init
         00047d 01E7!
 A   125 00047e F074          call    rsp_clear
         00047f 0234!
 A   126 000480 F074          call    rsp_mstart
         000481 01D4!
 A   127                      
 A   128 000482 F070          rpt             #4444   ; Let the AD6620 do its first initialization in peace
         000483 115C 
 A   129 000484 F495          nop
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE    4

 A   130                      
 A   131 000485 F074          call    rsp_reset
         000486 01CD!
 A   132                      
 A   133 000487 7410          portr   rs_rx_fifo, AR0    ; Reset Rx FIFO - also sent by wire to Slave
         000488 A000 
 A   134 000489 F495          nop
 A   135 00048a F495          nop     
 A   136              
 A   137 00048b 7710          stm     #lsb_sel, AR0   ; Reset acq_seq
         00048c 0002 
 A   138 00048d 7510          portw   AR0, wr_disc
         00048e 8000 
 A   139 00048f F495          nop
 A   140                      
 A   141              
 A   142                      ; TSP shutoff
 A   143                      
 A   144              ;       stm             #(tspc_Free+tspc_fsm+tspc_nXrst+tspc_nRrst), TSPC
 A   145 000490 7732          stm             #(tspc_Free+tspc_fsm), TSPC
         000491 8008 
 A   146                      
 A   147                      ; BSP prep
 A   148              
 A   149 000492 7722          stm             #(bspc_Free+bspc_fsm), BSPC0            ; reset BSP
         000493 8008 
 A   150 000494 7700          stm             #(int_bx), IMR                  ; unmask serial transmit interrupt
         000495 0020 
 A   151 000496 7723          stm             #(bspce_fe+bspce_bxe+bspce_haltx), BSPCE0       ; 10-bit words, enable tx autobuffer,
         000497 1480 
 A   152 000498 7738          stm             #(abu_buff_loc-0x800), AXR      ; where in the 2048 words of buffer RAM 
         000499 0000-
 A   153                                                                      ; does the transmit buffer start?
 A   154 00049a 7739          stm             #(abu_buff_sz), BKX             ; buffer size
         00049b 0418 
 A   155                      
 A   156              ; Clear entire serial buffer
 A   157 00049c 7714          stm             #abu_buff_loc, AR4
         00049d 0800-
 A   158 00049e 771A          stm             #abu_buff_sz-1, BRC
         00049f 0417 
 A   159 0004a0 F072          rptb    buff_init_loop - 1
         0004a1 04A3'
 A   160                      
 A   161 0004a2 7694          st              #0h, *AR4+
         0004a3 0000 
 A   162                      .global buff_init_loop, head_ramp, major_loop
 A   163 0004a4       buff_init_loop:
 A   164              
 A   165              ; set initial frequency table position
 A   166              
 A   167 0004a4 7668          st              #cfreq_table_sz-2, @cfreq_tp
         0004a5 0006 
 A   168              
 A   169              
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE    5

 A   170              ;       rsbx    INTM ; global interrupt enable
 A   171              
 A   172              ; All Aux Registers are fungible in the main loop: values which must be preserved
 A   173              ; over time are stored in the scratchpad RAM as defined above.  Note that only AR6
 A   174              ; and AR7 are required to be preserved by the DSP Library functions (and most others),
 A   175              ; all other ARx may be modified within function calls.
 A   176              
 A   177 0004a6 E800          ld              #0, A
 A   178 0004a7 4E64          dst             A, @major_count
 A   179                      
 A   180              ; initial cfreq_walk
 A   181              ;       call    cfreq_walk
 A   182                      
 A   183                      
 A   184              ; Set initial bspce_save such that the first acquisition will
 A   185              ; write to the second half of the serial buffer
 A   186 0004a8 7662          st              #bspce_xh, @bspce_save
         0004a9 0800 
 A   187                              
 A   188                      ; boot lag: insert >50 ms delay to allow everyone plenty of time to boot up
 A   189 0004aa 771A          stm             #16384, BRC
         0004ab 4000 
 A   190 0004ac F495          nop
 A   191 0004ad F495          nop
 A   192 0004ae F272          rptbd   boot_delay_loop - 1
         0004af 04B7'
 A   193 0004b0 F495          nop
 A   194 0004b1 F495          nop
 A   195                      
 A   196 0004b2 F495          nop
 A   197                      
 A   198 0004b3 F070          rpt             #4096
         0004b4 1000 
 A   199 0004b5 F495          nop
 A   200                      
 A   201 0004b6 F495          nop
 A   202 0004b7 F495          nop     
 A   203                      
 A   204 0004b8       boot_delay_loop:
 A   205              
 A   206 0004b8 F495          nop
 A   207 0004b9 F495          nop
 A   208                      
 A   209                      ; now synchronize units for the first time
 A   210 0004ba F074          call    sync_units
         0004bb 0604'
 A   211              
 A   212                      ; Start BSP transmits
 A   213 0004bc 7722          stm             #(bspc_Free + bspc_fsm + bspc_nXrst), BSPC0     ; have to hold fsm bit
         0004bd 8048 
 A   214 0004be F495          nop
 A   215 0004bf F495          nop
 A   216                      
 A   217              ****
 A   218              * Main loop
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE    6

 A   219              ****
 A   220              
 A   221 0004c0       major_loop:
 A   222                      .global major_loop
 A   223                      
 A   224                      ; Method:
 A   225                      ;
 A   226                      ; Master waits for acq_seq_rdy from Slaves, then raises acq_seq_out, starting synced
 A   227                      ; acquisition.  Note any previous acquisition will still be transferring its last
 A   228                      ; half-buffer, and the ABU will be set to halt transmissions when that half is done.
 A   229                      ; The acq_seq_rdy & out lines are both held high on All, until the end of this new 
 A   230                      ; acquisition and half-buffer fill.  Then Master waits for its own ABU haltx, and 
 A   231                      ; then for !acq_seq_rdy (signaling Slaves have hit ABU haltx), before dropping 
 A   232                      ; acq_seq_out, signaling time for the next synchronized ABU startup.
 A   233              
 A   234              ; original site for cfreq_walk, moving to put the initial setup before 
 A   235              ; the boot delay loop, then all subsequent to after header writing
 A   236 0004c0 F074          call    cfreq_walk
         0004c1 05CB'
 A   237                      
 A   238                      ; acquisition sync
 A   239 0004c2 F074          call    sync_units
         0004c3 0604'
 A   240                              
 A   241 0004c4 7410          portr   rs_rx_fifo, AR0    ; Reset Rx FIFO - also sent by wire to Slave
         0004c5 A000 
 A   242                              
 A   243 0004c6 60F8          cmpm    *(unit_designation), #0
         0004c7 043C'
         0004c8 0000 
 A   244 0004c9 F820          bc              slave_startup, NTC
         0004ca 04D1'
 A   245                      
 A   246                      ; if Master (unit 0) insert delay time to allow
 A   247                      ; Slaves time to detect acq_seq_out and start up
 A   248 0004cb EC80          rpt             #128
 A   249 0004cc F495          nop
 A   250                      
 A   251 0004cd F074          call    rsp_mstart      ; start digitizing as Master
         0004ce 01D4!
 A   252                      
 A   253 0004cf F073          b               data_acq_start
         0004d0 04D3'
 A   254                      
 A   255 0004d1       slave_startup:
 A   256              
 A   257 0004d1 F074          call    rsp_sstart      ; start digitizing as Slave
         0004d2 01DB!
 A   258              
 A   259                      
 A   260              ;
 A   261              ; Reads
 A   262              ;
 A   263 0004d3       data_acq_start:
 A   264              
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE    7

 A   265 0004d3 7660          st      #0, @bridge_count       ; reset bridged data counter
         0004d4 0000 
 A   266 0004d5 7661          st      #0, @minor_count        ; reset minor frame counter
         0004d6 0000 
 A   267              
 A   268 0004d7 7710          stm             #(acq_test5+lsb_sel), AR0
         0004d8 0022 
 A   269 0004d9 7510          portw   AR0, wr_disc
         0004da 8000 
 A   270                      
 A   271              ;
 A   272              ; Set wait states for Rx FIFO
 A   273              ;
 A   274 0004db 4828          ldm     SWWSR, A
 A   275 0004dc F120          ld      #65535, B
         0004dd FFFF 
 A   276 0004de F35C          xor     #7, #swwsr_is, B ; (0b111<<Nset XOR 0d65535) creates bitmask
         0004df 0007 
 A   277 0004e0 F280          and     B, A                     ; mask out bits of interest
 A   278 0004e1 F04C          or      #0, #swwsr_is, A ; (A or Nwait<<Nset) to set Nwait to Nset
         0004e2 0000 
 A   279                      ; Nwait = 0 means no additional waits
 A   280 0004e3 8828          stlm    A, SWWSR
 A   281              
 A   282                      .global pre_disc, pre_read
 A   283 0004e4       pre_disc:
 A   284              
 A   285              ; loop to read and discard first data out of AD6620
 A   286 0004e4 7712          stm             #(data_discard), AR2
         0004e5 0200 
 A   287 0004e6 F495          nop
 A   288 0004e7       rx_discard_loop:
 A   289                      ; read only if rx fifo is nonempty
 A   290 0004e7 7410          portr   rd_disc, AR0
         0004e8 8000 
 A   291 0004e9 F495          nop
 A   292 0004ea F495          nop
 A   293 0004eb 6110          bitf    AR0, rx_efo
         0004ec 0040 
 A   294                      
 A   295 0004ed F820          bc      discard_fifo_empty, NTC
         0004ee 04F2'
 A   296 0004ef 7411          portr   rd_rx_out, AR1          ; read data into AR1
         0004f0 0000 
 A   297 0004f1 6D8A          mar     *AR2-                           ; decrement word counter                
 A   298 0004f2       discard_fifo_empty:
 A   299              
 A   300 0004f2 6C82          banz    rx_discard_loop, *AR2
         0004f3 04E7'
 A   301                      
 A   302                      
 A   303              ; loop to read data from Rx FIFO into RAM
 A   304 0004f4 7710          stm     #2, AR0
         0004f5 0002 
 A   305 0004f6 7711          stm     #data_addr, AR1 ; set address for first data word
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE    8

         0004f7 2000-
 A   306 0004f8 7712          stm     #(data_n*2-1), AR2
         0004f9 03FF 
 A   307 0004fa       pre_read:
 A   308 0004fa F495          nop
 A   309 0004fb       rx_read_loop:
 A   310                      ; read only if rx fifo is nonempty
 A   311 0004fb 7413          portr   rd_disc, AR3
         0004fc 8000 
 A   312 0004fd F495          nop
 A   313 0004fe F495          nop
 A   314 0004ff 6113          bitf    AR3, rx_efo
         000500 0040 
 A   315                      
 A   316 000501 F820          bc      read_fifo_empty, NTC
         000502 0506'
 A   317                      
 A   318 000503 7491          portr   rd_rx_out, *AR1+
         000504 0000 
 A   319 000505 6D8A          mar     *AR2-                   ; decrement word counter
 A   320                      
 A   321 000506       read_fifo_empty:
 A   322              
 A   323 000506 6E82          banzd   rx_read_loop, *AR2
         000507 04FB'
 A   324 000508 F495          nop
 A   325 000509 F495          nop
 A   326                      
 A   327              ;
 A   328              ; Set wait states for other stuff (full 7)
 A   329              ;
 A   330 00050a 4828          ldm     SWWSR, A
 A   331 00050b F04C          or      #7, #swwsr_is, A ; (A or Nwait<<Nset) to set Nwait to Nset
         00050c 0007 
 A   332 00050d 8828          stlm    A, SWWSR
 A   333 00050e F495          nop
 A   334 00050f F495          nop
 A   335                      
 A   336              ; Stop acquisition
 A   337 000510 F074          call    rsp_reset
         000511 01CD!
 A   338              
 A   339                      ; drop acq flags
 A   340 000512 7710          stm             #lsb_sel, AR0
         000513 0002 
 A   341 000514 7510          portw   AR0, wr_disc
         000515 8000 
 A   342                      
 A   343              *
 A   344              * End data collection, begin serial data handling
 A   345              *
 A   346              
 A   347 000516 7663          st      #4*data_n, @bridge_size
         000517 0800 
 A   348              
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE    9

 A   349              ; entry point for bridging data transfers over multiple serial half-buffers
 A   350 000518       bridge_data:
 A   351                      .global bridge_data
 A   352              
 A   353 000518 7710          stm             #(lsb_sel), AR0 ; send acq_seq, set lsb_sel
         000519 0002 
 A   354 00051a 7510          portw   AR0, wr_disc
         00051b 8000 
 A   355              
 A   356 00051c F495          nop
 A   357 00051d F495          nop
 A   358                      ; Determine serial buffer position
 A   359 00051e 7713          stm             #abu_buff_loc, AR3      ; load buffer base
         00051f 0800-
 A   360                      
 A   361 000520 6162          bitf    @bspce_save, #bspce_xh          ; read XH out of stored BSPCE register
         000521 0800 
 A   362 000522 F495          nop
 A   363 000523 F495          nop
 A   364 000524 F820          bc              buff_skip, NTC  ; if first half _finished_ (XH=0, NTC), do nothing
         000525 052C'
 A   365                      
 A   366 000526 6B13          addm    #(abu_buff_sz/2), @AR3
         000527 020C 
 A   367 000528 7710          stm             #(lsb_sel), AR0
         000529 0002 
 A   368 00052a 7510          portw   AR0, wr_disc
         00052b 8000 
 A   369              
 A   370 00052c       buff_skip:
 A   371 00052c F495          nop
 A   372 00052d F495          nop
 A   373 00052e F495          nop
 A   374 00052f F495          nop
 A   375              
 A   376 000530       abu_first_half:
 A   377                      .global abu_first_half
 A   378              
 A   379 000530 F7BB          ssbx    INTM
 A   380                      
 A   381              ; Clear serial buffer half
 A   382 000531 E734          mvmm    AR3, AR4
 A   383 000532 F495          nop
 A   384 000533 F070          rpt             #(abu_buff_sz/2-1)
         000534 020B 
 A   385 000535 7694          st              #0x00, *AR4+
         000536 0000 
 A   386                      
 A   387                      
 A   388              ; reset AR4 for data copy
 A   389 000537 E734          mvmm    AR3, AR4
 A   390 000538 F495          nop
 A   391 000539 F495          nop
 A   392                      
 A   393 00053a       abu_fill_start:
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   10

 A   394                      .global abu_fill_start
 A   395              
 A   396              
 A   397                      ; two-byte frame sync 0xEB90
 A   398 00053a 7694          st              #0xEB, *AR4+
         00053b 00EB 
 A   399 00053c 7694          st              #0x90, *AR4+
         00053d 0090 
 A   400              
 A   401                      ; two-byte infofoop
 A   402 00053e 6FF8          ld              *(unit_designation), #6, A      ; byte 1, 2 MSB, unit number
         00053f 043C'
         000540 0C46 
 A   403 000541 1A61          or              @minor_count, A                         ; byte 1, 6 LSB, minor frame number
 A   404 000542 8094          stl             A, *AR4+
 A   405 000543 5664          dld             @major_count, A                         ; byte 2, 8 bit, major frame number
 A   406 000544 F030          and             #0xFF, A
         000545 00FF 
 A   407 000546 8094          stl             A, *AR4+
 A   408              
 A   409 000547       dinner_is_ready:
 A   410                      .global dinner_is_ready
 A   411                      
 A   412              
 A   413 000547 F120          ld              #((abu_buff_sz/2-fsync_sz)/2-1), B      ; let's stick the BRC value here...
         000548 0103 
 A   414                      
 A   415                      ; If haltx is true, we are starting a new major frame, so write the header
 A   416 000549 6123          bitf    BSPCE0, #bspce_haltx
         00054a 1000 
 A   417 00054b F820          bc              header_skip, NTC
         00054c 0551'
 A   418                      
 A   419 00054d F074          call    hwrite  ; write out header, uses & modified write address in AR4
         00054e 061A'
 A   420 00054f F310          sub             #16, B  ; oops, 32 bytes less space in this half buffer
         000550 0010 
 A   421              
 A   422                      ; now that the header is written, we'll set the frequencies up for the next MajFr
 A   423                      ; note cfreq_walk uses A, B, and AR0, so we need to save B before calling here
 A   424                      
 A   425              ;       stlm    B, AR1 ; save B
 A   426              ;       call    cfreq_walk
 A   427              ;       ldm             AR1, B ; restore B
 A   428              
 A   429 000551       header_skip:
 A   430                      
 A   431                                              
 A   432                      ; copy raw data (words) into serial buffer (bytes)
 A   433 000551 F020          ld              #data_addr, A
         000552 2000-
 A   434 000553 6F60          add             @bridge_count, #-1, A   ; div by 2 to increment input word-wise
         000554 0C1F 
 A   435 000555 8812          stlm    A, AR2  ; store a copy of the data to AR2
 A   436 000556 891A          stlm    B, BRC  ; and here's our BRC setup
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   11

 A   437                      
 A   438 000557 7210          mvdm    @bridge_size, AR0       ; goal bridge size
         000558 0063 
 A   439 000559 7211          mvdm    @bridge_count, AR1      ; current count
         00055a 0060 
 A   440                      
 A   441 00055b F072          rptb    rawdata_loop - 1
         00055c 0571'
 A   442              
 A   443 00055d 6F82          ld              *AR2, -8, A     ; load (data word) >> 8 to Acc
         00055e 0C58 
 A   444 00055f F030          and             #0xFF, A        ; mask to low-byte
         000560 00FF 
 A   445 000561 8094          stl             A, *AR4+        ; save to serial buffer
 A   446 000562 6D91          mar             *AR1+           ; count bytes
 A   447                      
 A   448 000563 1092          ld              *AR2+, A        ; reload and increment
 A   449 000564 F030          and             #0xFF, A        ; mask
         000565 00FF 
 A   450 000566 8094          stl             A, *AR4+        ; save
 A   451 000567 6D91          mar             *AR1+           ; count bytes
 A   452                      
 A   453 000568 F5A9          cmpr    LT, AR1                         ; If we're not done with a bridged data sequence, 
 A   454 000569 F495          nop
 A   455 00056a F495          nop
 A   456 00056b FD20          xc              1, NTC
 A   457 00056c F6BF          rsbx    BRAF
 A   458 00056d F495          nop
 A   459 00056e F495          nop
 A   460 00056f F495          nop
 A   461 000570 F495          nop
 A   462 000571 F495          nop
 A   463                      .global rawdata_loop, dbg_transfer_skip
 A   464 000572       rawdata_loop:
 A   465              
 A   466 000572 F495          nop
 A   467 000573 F495          nop
 A   468                      
 A   469 000574 7311          mvmd    AR1, @bridge_count
         000575 0060 
 A   470              
 A   471              ; Bit reverse and add start/stop bits
 A   472 000576 4813          ldm             AR3, A
 A   473 000577 F120          ld              #(abu_buff_sz/2), B
         000578 020C 
 A   474              
 A   475 000579 F074          call    _serial_cook
         00057a 0670!
 A   476                      
 A   477              
 A   478              ;       rsbx    INTM
 A   479                      
 A   480 00057b 6B61          addm    #1, @minor_count
         00057c 0001 
 A   481 00057d F495          nop
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   12

 A   482 00057e F495          nop
 A   483 00057f 7710          stm             #(lsb_sel), AR0
         000580 0002 
 A   484 000581 7510          portw   AR0, wr_disc
         000582 8000 
 A   485              
 A   486              ; buffer is now loaded
 A   487 000583 F074          call    rsp_clear       ; clear NCO RAM, do it here since we have some free time
         000584 0234!
 A   488              
 A   489              ; Strobe watchdog- once per minor frame cycle
 A   490 000585 7710          stm             #0, AR0        ; Data is not used- just the wr_dog strobe
         000586 0000 
 A   491 000587 7510          portw   AR0,wr_dog     ; Strobe the watchdog
         000588 A000 
 A   492              
 A   493              ; clear interrupt flags, then idle until an interrupt.
 A   494                      .global pre_sleep
 A   495 000589       pre_sleep:
 A   496                      
 A   497 000589 F7BB          ssbx    INTM
 A   498 00058a 7701          stm             #0FFh,IFR               ; Clear any pending interrupts
         00058b 00FF 
 A   499                      
 A   500 00058c F6E1          idle    2       ; and now...we wait.
 A   501              
 A   502                      .global post_sleep
 A   503 00058d       post_sleep:
 A   504                      
 A   505              ; check for aux int -> serial monitor
 A   506              ;       bitf    IFR, #int_3
 A   507              ;       cc              inth_3, TC
 A   508                      
 A   509              ; make sure we had a serial interrupt
 A   510 00058d 6101          bitf    IFR, #int_bx
         00058e 0020 
 A   511 00058f F820          bc              pre_sleep, NTC  ; stray interrupt, go back to IDLE
         000590 0589'
 A   512                      
 A   513 000591 F495          nop
 A   514                              
 A   515 000592 7701          stm             #int_bx, IFR    ; clear int flag
         000593 0020 
 A   516                      
 A   517 000594 7323          mvmd    BSPCE0, @bspce_save ; store control extension register
         000595 0062 
 A   518                      
 A   519              ; if this is a new major frame, we need to sync
 A   520              ; everyone up by waiting for all ABU haltx.
 A   521              
 A   522 000596 6123          bitf    BSPCE0, #bspce_haltx
         000597 1000 
 A   523 000598 F820          bc              abu_restart_skip, NTC
         000599 05A9'
 A   524              
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   13

 A   525 00059a       abu_haltx_wait:
 A   526                      .global abu_haltx_wait
 A   527              
 A   528                      ; ABU has halted.  Reset ABU, and synchronize
 A   529 00059a 7723          stm             #(bspce_fe+bspce_bxe), BSPCE0   ; 10-bit words, enable tx ABU, disable haltx
         00059b 0480 
 A   530              
 A   531 00059c F074          call    sync_units
         00059d 0604'
 A   532                      
 A   533                      ; Start BSP transmits
 A   534 00059e 7722          stm             #(bspc_Free + bspc_fsm + bspc_nXrst), BSPC0     ; have to hold fsm bit
         00059f 8048 
 A   535 0005a0 F495          nop
 A   536 0005a1 F495          nop
 A   537                      
 A   538 0005a2 F070          rpt             #16383
         0005a3 3FFF 
 A   539 0005a4 F495          nop
 A   540                      
 A   541              ; unset acq_seq, keep lsb_sel
 A   542 0005a5 7710          stm             #lsb_sel, AR0
         0005a6 0002 
 A   543 0005a7 7510          portw   AR0, wr_disc
         0005a8 8000 
 A   544              
 A   545 0005a9       abu_restart_skip:
 A   546                      .global abu_restart_skip
 A   547                      
 A   548 0005a9 7210          mvdm    @bridge_size, AR0       ; need to copy these 
         0005aa 0063 
 A   549 0005ab 7211          mvdm    @bridge_count, AR1      ; to use CMPR
         0005ac 0060 
 A   550 0005ad F495          nop
 A   551 0005ae F495          nop
 A   552 0005af F5A9          cmpr    LT, AR1                         ; If we're not done with a bridged data sequence, 
 A   553 0005b0 F830          bc              bridge_data, TC ; jump to bridge_data to continue transfers, otherwise...
         0005b1 0518'
 A   554              
 A   555 0005b2 5664          dld             @major_count, A ; increment major frame counter
 A   556 0005b3 F000          add             #1, A
         0005b4 0001 
 A   557 0005b5 4E64          dst             A, @major_count
 A   558                      
 A   559                      ; The final half is transmitting, we want to halt when it finishes.
 A   560 0005b6 7710          stm             #(lsb_sel), AR0
         0005b7 0002 
 A   561 0005b8 7510          portw   AR0, wr_disc
         0005b9 8000 
 A   562 0005ba 6923          orm             #bspce_haltx, BSPCE0
         0005bb 1000 
 A   563 0005bc F495          nop
 A   564 0005bd F495          nop
 A   565              ;       stm             #(lsb_sel), AR0
 A   566              ;       portw   AR0, wr_disc
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   14

 A   567              
 A   568 0005be F073          b               major_loop              ; new data acquisition
         0005bf 04C0'
 A   569              
 A   570              ;;
 A   571              ; Main acquisiton ('appcode') branch done
 A   572              ;;      
 A   573              
 A   574              ;;
 A   575              ; Interrupts
 A   576              ;;
 A   577              
 A   578              ; Non-Maskable Interrupt
 A   579              ;               this is hit by the watchdog
 A   580 0005c0       int_nmi:
 A   581              
 A   582 0005c0 F495          nop     
 A   583 0005c1 771D          stm             #npmst, PMST    ; Reset PMST to be sure IPTR -> 0x80
         0005c2 00A3 
 A   584                      
 A   585              ; Alternative: IPTR=0x1FF, OVLY=1, all else =0
 A   586              ; This should set things up to completely reload the program from the EPROM on reset
 A   587              ;       stm             #0xFFA0, PMST
 A   588              
 A   589 0005c3 F7E0          reset   ; I don't have to take this.  ...I'm going home.
 A   590                      
 A   591 0005c4 FC00          ret             ; should never get here!
 A   592                      
 A   593              
 A   594 0005c5       inth_3:
 A   595 0005c5 F7BB          ssbx    INTM
 A   596 0005c6 7701          stm             #int_3, IFR     ; clear int flag
         0005c7 0100 
 A   597              
 A   598                      ; call serial monitor
 A   599              
 A   600                      
 A   601              ;       calld   _RxDSP_Monitor
 A   602              ;       stm             #bspce_haltx, BSPCE      ; tell serial transmit to halt after completing this half-bu
 A   603              
 A   604                      
 A   605 0005c8 FE00          retd
 A   606 0005c9 F495          nop
 A   607 0005ca F495          nop
 A   608              
 A   609              ****
 A   610              * cfreq_walk
 A   611              *
 A   612              * walks through the table of center frequencies at label #cfreq_table
 A   613              *
 A   614              * stores table position @cfreq_tp and current NCO value as a 32-bit number @nco_freq
 A   615              *
 A   616              ****
 A   617              
 A   618 0005cb       cfreq_walk:
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   15

 A   619              
 A   620 0005cb 7410          portr   rd_disc, AR0
         0005cc 8000 
 A   621 0005cd F495          nop
 A   622 0005ce F495          nop
 A   623 0005cf 6110          bitf    AR0, #trm_28
         0005d0 0001 
 A   624 0005d1 F820          bc              walk_skip, NTC  ; if trm_28 is low (NTC, jumper on), skip the walk
         0005d2 05E6'
 A   625              
 A   626 0005d3 6B68          addm    #2, @cfreq_tp
         0005d4 0002 
 A   627 0005d5 F495          nop
 A   628 0005d6 F495          nop
 A   629 0005d7 6068          cmpm    @cfreq_tp, #cfreq_table_sz
         0005d8 0008 
 A   630 0005d9 F495          nop
 A   631 0005da F495          nop
 A   632 0005db FF30          xc              2, TC
 A   633 0005dc 7668          st              #0, @cfreq_tp
         0005dd 0000 
 A   634                      
 A   635 0005de F495          nop
 A   636 0005df F495          nop
 A   637                      
 A   638 0005e0 F020          ld              #(cfreq_table), A
         0005e1 0447'
 A   639 0005e2 0068          add             @cfreq_tp, A
 A   640 0005e3 8810          stlm    A, AR0
 A   641              
 A   642 0005e4 F073          b               cfreq_commit
         0005e5 05E8'
 A   643              
 A   644 0005e6       walk_skip:
 A   645                      ; load a single frequency instead
 A   646                      
 A   647 0005e6 7710          stm             #(cfreq_test), AR0
         0005e7 044F'
 A   648                      
 A   649 0005e8       cfreq_commit:
 A   650                      
 A   651 0005e8 F495          nop
 A   652 0005e9 F495          nop
 A   653                      
 A   654 0005ea 1190          ld              *AR0+, B
 A   655 0005eb 8166          stl             B, @nco_freq
 A   656 0005ec F3E8          sftl    B, #8
 A   657 0005ed F3E8          sftl    B, #8
 A   658 0005ee 1080          ld              *AR0, A
 A   659 0005ef 8067          stl             A, @(nco_freq+1)
 A   660 0005f0 F2A0          or              B, A
 A   661                      
 A   662 0005f1 F495          nop
 A   663 0005f2 F495          nop             
 A   664              
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   16

 A   665 0005f3 7710          stm             #acq_ant_1, AR0         ; enable antenna 1
         0005f4 0008 
 A   666                      
 A   667                      ; frequency is in A.  subtract toggle freq and save result to B
 A   668 0005f5 F161          sub             #cfreq_toggle1, #16, A, B
         0005f6 0999 
 A   669 0005f7 F310          sub             #cfreq_toggle2, B
         0005f8 9A3B 
 A   670                      
 A   671 0005f9 FF4A          xc              2, BGEQ                                 ; if B>=0, cfreq >= toggle freq
 A   672 0005fa 7710          stm             #acq_ant_2, AR0         ; so enable antenna 2
         0005fb 0010 
 A   673 0005fc F495          nop
 A   674                      
 A   675 0005fd 7510          portw   AR0, wr_disc
         0005fe 8000 
 A   676              
 A   677 0005ff F074          call    rsp_freq
         000600 01E2!
 A   678                              
 A   679 000601 FE00          retd
 A   680 000602 F495          nop
 A   681 000603 F495          nop
 A   682              
 A   683              
 A   684              ****
 A   685              * sync_units
 A   686              *
 A   687              * synchronizes master/slave units by toggling and waiting for latched lines
 A   688              *
 A   689              ****
 A   690              
 A   691 000604       sync_units:
 A   692                      
 A   693                      ; Raise test2 line.  On the Master this should do nothing (NC),
 A   694                      ; on the Slaves it signals the Master they are ready.
 A   695              
 A   696 000604 7710          stm             #(acq_seq_rdy+lsb_sel), AR0
         000605 0006 
 A   697 000606 7510          portw   AR0, wr_disc
         000607 8000 
 A   698 000608 F495          nop
 A   699 000609 F495          nop
 A   700                      
 A   701                      ; Check status of TSP, wait for IN1 & IN2 high
 A   702 00060a       ready_loop:
 A   703              
 A   704 00060a F495          nop
 A   705                      
 A   706 00060b 6132          bitf    TSPC, #tspc_in0
         00060c 0100 
 A   707 00060d F820          bc              ready_loop, NTC
         00060e 060A'
 A   708                      
 A   709 00060f 6132          bitf    TSPC, #tspc_in1
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   17

         000610 0200 
 A   710 000611 F820          bc              ready_loop, NTC
         000612 060A'
 A   711                      
 A   712                      ; Raise acq_seq_out--on the Master this signals the Slaves to start, 
 A   713                      ; on the Slaves it does nothing (NC).
 A   714                      
 A   715 000613 7710          stm             #(acq_seq_out+acq_seq_rdy+lsb_sel), AR0 ; send acq_seq_out
         000614 0086 
 A   716 000615 7510          portw   AR0, wr_disc
         000616 8000 
 A   717              
 A   718              ;       rpt             #1024
 A   719              ;       nop
 A   720              ;       
 A   721              ;       stm             #(lsb_sel), AR0
 A   722              ;       portw   AR0, wr_disc
 A   723              
 A   724 000617 FE00          retd
 A   725 000618 F495          nop
 A   726 000619 F495          nop
 A   727                      
 A   728                      
 A   729              ****
 A   730              * hwrite
 A   731              *
 A   732              * Writes a 32-bit header:
 A   733              *
 A   734              * <0xFE6B2840><RxDSP><Unit #><Ver #><NCOF><MFCB><00000000>
 A   735              *
 A   736              ****
 A   737              
 A   738                      .mmregs
 A   739              
 A   740 00061a       hwrite:
 A   741                      .global hwrite
 A   742              
 A   743 00061a 4A13          pshm    AR3
 A   744              
 A   745              ; 4-byte sync
 A   746 00061b 7713          stm             #static_header, AR3     ; Point to static header words
         00061c 0660'
 A   747 00061d F070          rpt             #static_header_len              ; <SYNC><RxDSP>
         00061e 0008 
 A   748 00061f E59A          mvdd    *AR3+, *AR4+
 A   749                      
 A   750 000620 10F8          ld              *(unit_designation), A
         000621 043C'
 A   751 000622 F000          add             #0x30, A        ; we want the header unit number to be in ASCII
         000623 0030 
 A   752 000624 8094          stl             A, *AR4+
 A   753                      
 A   754 000625 7713          stm             #station_code, AR3
         000626 0441'
 A   755 000627 EC01          rpt             #1
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   18

 A   756 000628 E59A          mvdd    *AR3+, *AR4+
 A   757                      
 A   758 000629 7713          stm             #code_version, AR3
         00062a 043D'
 A   759 00062b EC03          rpt             #3
 A   760 00062c E59A          mvdd    *AR3+, *AR4+
 A   761                      
 A   762 00062d 7713          stm             nco_freq, AR3
         00062e 0066 
 A   763 00062f 6F83          ld              *AR3, #-8, A
         000630 0C58 
 A   764 000631 F030          and             #0xFF, A
         000632 00FF 
 A   765 000633 8094          stl             A, *AR4+
 A   766 000634 1093          ld              *AR3+, A        ; inc to second word
 A   767 000635 F030          and             #0xFF, A
         000636 00FF 
 A   768 000637 8094          stl             A, *AR4+
 A   769 000638 6F83          ld              *AR3, #-8, A
         000639 0C58 
 A   770 00063a F030          and             #0xFF, A
         00063b 00FF 
 A   771 00063c 8094          stl             A, *AR4+
 A   772 00063d 1083          ld              *AR3, A
 A   773 00063e F030          and             #0xFF, A
         00063f 00FF 
 A   774 000640 8094          stl             A, *AR4+
 A   775                              
 A   776                      
 A   777 000641 7713          stm             #band_width, AR3
         000642 0443'
 A   778 000643 EC03          rpt             #3
 A   779 000644 E59A          mvdd    *AR3+, *AR4+
 A   780              
 A   781 000645 7713          stm             major_count, AR3
         000646 0064 
 A   782 000647 6F83          ld              *AR3, #-8, A
         000648 0C58 
 A   783 000649 F030          and             #0xFF, A
         00064a 00FF 
 A   784 00064b 8094          stl             A, *AR4+
 A   785 00064c 1093          ld              *AR3+, A        ; inc to second word
 A   786 00064d F030          and             #0xFF, A
         00064e 00FF 
 A   787 00064f 8094          stl             A, *AR4+
 A   788 000650 6F83          ld              *AR3, #-8, A
         000651 0C58 
 A   789 000652 F030          and             #0xFF, A
         000653 00FF 
 A   790 000654 8094          stl             A, *AR4+
 A   791 000655 1083          ld              *AR3, A
 A   792 000656 F030          and             #0xFF, A
         000657 00FF 
 A   793 000658 8094          stl             A, *AR4+
 A   794                      
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   19

 A   795 000659 EC03          rpt             #3
 A   796 00065a 7694          st              #0, *AR4+
         00065b 0000 
 A   797                      
 A   798 00065c 8A13          popm    AR3
 A   799                      
 A   800 00065d FE00          retd
 A   801 00065e F495          nop
 A   802 00065f F495          nop
 A   803              
 A   804 000660       static_header:
 A   805 000660 00FE                  .word   0xFE, 0x6B, 0x28, 0x40
         000661 006B 
         000662 0028 
         000663 0040 
 A   806 000664 0052                  .string "RxDSP"
         000665 0078 
         000666 0044 
         000667 0053 
         000668 0050 
 A   807 000669       static_header_end:
 A   808                      
 A   809        0008  static_header_len       .set    static_header_end-static_header-1
 A   810              
 A   811              ;       .include "ad6620.asm"
 A   812              ;       .include "cbrev.asm"
 A   813              
 A   814                      .end

No Assembly Errors, No Assembly Warnings
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   20

LABEL                                VALUE       DEFN    REF

.TMS320C540                         000000          0 
.TMS320C541                         000000          0 
.TMS320C541A                        000000          0 
.TMS320C542                         000001          0 
.TMS320C543                         000000          0 
.TMS320C544                         000000          0 
.TMS320C545                         000000          0 
.TMS320C545LP                       000000          0 
.TMS320C546                         000000          0 
.TMS320C546LP                       000000          0 
.TMS320C548                         000000          0 
.TMS320C549                         000000          0 
ARCR                                   REF             A  16 
BMAR                                   REF             A  16 
CBER1                                  REF             A  17 
CBER2                                  REF             A  17 
CBSR1                                  REF             A  17 
CBSR2                                  REF             A  17 
CR                                  00000d      B 130 
CRLF                                000d0a      B 132 
DBMR                                   REF             A  16 
ESC                                 00001b      B 133 
INDX                                   REF             A  16 
LF                                  00000a      B 131 
PREG                                   REF             A  16 
RXDSP_START                         000451'     A  81  A  18 
TREG1                                  REF             A  16 
TREG2                                  REF             A  17 
TempLmem                            000140-     A  78 
ZERO                                   REF             A  16 
__TI_ASSEMBLER_VERSION__            3d10d0          0 
__far_mode                          000000          0 
__lflags                            000000          0 
__no_fret                           000000          0 
__stores_bug                        000000          0 
_serial_cook                           REF             A  20  A 475 
abu_buff_hloc                       000a0c-     A  67 
abu_buff_loc                        000800-     A  66  A  67  A 152  A 157  A 359 
abu_buff_sz                         000418      A  60  A  66  A  67  A 154  A 158 
                                                       A 366  A 384  A 413  A 473 
abu_fill_start                      00053a'     A 393  A 394 
abu_first_half                      000530'     A 376  A 377 
abu_haltx_wait                      00059a'     A 525  A 526 
abu_restart_skip                    0005a9'     A 545  A 523  A 546 
acq_ant_1                           000008      B 152  A 665 
acq_ant_2                           000010      B 153  A 672 
acq_seq_in                          000002      B 161 
acq_seq_len                         007fff      B 143 
acq_seq_out                         000080      B 156  A 715 
acq_seq_rdy                         000004      B 151  A 696  A 715 
acq_test5                           000020      B 154  A 268 
acq_test6                           000040      B 155 
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   21

LABEL                                VALUE       DEFN    REF

ago_main                            000451'     A  82  A  25 
amr                                 000007      B 116 
appcode                             00045e'     A 102 
band_width                          000443'     A  36  A 777 
boot_delay_loop                     0004b8'     A 204  A 192 
bridge_count                        000060      A  70  A 265  A 434  A 439  A 469 
                                                       A 549 
bridge_data                         000518'     A 350  A  24  A 351  A 553 
bridge_size                         000063      A  73  A 347  A 438  A 548 
bspc_Free                           008000      B 204  A 149  A 213  A 534 
bspc_RSRfull                        002000      B 202 
bspc_Rrdy                           000400      B 199 
bspc_Soft                           004000      B 203 
bspc_XSRfull                        001000      B 201 
bspc_Xrdy                           000800      B 200 
bspc_dlb                            000002      B 190 
bspc_fo                             000004      B 191 
bspc_fsm                            000008      B 192  A 149  A 213  A 534 
bspc_in0                            000100      B 197 
bspc_in1                            000200      B 198 
bspc_mcm                            000010      B 193 
bspc_nRrst                          000080      B 196 
bspc_nXrst                          000040      B 195  A 213  A 534 
bspc_txm                            000020      B 194 
bspce_bre                           002000      B 217 
bspce_bxe                           000400      B 214  A 151  A 529 
bspce_clkp                          000040      B 210 
bspce_fe                            000080      B 211  A 151  A 529 
bspce_fig                           000100      B 212 
bspce_fsp                           000020      B 209 
bspce_haltr                         008000      B 219 
bspce_haltx                         001000      B 216  A 151  A 416  A 522  A 562 
bspce_pcm                           000200      B 213 
bspce_rh                            004000      B 218 
bspce_save                          000062      A  72  A 186  A 361  A 517 
bspce_xh                            000800      B 215  A 186  A 361 
buff_clear_loop                        REF             A  24 
buff_init_loop                      0004a4'     A 163  A 159  A 162 
buff_skip                           00052c'     A 370  A 364 
cfreq_commit                        0005e8'     A 649  A 642 
cfreq_table                         000447'     A  42  A  48  A 638 
cfreq_table_end                     00044f'     A  47  A  48 
cfreq_table_sz                      000008      A  48  A 167  A 629 
cfreq_test                          00044f'     A  50  A 647 
cfreq_toggle1                       000999      A  52  A 668 
cfreq_toggle2                       009a3b      A  53  A 669 
cfreq_tp                            000068      A  76  A 167  A 626  A 629  A 633 
                                                       A 639 
cfreq_walk                          0005cb'     A 618  A 236 
clk_rx_out                          002000      B  56 
code_version                        00043d'     A  33  A 758 
data_acq_start                      0004d3'     A 263  A 253 
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   22

LABEL                                VALUE       DEFN    REF

data_addr                           002000-     A  64  A 305  A 433 
data_discard                        000200      A  58  A 286 
data_minor_sz                       000001      A  59 
data_n                              000200      A  57  A 306  A 347 
dbg_transfer_skip                      REF             A 463 
defst0                              001800      B  14 
defst1                              002900      B  21 
dinner_is_ready                     000547'     A 409  A 410 
disc_0                              000001      B 160 
discard_fifo_empty                  0004f2'     A 298  A 295 
dr0                                 000000      B 109 
dr1                                 000001      B 110 
dr2                                 000002      B 111 
dr3                                 000003      B 112 
dr4                                 000004      B 113 
find_me                             00043a'     A  31 
fsync_sz                            000004      A  61  A 413 
head_ramp                              REF             A 162 
header_skip                         000551'     A 429  A 417 
hwrite                              00061a'     A 740  A 419  A 741 
int_0                               000001      B  95 
int_1                               000002      B  96 
int_2                               000004      B  97 
int_3                               000100      B 103  A 596 
int_br                              000010      B  99 
int_bx                              000020      B 100  A 150  A 510  A 515 
int_nmi                             0005c0'     A 580  A  25 
int_t                               000008      B  98 
int_tr                              000040      B 101 
int_tx                              000080      B 102 
inth_3                              0005c5'     A 594 
iq_len                              00003f      B 142 
lar                                 000006      B 115 
lsb_sel                             000002      B 150  A 137  A 268  A 340  A 353 
                                                       A 367  A 483  A 542  A 560 
                                                       A 696  A 715 
major_count                         000064      A  74  A 178  A 405  A 555  A 557 
                                                       A 781 
major_loop                          0004c0'     A 221  A 162  A 222  A 568 
minor_count                         000061      A  71  A 266  A 403  A 480 
nco_freq                            000066      A  75  A 655  A 659  A 762 
nload                               000020      B  88 
npmst                               0000a3      B   4  A  89  A 583 
nprd                                00095f      B  89 
ntddr                               000000      B  86 
ntss                                000010      B  85  A 119 
nwait                               00063f      B  90 
par_tm_en                           000001      B 149 
post_sleep                          00058d'     A 503  A 502 
pre_disc                            0004e4'     A 283  A 282 
pre_read                            0004fa'     A 307  A 282 
pre_sleep                           000589'     A 495  A 494  A 511 
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   23

LABEL                                VALUE       DEFN    REF

prom                                008000      B  35 
rawdata_loop                        000572'     A 464  A 441  A 463 
rd_disc                             008000      B  59  A 290  A 311  A 620 
rd_out2                             006000      B  58 
rd_rsv                              00e000      B  62 
rd_rx                               004000      B  57 
rd_rx_out                           000000      B  55  A 296  A 318 
read_fifo_empty                     000506'     A 321  A 316 
read_init                           00047a'     A 122  A 120 
ready_loop                          00060a'     A 702  A 707  A 710 
rs_fifo                             00c000      B  61 
rs_rx_fifo                          00a000      B  60  A 133  A 241 
rsp_clear                              REF             A  21  A 125  A 487 
rsp_freq                               REF             A  21  A 677 
rsp_init                               REF             A  21  A 124 
rsp_mstart                             REF             A  21  A 126  A 251 
rsp_reset                              REF             A  21  A 123  A 131  A 337 
rsp_sstart                             REF             A  21  A 257 
rsv                                 000005      B 114 
rx_discard_loop                     0004e7'     A 288  A 300 
rx_efo                              000040      B 166  A 293  A 314 
rx_ffo                              000020      B 165 
rx_hfo                              000080      B 167 
rx_read_loop                        0004fb'     A 309  A 323 
scratch                             000060      B  36  A  70  A  71  A  72  A  73 
                                                       A  74  A  75  A  76 
seq_len                             00ffff      B 144 
slave_startup                       0004d1'     A 255  A 244 
stack                               00013f      B  37 
stackres                            000100-     A  65  A  88 
static_header                       000660'     A 804  A 746  A 809 
static_header_end                   000669'     A 807  A 809 
static_header_len                   000008      A 809  A 747 
station_code                        000441'     A  34  A 754 
swwsr_ds0                           000006      B  73 
swwsr_ds1                           000009      B  74 
swwsr_is                            00000c      B  75  A 276  A 278  A 331 
swwsr_ps0                           000000      B  71 
swwsr_ps1                           000003      B  72 
sync_units                          000604'     A 691  A 210  A 239  A 531 
test_28                             000002      B 126 
tlm_efo                             000008      B 163 
tlm_ffo                             000004      B 162 
tlm_hfo                             000010      B 164 
transfer                               REF             A  23 
transfer_table_sz                      REF             A  23 
trm_28                              000001      B 125  A 623 
tspc_Free                           008000      B 186  A 145 
tspc_RSRfull                        002000      B 184 
tspc_Rrdy                           000400      B 181 
tspc_Soft                           004000      B 185 
tspc_XSRfull                        001000      B 183 
TMS320C54x Assembler PC v4.2.0 Wed Jul 31 21:00:05 2013

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.2.abs                                                        PAGE   24

LABEL                                VALUE       DEFN    REF

tspc_Xrdy                           000800      B 182 
tspc_dlb                            000002      B 172 
tspc_fo                             000004      B 173 
tspc_fsm                            000008      B 174  A 145 
tspc_in0                            000100      B 179  A 706 
tspc_in1                            000200      B 180  A 709 
tspc_mcm                            000010      B 175 
tspc_nRrst                          000080      B 178 
tspc_nXrst                          000040      B 177 
tspc_tdm                            000001      B 171 
tspc_txm                            000020      B 176 
unit_designation                    00043c'     A  32  A 243  A 402  A 750 
walk_skip                           0005e6'     A 644  A 624 
wr_disc                             008000      B  48  A 106  A 138  A 269  A 341 
                                                       A 354  A 368  A 484  A 543 
                                                       A 561  A 675  A 697  A 716 
wr_dog                              00a000      B  49  A 107  A 491 
wr_out                              00c000      B  50 
wr_out0                             002000      B  44 
wr_out1                             004000      B  45 
wr_rd_fifo                          006000      B  47 
wr_rs_rx                            000000      B  43  A 105 
wr_rsv                              00e000      B  51 
wr_rx                               004000      B  46 
