TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE    1

      46 00043a                 .text
      47                        .copy       "sond_v1.1.asm"
 A     1              ;*****************************************************************************
 A     2              ;
 A     3              ; Dartmouth College AGO Rx-DSP Program
 A     4              ;
 A     5              ; Written by: Micah P. Dombrowski and Nathan B. Utterback
 A     6              ;     w/ code segments from TI DSP Library
 A     7              ;
 A     8              ;*****************************************************************************
 A     9              
 A    10                      .mmregs
 A    11                      .global ZERO, BMAR, PREG, DBMR, INDX, ARCR, TREG1
 A    12                      .global TREG2, CBSR1, CBER1, CBSR2, CBER2
 A    13                      .global RXDSP_START
 A    14              ;       .ref    _RxDSP_Monitor
 A    15                      .ref    _serial_cook
 A    16                      .ref    rsp_clear, rsp_reset, rsp_init, rsp_mstart, rsp_sstart, rsp_freq
 A    17              ;       .ref    ad6620_soft_reset, ad6620_filter, ad6620_master_run, rsp_setup
 A    18                      .ref    transfer, transfer_table_sz
 A    19                      .global bridge_data, buff_clear_loop
 A    20                      .def    ago_main, int_nmi
 A    21                      
 A    22                      .include "rx-dsp.h"
 A    23              ;       .include "int_table.h"
 A    24 00043a               .text
 A    25              
 A    26 00043a 6B28  find_me                         .ulong          0x6B28FE40
         00043b FE40 
 A    27 00043c 0000  unit_designation        .uword          0       ; Unit number (Master = 0)
 A    28 00043d 0076  code_version            .string         "v1.0"
         00043e 0031 
         00043f 002E 
         000440 0030 
 A    29 000441 0053  station_code            .string         "SS"
         000442 0053 
 A    30              
 A    31 000443 0030  band_width                      .string         "0750"
         000444 0037 
         000445 0035 
         000446 0030 
 A    32              
 A    33              ; Rotating center frequency table
 A    34              ;       32-bit values derived by mapping the sampling frequency (S) to the 0:2^32 range,
 A    35              ;       then taking the ratio of center frequency (C) to S, i.e. C/S*2^32
 A    36              
 A    37 000447       cfreq_table:
 A    38 000447 01D2                  .word   0x01d2, 0xf1c9  ;  475 KHz
         000448 F1C9 
 A    39 000449 04B4                  .word   0x04b4, 0x39a7  ; 1225 KHz
         00044a 39A7 
 A    40 00044b 0795                  .word   0x0795, 0x8185  ; 1975 KHz
         00044c 8185 
 A    41 00044d 0A76                  .word   0x0a76, 0xc964  ; 2725 KHz
         00044e C964 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE    2

 A    42 00044f       cfreq_table_end:
 A    43        0008  cfreq_table_sz  .set    cfreq_table_end-cfreq_table
 A    44              
 A    45        0E66  cfreq_test1             .set    0x0e66
 A    46        6758  cfreq_test2             .set    0x6758  ; 3750 KHz
 A    47              
 A    48              ; Run constants 
 A    49        0200  data_n                  .set    512     ; Size of each FFT (# of IQ pairs)
 A    50        0200  data_discard    .set    512             ; number of words to discard from Rx FIFO before taking data
 A    51        0001  data_minor_sz   .set    1               ; number of acquisitions per half-buffer interrupt
 A    52        0418  abu_buff_sz             .set    1048    ; size of serial buffer (2x major frame size IN BYTES)
 A    53        0004  fsync_sz                .set    4               ; # of serial frame sync bytes (should be multiple of 4)
 A    54              
 A    55              ; Memory allocations
 A    56 002000       data_addr               .usect  ".data_v", 0x800, 1, 1
 A    57 000100       stackres                .usect  ".stack_v", 0x40, 1, 1
 A    58 000800       abu_buff_loc    .usect  ".sbuff_v", abu_buff_sz, 1, 1
 A    59        0A0C- abu_buff_hloc   .set    abu_buff_loc+abu_buff_sz/2      ; half-way
 A    60              
 A    61              ; Scratchpad RAM usage
 A    62        0060  bridge_count    .set    scratch
 A    63        0061  minor_count             .set    scratch+1
 A    64        0062  bspce_save              .set    scratch+2
 A    65        0063  bridge_size             .set    scratch+3
 A    66        0064  major_count             .set    scratch+4       ; two words!
 A    67        0066  nco_freq                .set    scratch+6       ; two words!
 A    68        0068  cfreq_tp                .set    scratch+8
 A    69              
 A    70 000140               .bss TempLmem,1*2,0,0  ;temporary dword
 A    71              
 A    72              
 A    73 00044f       RXDSP_START
 A    74 00044f       ago_main:
 A    75              
 A    76 00044f F6BD          rsbx    XF
 A    77              
 A    78              ; Processor setup
 A    79 000450 F7BB          ssbx    INTM            ; Disable interrupts 
 A    80 000451 7718          stm     #(stackres+0x40), SP    ; set Stack Pointer
         000452 0140-
 A    81 000453 771D          stm     #npmst,PMST     ; Set processor mode/status
         000454 00A3 
 A    82              ;       stm #defst0, ST0
 A    83              ;       stm     #defst1, ST1
 A    84 000455 F6B8          rsbx    SXM             ; Suppress sign extension 
 A    85              ;       rsbx    XF
 A    86 000456 F495          nop                     ; Space for branch to app
 A    87 000457 F495          nop
 A    88                      
 A    89 000458 F7BD          ssbx    XF
 A    90 000459 EC40          rpt             #64
 A    91 00045a F495          nop
 A    92 00045b F6BD          rsbx    XF
 A    93               
 A    94 00045c       appcode:
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE    3

 A    95              ;       stm     #0,state        ; Clear interrupt routine state
 A    96 00045c 7710          stm     #0,AR0          ; Clear auxilliary register 0
         00045d 0000 
 A    97 00045e 7510          portw   AR0,wr_rs_rx    ; Reset AD6620 RSP
         00045f 0000 
 A    98 000460 7510          portw   AR0,wr_disc     ; Enable parallel TLM drivers, I_Q out
         000461 8000 
 A    99 000462 7510          portw   AR0,wr_dog      ; Strobe watchdog timer
         000463 A000 
 A   100                      
 A   101 000464 7710          stm     #0,AR0  ; Clear all auxiliary registers
         000465 0000 
 A   102 000466 7711          stm     #0,AR1
         000467 0000 
 A   103 000468 7712          stm     #0,AR2
         000469 0000 
 A   104 00046a 7713          stm     #0,AR3
         00046b 0000 
 A   105 00046c 7714          stm     #0,AR4
         00046d 0000 
 A   106 00046e 7715          stm     #0,AR5
         00046f 0000 
 A   107 000470 7716          stm     #0,AR6
         000471 0000 
 A   108 000472 7717          stm     #0,AR7
         000473 0000 
 A   109              
 A   110 000474 7701          stm             #0FFh,IFR       ; Clear any pending interrupts
         000475 00FF 
 A   111 000476 7726          stm     #ntss,TCR       ; Stop timer, if running
         000477 0010 
 A   112                      .global read_init
 A   113              ; Main data code start
 A   114 000478       read_init:
 A   115 000478 F074          call    rsp_reset
         000479 01CD!
 A   116 00047a F074          call    rsp_init
         00047b 01E7!
 A   117 00047c F074          call    rsp_clear
         00047d 0234!
 A   118 00047e F074          call    rsp_mstart
         00047f 01D4!
 A   119                      
 A   120 000480 F070          rpt             #4444   ; Let the AD6620 do its first initialization in peace
         000481 115C 
 A   121 000482 F495          nop
 A   122                      
 A   123 000483 F074          call    rsp_reset
         000484 01CD!
 A   124                      
 A   125 000485 7410          portr   rs_rx_fifo, AR0    ; Reset Rx FIFO - also sent by wire to Slave
         000486 A000 
 A   126 000487 F495          nop
 A   127 000488 F495          nop     
 A   128              
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE    4

 A   129 000489 7710          stm     #lsb_sel, AR0   ; Reset acq_seq
         00048a 0002 
 A   130 00048b 7510          portw   AR0, wr_disc
         00048c 8000 
 A   131 00048d F495          nop
 A   132                      
 A   133              
 A   134                      ; TSP shutoff
 A   135                      
 A   136              ;       stm             #(tspc_Free+tspc_fsm+tspc_nXrst+tspc_nRrst), TSPC
 A   137 00048e 7732          stm             #(tspc_Free+tspc_fsm), TSPC
         00048f 8008 
 A   138                      
 A   139                      ; BSP prep
 A   140              
 A   141 000490 7722          stm             #(bspc_Free+bspc_fsm), BSPC0            ; reset BSP
         000491 8008 
 A   142 000492 7700          stm             #(int_bx), IMR                  ; unmask serial transmit interrupt
         000493 0020 
 A   143 000494 7723          stm             #(bspce_fe+bspce_bxe+bspce_haltx), BSPCE0       ; 10-bit words, enable tx autobuffer,
         000495 1480 
 A   144 000496 7738          stm             #(abu_buff_loc-0x800), AXR      ; where in the 2048 words of buffer RAM 
         000497 0000-
 A   145                                                                      ; does the transmit buffer start?
 A   146 000498 7739          stm             #(abu_buff_sz), BKX             ; buffer size
         000499 0418 
 A   147                      
 A   148              ; Clear entire serial buffer
 A   149 00049a 7714          stm             #abu_buff_loc, AR4
         00049b 0800-
 A   150 00049c 771A          stm             #abu_buff_sz-1, BRC
         00049d 0417 
 A   151 00049e F072          rptb    buff_init_loop - 1
         00049f 04A1'
 A   152                      
 A   153 0004a0 7694          st              #0h, *AR4+
         0004a1 0000 
 A   154                      .global buff_init_loop, head_ramp, major_loop
 A   155 0004a2       buff_init_loop:
 A   156              
 A   157              ; set initial frequency table position
 A   158              
 A   159 0004a2 7668          st              #cfreq_table_sz-2, @cfreq_tp
         0004a3 0006 
 A   160              
 A   161              
 A   162              ;       rsbx    INTM ; global interrupt enable
 A   163              
 A   164              ; All Aux Registers are fungible in the main loop: values which must be preserved
 A   165              ; over time are stored in the scratchpad RAM as defined above.  Note that only AR6
 A   166              ; and AR7 are required to be preserved by the DSP Library functions (and most others),
 A   167              ; all other ARx may be modified within function calls.
 A   168              
 A   169 0004a4 E800          ld              #0, A
 A   170 0004a5 4E64          dst             A, @major_count
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE    5

 A   171                      
 A   172              ; Set initial bspce_save such that the first acquisition will
 A   173              ; write to the second half of the serial buffer
 A   174 0004a6 7662          st              #bspce_xh, @bspce_save
         0004a7 0800 
 A   175                              
 A   176                      ; boot lag: insert >50 ms delay to allow everyone plenty of time to boot up
 A   177 0004a8 771A          stm             #511, BRC
         0004a9 01FF 
 A   178 0004aa F495          nop
 A   179 0004ab F495          nop
 A   180 0004ac F272          rptbd   boot_delay_loop - 1
         0004ad 04B5'
 A   181 0004ae F495          nop
 A   182 0004af F495          nop
 A   183                      
 A   184 0004b0 F495          nop
 A   185                      
 A   186 0004b1 F070          rpt             #4096
         0004b2 1000 
 A   187 0004b3 F495          nop
 A   188                      
 A   189 0004b4 F495          nop
 A   190 0004b5 F495          nop     
 A   191                      
 A   192 0004b6       boot_delay_loop:
 A   193              
 A   194 0004b6 F495          nop
 A   195 0004b7 F495          nop
 A   196                      
 A   197                      ; now synchronize units for the first time
 A   198 0004b8 F074          call    sync_units
         0004b9 05F4'
 A   199              
 A   200                      ; Start BSP transmits
 A   201 0004ba 7722          stm             #(bspc_Free + bspc_fsm + bspc_nXrst), BSPC0     ; have to hold fsm bit
         0004bb 8048 
 A   202 0004bc F495          nop
 A   203 0004bd F495          nop
 A   204                      
 A   205              ****
 A   206              * Main loop
 A   207              ****
 A   208              
 A   209 0004be       major_loop:
 A   210                      .global major_loop
 A   211                      
 A   212                      ; Method:
 A   213                      ;
 A   214                      ; Master waits for acq_seq_rdy from Slaves, then raises acq_seq_out, starting synced
 A   215                      ; acquisition.  Note any previous acquisition will still be transferring its last
 A   216                      ; half-buffer, and the ABU will be set to halt transmissions when that half is done.
 A   217                      ; The acq_seq_rdy & out lines are both held high on All, until the end of this new 
 A   218                      ; acquisition and half-buffer fill.  Then Master waits for its own ABU haltx, and 
 A   219                      ; then for !acq_seq_rdy (signaling Slaves have hit ABU haltx), before dropping 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE    6

 A   220                      ; acq_seq_out, signaling time for the next synchronized ABU startup.
 A   221              
 A   222 0004be F074          call    cfreq_walk
         0004bf 05C5'
 A   223                      
 A   224                      ; acquisition sync
 A   225 0004c0 F074          call    sync_units
         0004c1 05F4'
 A   226                              
 A   227 0004c2 7410          portr   rs_rx_fifo, AR0    ; Reset Rx FIFO - also sent by wire to Slave
         0004c3 A000 
 A   228                              
 A   229              ;       dld             #
 A   230                      
 A   231 0004c4 60F8          cmpm    *(unit_designation), #0
         0004c5 043C'
         0004c6 0000 
 A   232 0004c7 F820          bc              slave_startup, NTC
         0004c8 04CF'
 A   233                      
 A   234                      ; if Master (unit 0) insert delay time to allow
 A   235                      ; Slaves time to detect acq_seq_out and start up
 A   236 0004c9 EC80          rpt             #128
 A   237 0004ca F495          nop
 A   238                      
 A   239 0004cb F074          call    rsp_mstart      ; start digitizing as Master
         0004cc 01D4!
 A   240                      
 A   241 0004cd F073          b               data_acq_start
         0004ce 04D1'
 A   242                      
 A   243 0004cf       slave_startup:
 A   244              
 A   245 0004cf F074          call    rsp_sstart      ; start digitizing as Slave
         0004d0 01DB!
 A   246              
 A   247                      
 A   248              ;
 A   249              ; Reads
 A   250              ;
 A   251 0004d1       data_acq_start:
 A   252              
 A   253 0004d1 7660          st      #0, @bridge_count       ; reset bridged data counter
         0004d2 0000 
 A   254 0004d3 7661          st      #0, @minor_count        ; reset minor frame counter
         0004d4 0000 
 A   255              
 A   256              ;
 A   257              ; Set wait states for Rx FIFO
 A   258              ;
 A   259 0004d5 4828          ldm     SWWSR, A
 A   260 0004d6 F120          ld      #65535, B
         0004d7 FFFF 
 A   261 0004d8 F35C          xor     #7, #swwsr_is, B ; (0b111<<Nset XOR 0d65535) creates bitmask
         0004d9 0007 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE    7

 A   262 0004da F280          and     B, A                     ; mask out bits of interest
 A   263 0004db F04C          or      #0, #swwsr_is, A ; (A or Nwait<<Nset) to set Nwait to Nset
         0004dc 0000 
 A   264                      ; Nwait = 0 means no additional waits
 A   265 0004dd 8828          stlm    A, SWWSR
 A   266              
 A   267                      .global pre_disc, pre_read
 A   268 0004de       pre_disc:
 A   269              
 A   270              ; loop to read and discard first data out of AD6620
 A   271 0004de 7712          stm             #(data_discard), AR2
         0004df 0200 
 A   272 0004e0 F495          nop
 A   273 0004e1       rx_discard_loop:
 A   274                      ; read only if rx fifo is nonempty
 A   275 0004e1 7410          portr   rd_disc, AR0
         0004e2 8000 
 A   276 0004e3 F495          nop
 A   277 0004e4 F495          nop
 A   278 0004e5 6110          bitf    AR0, rx_efo
         0004e6 0040 
 A   279                      
 A   280 0004e7 F820          bc      discard_fifo_empty, NTC
         0004e8 04EC'
 A   281 0004e9 7411          portr   rd_rx_out, AR1          ; read data into AR1
         0004ea 0000 
 A   282 0004eb 6D8A          mar     *AR2-                           ; decrement word counter                
 A   283 0004ec       discard_fifo_empty:
 A   284              
 A   285 0004ec 6C82          banz    rx_discard_loop, *AR2
         0004ed 04E1'
 A   286                      
 A   287                      
 A   288              ; loop to read data from Rx FIFO into RAM
 A   289 0004ee 7710          stm     #2, AR0
         0004ef 0002 
 A   290 0004f0 7711          stm     #data_addr, AR1 ; set address for first data word
         0004f1 2000-
 A   291 0004f2 7712          stm     #(data_n*2-1), AR2
         0004f3 03FF 
 A   292 0004f4       pre_read:
 A   293 0004f4 F495          nop
 A   294 0004f5       rx_read_loop:
 A   295                      ; read only if rx fifo is nonempty
 A   296 0004f5 7413          portr   rd_disc, AR3
         0004f6 8000 
 A   297 0004f7 F495          nop
 A   298 0004f8 F495          nop
 A   299 0004f9 6113          bitf    AR3, rx_efo
         0004fa 0040 
 A   300                      
 A   301 0004fb F820          bc      read_fifo_empty, NTC
         0004fc 0500'
 A   302                      
 A   303 0004fd 7491          portr   rd_rx_out, *AR1+
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE    8

         0004fe 0000 
 A   304 0004ff 6D8A          mar     *AR2-                   ; decrement word counter
 A   305                      
 A   306 000500       read_fifo_empty:
 A   307              
 A   308 000500 6E82          banzd   rx_read_loop, *AR2
         000501 04F5'
 A   309 000502 F495          nop
 A   310 000503 F495          nop
 A   311                      
 A   312              ;
 A   313              ; Set wait states for other stuff (full 7)
 A   314              ;
 A   315 000504 4828          ldm     SWWSR, A
 A   316 000505 F04C          or      #7, #swwsr_is, A ; (A or Nwait<<Nset) to set Nwait to Nset
         000506 0007 
 A   317 000507 8828          stlm    A, SWWSR
 A   318 000508 F495          nop
 A   319 000509 F495          nop
 A   320                      
 A   321              ; Stop acquisition
 A   322 00050a F074          call    rsp_reset
         00050b 01CD!
 A   323              
 A   324                      ; drop acq flags
 A   325 00050c 7710          stm             #lsb_sel, AR0
         00050d 0002 
 A   326 00050e 7510          portw   AR0, wr_disc
         00050f 8000 
 A   327                      
 A   328              *
 A   329              * End data collection, begin serial data handling
 A   330              *
 A   331              
 A   332 000510 7663          st      #4*data_n, @bridge_size
         000511 0800 
 A   333              
 A   334              ; entry point for bridging data transfers over multiple serial half-buffers
 A   335 000512       bridge_data:
 A   336                      .global bridge_data
 A   337              
 A   338 000512 7710          stm             #(acq_test5+lsb_sel), AR0 ; send acq_seq, set lsb_sel
         000513 0022 
 A   339 000514 7510          portw   AR0, wr_disc
         000515 8000 
 A   340              
 A   341 000516 F495          nop
 A   342 000517 F495          nop
 A   343                      ; Determine serial buffer position
 A   344 000518 7713          stm             #abu_buff_loc, AR3      ; load buffer base
         000519 0800-
 A   345                      
 A   346 00051a 6162          bitf    @bspce_save, #bspce_xh          ; read XH out of stored BSPCE register
         00051b 0800 
 A   347 00051c F495          nop
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE    9

 A   348 00051d F495          nop
 A   349 00051e F820          bc              buff_skip, NTC  ; if first half _finished_ (XH=0, NTC), do nothing
         00051f 0526'
 A   350                      
 A   351 000520 6B13          addm    #(abu_buff_sz/2), @AR3
         000521 020C 
 A   352 000522 7710          stm             #(acq_test3+lsb_sel), AR0
         000523 000A 
 A   353 000524 7510          portw   AR0, wr_disc
         000525 8000 
 A   354              
 A   355 000526       buff_skip:
 A   356 000526 F495          nop
 A   357 000527 F495          nop
 A   358 000528 F495          nop
 A   359 000529 F495          nop
 A   360              
 A   361 00052a       abu_first_half:
 A   362                      .global abu_first_half
 A   363              
 A   364 00052a F7BB          ssbx    INTM
 A   365                      
 A   366              ; Clear serial buffer half
 A   367 00052b E734          mvmm    AR3, AR4
 A   368 00052c F495          nop
 A   369 00052d F070          rpt             #(abu_buff_sz/2-1)
         00052e 020B 
 A   370 00052f 7694          st              #0x00, *AR4+
         000530 0000 
 A   371                      
 A   372                      
 A   373              ; reset AR4 for data copy
 A   374 000531 E734          mvmm    AR3, AR4
 A   375 000532 F495          nop
 A   376 000533 F495          nop
 A   377                      
 A   378 000534       abu_fill_start:
 A   379                      .global abu_fill_start
 A   380              
 A   381              
 A   382                      ; two-byte frame sync 0xEB90
 A   383 000534 7694          st              #0xEB, *AR4+
         000535 00EB 
 A   384 000536 7694          st              #0x90, *AR4+
         000537 0090 
 A   385              
 A   386                      ; two-byte infofoop
 A   387 000538 6FF8          ld              *(unit_designation), #6, A      ; byte 1, 2 MSB, unit number
         000539 043C'
         00053a 0C46 
 A   388 00053b 1A61          or              @minor_count, A                         ; byte 1, 6 LSB, minor frame number
 A   389 00053c 8094          stl             A, *AR4+
 A   390 00053d 5664          dld             @major_count, A                         ; byte 2, 8 bit, major frame number
 A   391 00053e F030          and             #0xFF, A
         00053f 00FF 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   10

 A   392 000540 8094          stl             A, *AR4+
 A   393              
 A   394 000541       dinner_is_ready:
 A   395                      .global dinner_is_ready
 A   396                      
 A   397              
 A   398 000541 F120          ld              #((abu_buff_sz/2-fsync_sz)/2-1), B      ; let's stick the BRC value here...
         000542 0103 
 A   399                      
 A   400                      ; If haltx is true, we are starting a new major frame, so write the header
 A   401 000543 6123          bitf    BSPCE0, #bspce_haltx
         000544 1000 
 A   402 000545 F820          bc              header_skip, NTC
         000546 054B'
 A   403                      
 A   404 000547 F074          call    hwrite  ; write out header, uses & modified write address in AR4
         000548 060A'
 A   405 000549 F310          sub             #16, B  ; oops, 32 bytes less space in this half buffer
         00054a 0010 
 A   406              
 A   407 00054b       header_skip:
 A   408                      
 A   409                                              
 A   410                      ; copy raw data (words) into serial buffer (bytes)
 A   411 00054b F020          ld              #data_addr, A
         00054c 2000-
 A   412 00054d 6F60          add             @bridge_count, #-1, A   ; div by 2 to increment input word-wise
         00054e 0C1F 
 A   413 00054f 8812          stlm    A, AR2
 A   414 000550 891A          stlm    B, BRC  ; and here's our BRC setup
 A   415                      
 A   416 000551 7210          mvdm    @bridge_size, AR0       ; goal bridge size
         000552 0063 
 A   417 000553 7211          mvdm    @bridge_count, AR1      ; current count
         000554 0060 
 A   418                      
 A   419 000555 F072          rptb    rawdata_loop - 1
         000556 056B'
 A   420              
 A   421 000557 6F82          ld              *AR2, -8, A     ; load (data word) >> 8 to Acc
         000558 0C58 
 A   422 000559 F030          and             #0xFF, A        ; mask to low-byte
         00055a 00FF 
 A   423 00055b 8094          stl             A, *AR4+        ; save to serial buffer
 A   424 00055c 6D91          mar             *AR1+           ; count bytes
 A   425                      
 A   426 00055d 1092          ld              *AR2+, A        ; reload and increment
 A   427 00055e F030          and             #0xFF, A        ; mask
         00055f 00FF 
 A   428 000560 8094          stl             A, *AR4+        ; save
 A   429 000561 6D91          mar             *AR1+           ; count bytes
 A   430                      
 A   431 000562 F5A9          cmpr    LT, AR1                         ; If we're not done with a bridged data sequence, 
 A   432 000563 F495          nop
 A   433 000564 F495          nop
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   11

 A   434 000565 FD20          xc              1, NTC
 A   435 000566 F6BF          rsbx    BRAF
 A   436 000567 F495          nop
 A   437 000568 F495          nop
 A   438 000569 F495          nop
 A   439 00056a F495          nop
 A   440 00056b F495          nop
 A   441                      .global rawdata_loop, dbg_transfer_skip
 A   442 00056c       rawdata_loop:
 A   443              
 A   444 00056c F495          nop
 A   445 00056d F495          nop
 A   446                      
 A   447 00056e 7311          mvmd    AR1, @bridge_count
         00056f 0060 
 A   448              
 A   449              ; Bit reverse and add start/stop bits
 A   450 000570 4813          ldm             AR3, A
 A   451 000571 F120          ld              #(abu_buff_sz/2), B
         000572 020C 
 A   452              
 A   453 000573 F074          call    _serial_cook
         000574 0660!
 A   454                      
 A   455              
 A   456              ;       rsbx    INTM
 A   457                      
 A   458 000575 6B61          addm    #1, @minor_count
         000576 0001 
 A   459 000577 F495          nop
 A   460 000578 F495          nop
 A   461 000579 7710          stm             #(lsb_sel), AR0
         00057a 0002 
 A   462 00057b 7510          portw   AR0, wr_disc
         00057c 8000 
 A   463              
 A   464              ; buffer is now loaded
 A   465 00057d F074          call    rsp_clear       ; clear NCO RAM, do it here since we have some free time
         00057e 0234!
 A   466              
 A   467              ; Strobe watchdog- once per minor frame cycle
 A   468 00057f 7710          stm             #0, AR0        ; Data is not used- just the wr_dog strobe
         000580 0000 
 A   469 000581 7510          portw   AR0,wr_dog     ; Strobe the watchdog
         000582 A000 
 A   470              
 A   471              ; clear interrupt flags, then idle until an interrupt.
 A   472                      .global pre_sleep
 A   473 000583       pre_sleep:
 A   474                      
 A   475 000583 F7BB          ssbx    INTM
 A   476 000584 7701          stm             #0FFh,IFR               ; Clear any pending interrupts
         000585 00FF 
 A   477                      
 A   478 000586 F6E1          idle    2       ; and now...we wait.
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   12

 A   479              
 A   480                      .global post_sleep
 A   481 000587       post_sleep:
 A   482                      
 A   483              ; check for aux int -> serial monitor
 A   484              ;       bitf    IFR, #int_3
 A   485              ;       cc              inth_3, TC
 A   486                      
 A   487              ; make sure we had a serial interrupt
 A   488 000587 6101          bitf    IFR, #int_bx
         000588 0020 
 A   489 000589 F820          bc              pre_sleep, NTC  ; stray interrupt, go back to IDLE
         00058a 0583'
 A   490                      
 A   491 00058b F495          nop
 A   492                              
 A   493 00058c 7701          stm             #int_bx, IFR    ; clear int flag
         00058d 0020 
 A   494                      
 A   495 00058e 7323          mvmd    BSPCE0, @bspce_save ; store control extension register
         00058f 0062 
 A   496                      
 A   497              ; if this is a new major frame, we need to sync
 A   498              ; everyone up by waiting for all ABU haltx.
 A   499              
 A   500 000590 6123          bitf    BSPCE0, #bspce_haltx
         000591 1000 
 A   501 000592 F820          bc              abu_restart_skip, NTC
         000593 05A3'
 A   502              
 A   503 000594       abu_haltx_wait:
 A   504                      .global abu_haltx_wait
 A   505              
 A   506                      ; ABU has halted.  Reset ABU, and synchronize
 A   507 000594 7723          stm             #(bspce_fe+bspce_bxe), BSPCE0   ; 10-bit words, enable tx ABU, disable haltx
         000595 0480 
 A   508              
 A   509 000596 F074          call    sync_units
         000597 05F4'
 A   510                      
 A   511                      ; Start BSP transmits
 A   512 000598 7722          stm             #(bspc_Free + bspc_fsm + bspc_nXrst), BSPC0     ; have to hold fsm bit
         000599 8048 
 A   513 00059a F495          nop
 A   514 00059b F495          nop
 A   515                      
 A   516 00059c F070          rpt             #16383
         00059d 3FFF 
 A   517 00059e F495          nop
 A   518                      
 A   519              ; unset acq_seq, keep lsb_sel
 A   520 00059f 7710          stm             #lsb_sel, AR0
         0005a0 0002 
 A   521 0005a1 7510          portw   AR0, wr_disc
         0005a2 8000 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   13

 A   522              
 A   523 0005a3       abu_restart_skip:
 A   524                      .global abu_restart_skip
 A   525                      
 A   526 0005a3 7210          mvdm    @bridge_size, AR0       ; need to copy these 
         0005a4 0063 
 A   527 0005a5 7211          mvdm    @bridge_count, AR1      ; to use CMPR
         0005a6 0060 
 A   528 0005a7 F495          nop
 A   529 0005a8 F495          nop
 A   530 0005a9 F5A9          cmpr    LT, AR1                         ; If we're not done with a bridged data sequence, 
 A   531 0005aa F830          bc              bridge_data, TC ; jump to bridge_data to continue transfers, otherwise...
         0005ab 0512'
 A   532              
 A   533 0005ac 5664          dld             @major_count, A ; increment major frame counter
 A   534 0005ad F000          add             #1, A
         0005ae 0001 
 A   535 0005af 4E64          dst             A, @major_count
 A   536                      
 A   537                      ; The final half is transmitting, we want to halt when it finishes.
 A   538 0005b0 7710          stm             #(acq_test4+lsb_sel), AR0
         0005b1 0012 
 A   539 0005b2 7510          portw   AR0, wr_disc
         0005b3 8000 
 A   540 0005b4 6923          orm             #bspce_haltx, BSPCE0
         0005b5 1000 
 A   541 0005b6 F495          nop
 A   542 0005b7 F495          nop
 A   543              ;       stm             #(lsb_sel), AR0
 A   544              ;       portw   AR0, wr_disc
 A   545              
 A   546 0005b8 F073          b               major_loop              ; new data acquisition
         0005b9 04BE'
 A   547              
 A   548              ;;
 A   549              ; Main acquisiton ('appcode') branch done
 A   550              ;;      
 A   551              
 A   552              ;;
 A   553              ; Interrupts
 A   554              ;;
 A   555              
 A   556              ; Non-Maskable Interrupt
 A   557              ;               this is hit by the watchdog
 A   558 0005ba       int_nmi:
 A   559              
 A   560 0005ba F495          nop     
 A   561 0005bb 771D          stm             #npmst, PMST    ; Reset PMST to be sure IPTR -> 0x80
         0005bc 00A3 
 A   562                      
 A   563              ; Alternative: IPTR=0x1FF, OVLY=1, all else =0
 A   564              ; This should set things up to completely reload the program from the EPROM on reset
 A   565              ;       stm             #0xFFA0, PMST
 A   566              
 A   567 0005bd F7E0          reset   ; I don't have to take this.  ...I'm going home.
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   14

 A   568                      
 A   569 0005be FC00          ret             ; should never get here!
 A   570                      
 A   571              
 A   572 0005bf       inth_3:
 A   573 0005bf F7BB          ssbx    INTM
 A   574 0005c0 7701          stm             #int_3, IFR     ; clear int flag
         0005c1 0100 
 A   575              
 A   576                      ; call serial monitor
 A   577              
 A   578                      
 A   579              ;       calld   _RxDSP_Monitor
 A   580              ;       stm             #bspce_haltx, BSPCE      ; tell serial transmit to halt after completing this half-bu
 A   581              
 A   582                      
 A   583 0005c2 FE00          retd
 A   584 0005c3 F495          nop
 A   585 0005c4 F495          nop
 A   586              
 A   587              ****
 A   588              * cfreq_walk
 A   589              *
 A   590              * walks through the table of center frequencies at label #cfreq_table
 A   591              *
 A   592              * stores table position @cfreq_tp and current NCO value as a 32-bit number @nco_freq
 A   593              *
 A   594              ****
 A   595              
 A   596 0005c5       cfreq_walk:
 A   597              
 A   598 0005c5 7410          portr   rd_disc, AR0
         0005c6 8000 
 A   599 0005c7 F495          nop
 A   600 0005c8 F495          nop
 A   601 0005c9 6110          bitf    AR0, #trm_28
         0005ca 0001 
 A   602 0005cb F820          bc              walk_skip, NTC  ; if trm_28 is low (NTC, jumper on), skip the walk
         0005cc 05E9'
 A   603              
 A   604 0005cd 6B68          addm    #2, @cfreq_tp
         0005ce 0002 
 A   605 0005cf F495          nop
 A   606 0005d0 F495          nop
 A   607 0005d1 6068          cmpm    @cfreq_tp, #cfreq_table_sz
         0005d2 0008 
 A   608 0005d3 F495          nop
 A   609 0005d4 F495          nop
 A   610 0005d5 FF30          xc              2, TC
 A   611 0005d6 7668          st              #0, @cfreq_tp
         0005d7 0000 
 A   612                      
 A   613 0005d8 F495          nop
 A   614 0005d9 F495          nop
 A   615                      
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   15

 A   616 0005da F020          ld              #(cfreq_table), A
         0005db 0447'
 A   617 0005dc 0068          add             @cfreq_tp, A
 A   618 0005dd 8810          stlm    A, AR0
 A   619 0005de F495          nop
 A   620 0005df F495          nop
 A   621 0005e0 1190          ld              *AR0+, B
 A   622 0005e1 8166          stl             B, @nco_freq
 A   623 0005e2 F3E8          sftl    B, #8
 A   624 0005e3 F3E8          sftl    B, #8
 A   625 0005e4 1080          ld              *AR0, A
 A   626 0005e5 8067          stl             A, @(nco_freq+1)
 A   627 0005e6 F2A0          or              B, A
 A   628              
 A   629 0005e7 F073          b               cfreq_commit
         0005e8 05ED'
 A   630              
 A   631 0005e9       walk_skip:
 A   632                      ; load a single frequency instead
 A   633                      ; in two parts because there's no 32-bit immediate load op
 A   634                      
 A   635 0005e9 F062          ld              #cfreq_test1, #16, A
         0005ea 0E66 
 A   636 0005eb F040          or              #cfreq_test2, A
         0005ec 6758 
 A   637                      
 A   638 0005ed       cfreq_commit:
 A   639                      
 A   640 0005ed F495          nop
 A   641 0005ee F495          nop             
 A   642              
 A   643 0005ef F074          call    rsp_freq
         0005f0 01E2!
 A   644                              
 A   645 0005f1 FE00          retd
 A   646 0005f2 F495          nop
 A   647 0005f3 F495          nop
 A   648              
 A   649              
 A   650              ****
 A   651              * sync_units
 A   652              *
 A   653              * synchronizes master/slave units by toggling and waiting for latched lines
 A   654              *
 A   655              ****
 A   656              
 A   657 0005f4       sync_units:
 A   658                      
 A   659                      ; Raise test2 line.  On the Master this should do nothing (NC),
 A   660                      ; on the Slaves it signals the Master they are ready.
 A   661              
 A   662 0005f4 7710          stm             #(acq_seq_rdy+lsb_sel), AR0
         0005f5 0006 
 A   663 0005f6 7510          portw   AR0, wr_disc
         0005f7 8000 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   16

 A   664 0005f8 F495          nop
 A   665 0005f9 F495          nop
 A   666                      
 A   667                      ; Check status of TSP, wait for IN1 & IN2 high
 A   668 0005fa       ready_loop:
 A   669              
 A   670 0005fa F495          nop
 A   671                      
 A   672 0005fb 6132          bitf    TSPC, #tspc_in0
         0005fc 0100 
 A   673 0005fd F820          bc              ready_loop, NTC
         0005fe 05FA'
 A   674                      
 A   675 0005ff 6132          bitf    TSPC, #tspc_in1
         000600 0200 
 A   676 000601 F820          bc              ready_loop, NTC
         000602 05FA'
 A   677                      
 A   678                      ; Raise acq_seq_out--on the Master this signals the Slaves to start, 
 A   679                      ; on the Slaves it does nothing (NC).
 A   680                      
 A   681 000603 7710          stm             #(acq_seq_out+acq_seq_rdy+lsb_sel), AR0 ; send acq_seq_out
         000604 0086 
 A   682 000605 7510          portw   AR0, wr_disc
         000606 8000 
 A   683              
 A   684 000607 FE00          retd
 A   685 000608 F495          nop
 A   686 000609 F495          nop
 A   687                      
 A   688                      
 A   689              ****
 A   690              * hwrite
 A   691              *
 A   692              * Writes a 32-bit header:
 A   693              *
 A   694              * <0xFE6B2840><RxDSP><Unit #><Ver #><NCOF><MFCB><00000000>
 A   695              *
 A   696              ****
 A   697              
 A   698                      .mmregs
 A   699              
 A   700 00060a       hwrite:
 A   701                      .global hwrite
 A   702              
 A   703 00060a 4A13          pshm    AR3
 A   704              
 A   705              ; 4-byte sync
 A   706 00060b 7713          stm             #static_header, AR3     ; Point to static header words
         00060c 0650'
 A   707 00060d F070          rpt             #static_header_len              ; <SYNC><RxDSP>
         00060e 0008 
 A   708 00060f E59A          mvdd    *AR3+, *AR4+
 A   709                      
 A   710 000610 10F8          ld              *(unit_designation), A
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   17

         000611 043C'
 A   711 000612 F000          add             #0x30, A        ; we want the header unit number to be in ASCII
         000613 0030 
 A   712 000614 8094          stl             A, *AR4+
 A   713                      
 A   714 000615 7713          stm             #station_code, AR3
         000616 0441'
 A   715 000617 EC01          rpt             #1
 A   716 000618 E59A          mvdd    *AR3+, *AR4+
 A   717                      
 A   718 000619 7713          stm             #code_version, AR3
         00061a 043D'
 A   719 00061b EC03          rpt             #3
 A   720 00061c E59A          mvdd    *AR3+, *AR4+
 A   721                      
 A   722 00061d 7713          stm             nco_freq, AR3
         00061e 0066 
 A   723 00061f 6F83          ld              *AR3, #-8, A
         000620 0C58 
 A   724 000621 F030          and             #0xFF, A
         000622 00FF 
 A   725 000623 8094          stl             A, *AR4+
 A   726 000624 1093          ld              *AR3+, A        ; inc to second word
 A   727 000625 F030          and             #0xFF, A
         000626 00FF 
 A   728 000627 8094          stl             A, *AR4+
 A   729 000628 6F83          ld              *AR3, #-8, A
         000629 0C58 
 A   730 00062a F030          and             #0xFF, A
         00062b 00FF 
 A   731 00062c 8094          stl             A, *AR4+
 A   732 00062d 1083          ld              *AR3, A
 A   733 00062e F030          and             #0xFF, A
         00062f 00FF 
 A   734 000630 8094          stl             A, *AR4+
 A   735                              
 A   736                      
 A   737 000631 7713          stm             #band_width, AR3
         000632 0443'
 A   738 000633 EC03          rpt             #3
 A   739 000634 E59A          mvdd    *AR3+, *AR4+
 A   740              
 A   741 000635 7713          stm             major_count, AR3
         000636 0064 
 A   742 000637 6F83          ld              *AR3, #-8, A
         000638 0C58 
 A   743 000639 F030          and             #0xFF, A
         00063a 00FF 
 A   744 00063b 8094          stl             A, *AR4+
 A   745 00063c 1093          ld              *AR3+, A        ; inc to second word
 A   746 00063d F030          and             #0xFF, A
         00063e 00FF 
 A   747 00063f 8094          stl             A, *AR4+
 A   748 000640 6F83          ld              *AR3, #-8, A
         000641 0C58 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   18

 A   749 000642 F030          and             #0xFF, A
         000643 00FF 
 A   750 000644 8094          stl             A, *AR4+
 A   751 000645 1083          ld              *AR3, A
 A   752 000646 F030          and             #0xFF, A
         000647 00FF 
 A   753 000648 8094          stl             A, *AR4+
 A   754                      
 A   755 000649 EC03          rpt             #3
 A   756 00064a 7694          st              #0, *AR4+
         00064b 0000 
 A   757                      
 A   758 00064c 8A13          popm    AR3
 A   759                      
 A   760 00064d FE00          retd
 A   761 00064e F495          nop
 A   762 00064f F495          nop
 A   763              
 A   764 000650       static_header:
 A   765 000650 00FE                  .word   0xFE, 0x6B, 0x28, 0x40
         000651 006B 
         000652 0028 
         000653 0040 
 A   766 000654 0052                  .string "RxDSP"
         000655 0078 
         000656 0044 
         000657 0053 
         000658 0050 
 A   767 000659       static_header_end:
 A   768                      
 A   769        0008  static_header_len       .set    static_header_end-static_header-1
 A   770              
 A   771              ;       .include "ad6620.asm"
 A   772              ;       .include "cbrev.asm"
 A   773              
 A   774                      .end

No Assembly Errors, No Assembly Warnings
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   19

LABEL                                VALUE       DEFN    REF

.TMS320C540                         000000          0 
.TMS320C541                         000000          0 
.TMS320C541A                        000000          0 
.TMS320C542                         000001          0 
.TMS320C543                         000000          0 
.TMS320C544                         000000          0 
.TMS320C545                         000000          0 
.TMS320C545LP                       000000          0 
.TMS320C546                         000000          0 
.TMS320C546LP                       000000          0 
.TMS320C548                         000000          0 
.TMS320C549                         000000          0 
ARCR                                   REF             A  11 
BMAR                                   REF             A  11 
CBER1                                  REF             A  12 
CBER2                                  REF             A  12 
CBSR1                                  REF             A  12 
CBSR2                                  REF             A  12 
CR                                  00000d      B 130 
CRLF                                000d0a      B 132 
DBMR                                   REF             A  11 
ESC                                 00001b      B 133 
INDX                                   REF             A  11 
LF                                  00000a      B 131 
PREG                                   REF             A  11 
RXDSP_START                         00044f'     A  73  A  13 
TREG1                                  REF             A  11 
TREG2                                  REF             A  12 
TempLmem                            000140-     A  70 
ZERO                                   REF             A  11 
__TI_ASSEMBLER_VERSION__            3d10d0          0 
__far_mode                          000000          0 
__lflags                            000000          0 
__no_fret                           000000          0 
__stores_bug                        000000          0 
_serial_cook                           REF             A  15  A 453 
abu_buff_hloc                       000a0c-     A  59 
abu_buff_loc                        000800-     A  58  A  59  A 144  A 149  A 344 
abu_buff_sz                         000418      A  52  A  58  A  59  A 146  A 150 
                                                       A 351  A 369  A 398  A 451 
abu_fill_start                      000534'     A 378  A 379 
abu_first_half                      00052a'     A 361  A 362 
abu_haltx_wait                      000594'     A 503  A 504 
abu_restart_skip                    0005a3'     A 523  A 501  A 524 
acq_seq_in                          000002      B 161 
acq_seq_len                         007fff      B 143 
acq_seq_out                         000080      B 156  A 681 
acq_seq_rdy                         000004      B 151  A 662  A 681 
acq_test3                           000008      B 152  A 352 
acq_test4                           000010      B 153  A 538 
acq_test5                           000020      B 154  A 338 
acq_test6                           000040      B 155 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   20

LABEL                                VALUE       DEFN    REF

ago_main                            00044f'     A  74  A  20 
amr                                 000007      B 116 
appcode                             00045c'     A  94 
band_width                          000443'     A  31  A 737 
boot_delay_loop                     0004b6'     A 192  A 180 
bridge_count                        000060      A  62  A 253  A 412  A 417  A 447 
                                                       A 527 
bridge_data                         000512'     A 335  A  19  A 336  A 531 
bridge_size                         000063      A  65  A 332  A 416  A 526 
bspc_Free                           008000      B 204  A 141  A 201  A 512 
bspc_RSRfull                        002000      B 202 
bspc_Rrdy                           000400      B 199 
bspc_Soft                           004000      B 203 
bspc_XSRfull                        001000      B 201 
bspc_Xrdy                           000800      B 200 
bspc_dlb                            000002      B 190 
bspc_fo                             000004      B 191 
bspc_fsm                            000008      B 192  A 141  A 201  A 512 
bspc_in0                            000100      B 197 
bspc_in1                            000200      B 198 
bspc_mcm                            000010      B 193 
bspc_nRrst                          000080      B 196 
bspc_nXrst                          000040      B 195  A 201  A 512 
bspc_txm                            000020      B 194 
bspce_bre                           002000      B 217 
bspce_bxe                           000400      B 214  A 143  A 507 
bspce_clkp                          000040      B 210 
bspce_fe                            000080      B 211  A 143  A 507 
bspce_fig                           000100      B 212 
bspce_fsp                           000020      B 209 
bspce_haltr                         008000      B 219 
bspce_haltx                         001000      B 216  A 143  A 401  A 500  A 540 
bspce_pcm                           000200      B 213 
bspce_rh                            004000      B 218 
bspce_save                          000062      A  64  A 174  A 346  A 495 
bspce_xh                            000800      B 215  A 174  A 346 
buff_clear_loop                        REF             A  19 
buff_init_loop                      0004a2'     A 155  A 151  A 154 
buff_skip                           000526'     A 355  A 349 
cfreq_commit                        0005ed'     A 638  A 629 
cfreq_table                         000447'     A  37  A  43  A 616 
cfreq_table_end                     00044f'     A  42  A  43 
cfreq_table_sz                      000008      A  43  A 159  A 607 
cfreq_test1                         000e66      A  45  A 635 
cfreq_test2                         006758      A  46  A 636 
cfreq_tp                            000068      A  68  A 159  A 604  A 607  A 611 
                                                       A 617 
cfreq_walk                          0005c5'     A 596  A 222 
clk_rx_out                          002000      B  56 
code_version                        00043d'     A  28  A 718 
data_acq_start                      0004d1'     A 251  A 241 
data_addr                           002000-     A  56  A 290  A 411 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   21

LABEL                                VALUE       DEFN    REF

data_discard                        000200      A  50  A 271 
data_minor_sz                       000001      A  51 
data_n                              000200      A  49  A 291  A 332 
dbg_transfer_skip                      REF             A 441 
defst0                              001800      B  14 
defst1                              002900      B  21 
dinner_is_ready                     000541'     A 394  A 395 
disc_0                              000001      B 160 
discard_fifo_empty                  0004ec'     A 283  A 280 
dr0                                 000000      B 109 
dr1                                 000001      B 110 
dr2                                 000002      B 111 
dr3                                 000003      B 112 
dr4                                 000004      B 113 
find_me                             00043a'     A  26 
fsync_sz                            000004      A  53  A 398 
head_ramp                              REF             A 154 
header_skip                         00054b'     A 407  A 402 
hwrite                              00060a'     A 700  A 404  A 701 
int_0                               000001      B  95 
int_1                               000002      B  96 
int_2                               000004      B  97 
int_3                               000100      B 103  A 574 
int_br                              000010      B  99 
int_bx                              000020      B 100  A 142  A 488  A 493 
int_nmi                             0005ba'     A 558  A  20 
int_t                               000008      B  98 
int_tr                              000040      B 101 
int_tx                              000080      B 102 
inth_3                              0005bf'     A 572 
iq_len                              00003f      B 142 
lar                                 000006      B 115 
lsb_sel                             000002      B 150  A 129  A 325  A 338  A 352 
                                                       A 461  A 520  A 538  A 662 
                                                       A 681 
major_count                         000064      A  66  A 170  A 390  A 533  A 535 
                                                       A 741 
major_loop                          0004be'     A 209  A 154  A 210  A 546 
minor_count                         000061      A  63  A 254  A 388  A 458 
nco_freq                            000066      A  67  A 622  A 626  A 722 
nload                               000020      B  88 
npmst                               0000a3      B   4  A  81  A 561 
nprd                                00095f      B  89 
ntddr                               000000      B  86 
ntss                                000010      B  85  A 111 
nwait                               00063f      B  90 
par_tm_en                           000001      B 149 
post_sleep                          000587'     A 481  A 480 
pre_disc                            0004de'     A 268  A 267 
pre_read                            0004f4'     A 292  A 267 
pre_sleep                           000583'     A 473  A 472  A 489 
prom                                008000      B  35 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   22

LABEL                                VALUE       DEFN    REF

rawdata_loop                        00056c'     A 442  A 419  A 441 
rd_disc                             008000      B  59  A 275  A 296  A 598 
rd_out2                             006000      B  58 
rd_rsv                              00e000      B  62 
rd_rx                               004000      B  57 
rd_rx_out                           000000      B  55  A 281  A 303 
read_fifo_empty                     000500'     A 306  A 301 
read_init                           000478'     A 114  A 112 
ready_loop                          0005fa'     A 668  A 673  A 676 
rs_fifo                             00c000      B  61 
rs_rx_fifo                          00a000      B  60  A 125  A 227 
rsp_clear                              REF             A  16  A 117  A 465 
rsp_freq                               REF             A  16  A 643 
rsp_init                               REF             A  16  A 116 
rsp_mstart                             REF             A  16  A 118  A 239 
rsp_reset                              REF             A  16  A 115  A 123  A 322 
rsp_sstart                             REF             A  16  A 245 
rsv                                 000005      B 114 
rx_discard_loop                     0004e1'     A 273  A 285 
rx_efo                              000040      B 166  A 278  A 299 
rx_ffo                              000020      B 165 
rx_hfo                              000080      B 167 
rx_read_loop                        0004f5'     A 294  A 308 
scratch                             000060      B  36  A  62  A  63  A  64  A  65 
                                                       A  66  A  67  A  68 
seq_len                             00ffff      B 144 
slave_startup                       0004cf'     A 243  A 232 
stack                               00013f      B  37 
stackres                            000100-     A  57  A  80 
static_header                       000650'     A 764  A 706  A 769 
static_header_end                   000659'     A 767  A 769 
static_header_len                   000008      A 769  A 707 
station_code                        000441'     A  29  A 714 
swwsr_ds0                           000006      B  73 
swwsr_ds1                           000009      B  74 
swwsr_is                            00000c      B  75  A 261  A 263  A 316 
swwsr_ps0                           000000      B  71 
swwsr_ps1                           000003      B  72 
sync_units                          0005f4'     A 657  A 198  A 225  A 509 
test_28                             000002      B 126 
tlm_efo                             000008      B 163 
tlm_ffo                             000004      B 162 
tlm_hfo                             000010      B 164 
transfer                               REF             A  18 
transfer_table_sz                      REF             A  18 
trm_28                              000001      B 125  A 601 
tspc_Free                           008000      B 186  A 137 
tspc_RSRfull                        002000      B 184 
tspc_Rrdy                           000400      B 181 
tspc_Soft                           004000      B 185 
tspc_XSRfull                        001000      B 183 
tspc_Xrdy                           000800      B 182 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 17:42:05 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.1.abs                                                        PAGE   23

LABEL                                VALUE       DEFN    REF

tspc_dlb                            000002      B 172 
tspc_fo                             000004      B 173 
tspc_fsm                            000008      B 174  A 137 
tspc_in0                            000100      B 179  A 672 
tspc_in1                            000200      B 180  A 675 
tspc_mcm                            000010      B 175 
tspc_nRrst                          000080      B 178 
tspc_nXrst                          000040      B 177 
tspc_tdm                            000001      B 171 
tspc_txm                            000020      B 176 
unit_designation                    00043c'     A  27  A 231  A 387  A 710 
walk_skip                           0005e9'     A 631  A 602 
wr_disc                             008000      B  48  A  98  A 130  A 326  A 339 
                                                       A 353  A 462  A 521  A 539 
                                                       A 663  A 682 
wr_dog                              00a000      B  49  A  99  A 469 
wr_out                              00c000      B  50 
wr_out0                             002000      B  44 
wr_out1                             004000      B  45 
wr_rd_fifo                          006000      B  47 
wr_rs_rx                            000000      B  43  A  97 
wr_rsv                              00e000      B  51 
wr_rx                               004000      B  46 
