TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE    1

      46 00043a                 .text
      47                        .copy       "sond_v1.0.asm"
 A     1              ;*****************************************************************************
 A     2              ;
 A     3              ; Dartmouth College AGO Rx-DSP Program
 A     4              ;
 A     5              ; Written by: Micah P. Dombrowski and Nathan B. Utterback
 A     6              ;     w/ code segments from TI DSP Library
 A     7              ;
 A     8              ;*****************************************************************************
 A     9              
 A    10                      .mmregs
 A    11                      .global ZERO, BMAR, PREG, DBMR, INDX, ARCR, TREG1
 A    12                      .global TREG2, CBSR1, CBER1, CBSR2, CBER2
 A    13                      .global RXDSP_START
 A    14              ;       .ref    _RxDSP_Monitor
 A    15                      .ref    _serial_cook
 A    16                      .ref    rsp_clear, rsp_reset, rsp_init, rsp_mstart, rsp_sstart, rsp_freq
 A    17              ;       .ref    ad6620_soft_reset, ad6620_filter, ad6620_master_run, rsp_setup
 A    18                      .ref    transfer, transfer_table_sz
 A    19                      .global bridge_data, buff_clear_loop
 A    20                      .def    ago_main, int_nmi
 A    21                      
 A    22                      .include "rx-dsp.h"
 A    23              ;       .include "int_table.h"
 A    24 00043a               .text
 A    25              
 A    26 00043a 6B28  find_me                         .ulong          0x6B28FE40
         00043b FE40 
 A    27 00043c 0000  unit_designation        .uword          0       ; Unit number (Master = 0)
 A    28 00043d 0076  code_version            .string         "v1.0"
         00043e 0031 
         00043f 002E 
         000440 0030 
 A    29 000441 0053  station_code            .string         "SS"
         000442 0053 
 A    30              
 A    31 000443 0030  band_width                      .string         "0750"
         000444 0037 
         000445 0035 
         000446 0030 
 A    32              
 A    33              ; Rotating center frequency table
 A    34              ;       32-bit values derived by mapping the sampling frequency (S) to the 0:2^32 range,
 A    35              ;       then taking the ratio of center frequency (C) to S, i.e. C/S*2^32
 A    36              
 A    37 000447       cfreq_table:
 A    38 000447 01D2                  .word   0x01d2, 0xf1c9  ;  475 KHz
         000448 F1C9 
 A    39 000449 04B4                  .word   0x04b4, 0x39a7  ; 1225 KHz
         00044a 39A7 
 A    40 00044b 0795                  .word   0x0795, 0x8185  ; 1975 KHz
         00044c 8185 
 A    41 00044d 0A76                  .word   0x0a76, 0xc964  ; 2725 KHz
         00044e C964 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE    2

 A    42 00044f       cfreq_table_end:
 A    43        0008  cfreq_table_sz  .set    cfreq_table_end-cfreq_table
 A    44              
 A    45              ; Run constants 
 A    46        0200  data_n                  .set    512     ; Size of each FFT (# of IQ pairs)
 A    47        0200  data_discard    .set    512             ; number of words to discard from Rx FIFO before taking data
 A    48        0001  data_minor_sz   .set    1               ; number of acquisitions per half-buffer interrupt
 A    49        0418  abu_buff_sz             .set    1048    ; size of serial buffer (2x major frame size IN BYTES)
 A    50        0004  fsync_sz                .set    4               ; # of serial frame sync bytes (should be multiple of 4)
 A    51              
 A    52              ; Memory allocations
 A    53 002000       data_addr               .usect  ".data_v", 0x800, 1, 1
 A    54 000100       stackres                .usect  ".stack_v", 0x40, 1, 1
 A    55 000800       abu_buff_loc    .usect  ".sbuff_v", abu_buff_sz, 1, 1
 A    56        0A0C- abu_buff_hloc   .set    abu_buff_loc+abu_buff_sz/2      ; half-way
 A    57              
 A    58              ; Scratchpad RAM usage
 A    59        0060  bridge_count    .set    scratch
 A    60        0061  minor_count             .set    scratch+1
 A    61        0062  bspce_save              .set    scratch+2
 A    62        0063  bridge_size             .set    scratch+3
 A    63        0064  major_count             .set    scratch+4       ; two words!
 A    64        0066  nco_freq                .set    scratch+6       ; two words!
 A    65        0068  cfreq_tp                .set    scratch+8
 A    66              
 A    67 000140               .bss TempLmem,1*2,0,0  ;temporary dword
 A    68              
 A    69              
 A    70 00044f       RXDSP_START
 A    71 00044f       ago_main:
 A    72              
 A    73 00044f F6BD          rsbx    XF
 A    74              
 A    75              ; Processor setup
 A    76 000450 F7BB          ssbx    INTM            ; Disable interrupts 
 A    77 000451 7718          stm     #(stackres+0x40), SP    ; set Stack Pointer
         000452 0140-
 A    78 000453 771D          stm     #npmst,PMST     ; Set processor mode/status
         000454 00A3 
 A    79              ;       stm #defst0, ST0
 A    80              ;       stm     #defst1, ST1
 A    81 000455 F6B8          rsbx    SXM             ; Suppress sign extension 
 A    82              ;       rsbx    XF
 A    83 000456 F495          nop                     ; Space for branch to app
 A    84 000457 F495          nop
 A    85                      
 A    86 000458 F7BD          ssbx    XF
 A    87 000459 EC40          rpt             #64
 A    88 00045a F495          nop
 A    89 00045b F6BD          rsbx    XF
 A    90               
 A    91 00045c       appcode:
 A    92              ;       stm     #0,state        ; Clear interrupt routine state
 A    93 00045c 7710          stm     #0,AR0          ; Clear auxilliary register 0
         00045d 0000 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE    3

 A    94 00045e 7510          portw   AR0,wr_rs_rx    ; Reset AD6620 RSP
         00045f 0000 
 A    95 000460 7510          portw   AR0,wr_disc     ; Enable parallel TLM drivers, I_Q out
         000461 8000 
 A    96 000462 7510          portw   AR0,wr_dog      ; Strobe watchdog timer
         000463 A000 
 A    97                      
 A    98 000464 7710          stm     #0,AR0  ; Clear all auxiliary registers
         000465 0000 
 A    99 000466 7711          stm     #0,AR1
         000467 0000 
 A   100 000468 7712          stm     #0,AR2
         000469 0000 
 A   101 00046a 7713          stm     #0,AR3
         00046b 0000 
 A   102 00046c 7714          stm     #0,AR4
         00046d 0000 
 A   103 00046e 7715          stm     #0,AR5
         00046f 0000 
 A   104 000470 7716          stm     #0,AR6
         000471 0000 
 A   105 000472 7717          stm     #0,AR7
         000473 0000 
 A   106              
 A   107 000474 7701          stm             #0FFh,IFR       ; Clear any pending interrupts
         000475 00FF 
 A   108 000476 7726          stm     #ntss,TCR       ; Stop timer, if running
         000477 0010 
 A   109                      .global read_init
 A   110              ; Main data code start
 A   111 000478       read_init:
 A   112 000478 F074          call    rsp_reset
         000479 01CD!
 A   113 00047a F074          call    rsp_init
         00047b 01E7!
 A   114 00047c F074          call    rsp_clear
         00047d 0234!
 A   115 00047e F074          call    rsp_mstart
         00047f 01D4!
 A   116                      
 A   117 000480 F070          rpt             #4444   ; Let the AD6620 do its first initialization in peace
         000481 115C 
 A   118 000482 F495          nop
 A   119                      
 A   120 000483 F074          call    rsp_reset
         000484 01CD!
 A   121                      
 A   122 000485 7410          portr   rs_rx_fifo, AR0    ; Reset Rx FIFO - also sent by wire to Slave
         000486 A000 
 A   123 000487 F495          nop
 A   124 000488 F495          nop     
 A   125              
 A   126 000489 7710          stm     #lsb_sel, AR0   ; Reset acq_seq
         00048a 0002 
 A   127 00048b 7510          portw   AR0, wr_disc
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE    4

         00048c 8000 
 A   128 00048d F495          nop
 A   129                      
 A   130              
 A   131                      ; TSP shutoff
 A   132                      
 A   133              ;       stm             #(tspc_Free+tspc_fsm+tspc_nXrst+tspc_nRrst), TSPC
 A   134 00048e 7732          stm             #(tspc_Free+tspc_fsm), TSPC
         00048f 8008 
 A   135                      
 A   136                      ; BSP prep
 A   137              
 A   138 000490 7722          stm             #(bspc_Free+bspc_fsm), BSPC0            ; reset BSP
         000491 8008 
 A   139 000492 7700          stm             #(int_bx), IMR                  ; unmask serial transmit interrupt
         000493 0020 
 A   140 000494 7723          stm             #(bspce_fe+bspce_bxe+bspce_haltx), BSPCE0       ; 10-bit words, enable tx autobuffer,
         000495 1480 
 A   141 000496 7738          stm             #(abu_buff_loc-0x800), AXR      ; where in the 2048 words of buffer RAM 
         000497 0000-
 A   142                                                                      ; does the transmit buffer start?
 A   143 000498 7739          stm             #(abu_buff_sz), BKX             ; buffer size
         000499 0418 
 A   144                      
 A   145              ; Clear entire serial buffer
 A   146 00049a 7714          stm             #abu_buff_loc, AR4
         00049b 0800-
 A   147 00049c 771A          stm             #abu_buff_sz-1, BRC
         00049d 0417 
 A   148 00049e F072          rptb    buff_init_loop - 1
         00049f 04A1'
 A   149                      
 A   150 0004a0 7694          st              #0h, *AR4+
         0004a1 0000 
 A   151                      .global buff_init_loop, head_ramp, major_loop
 A   152 0004a2       buff_init_loop:
 A   153              
 A   154              ; set initial frequency table position
 A   155              
 A   156 0004a2 7668          st              #cfreq_table_sz-2, @cfreq_tp
         0004a3 0006 
 A   157              
 A   158              
 A   159              ;       rsbx    INTM ; global interrupt enable
 A   160              
 A   161              ; All Aux Registers are fungible in the main loop: values which must be preserved
 A   162              ; over time are stored in the scratchpad RAM as defined above.  Note that only AR6
 A   163              ; and AR7 are required to be preserved by the DSP Library functions (and most others),
 A   164              ; all other ARx may be modified within function calls.
 A   165              
 A   166 0004a4 E800          ld              #0, A
 A   167 0004a5 4E64          dst             A, @major_count
 A   168                      
 A   169              ; Set initial bspce_save such that the first acquisition will
 A   170              ; write to the second half of the serial buffer
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE    5

 A   171 0004a6 7662          st              #bspce_xh, @bspce_save
         0004a7 0800 
 A   172                              
 A   173                      ; boot lag: insert >50 ms delay to allow everyone plenty of time to boot up
 A   174 0004a8 771A          stm             #511, BRC
         0004a9 01FF 
 A   175 0004aa F495          nop
 A   176 0004ab F495          nop
 A   177 0004ac F272          rptbd   boot_delay_loop - 1
         0004ad 04B5'
 A   178 0004ae F495          nop
 A   179 0004af F495          nop
 A   180                      
 A   181 0004b0 F495          nop
 A   182                      
 A   183 0004b1 F070          rpt             #4096
         0004b2 1000 
 A   184 0004b3 F495          nop
 A   185                      
 A   186 0004b4 F495          nop
 A   187 0004b5 F495          nop     
 A   188                      
 A   189 0004b6       boot_delay_loop:
 A   190              
 A   191 0004b6 F495          nop
 A   192 0004b7 F495          nop
 A   193                      
 A   194                      ; now synchronize units for the first time
 A   195 0004b8 F074          call    sync_units
         0004b9 05E6'
 A   196              
 A   197                      ; Start BSP transmits
 A   198 0004ba 7722          stm             #(bspc_Free + bspc_fsm + bspc_nXrst), BSPC0     ; have to hold fsm bit
         0004bb 8048 
 A   199 0004bc F495          nop
 A   200 0004bd F495          nop
 A   201                      
 A   202              ****
 A   203              * Main loop
 A   204              ****
 A   205              
 A   206 0004be       major_loop:
 A   207                      .global major_loop
 A   208                      
 A   209                      ; Method:
 A   210                      ;
 A   211                      ; Master waits for acq_seq_rdy from Slaves, then raises acq_seq_out, starting synced
 A   212                      ; acquisition.  Note any previous acquisition will still be transferring its last
 A   213                      ; half-buffer, and the ABU will be set to halt transmissions when that half is done.
 A   214                      ; The acq_seq_rdy & out lines are both held high on All, until the end of this new 
 A   215                      ; acquisition and half-buffer fill.  Then Master waits for its own ABU haltx, and 
 A   216                      ; then for !acq_seq_rdy (signaling Slaves have hit ABU haltx), before dropping 
 A   217                      ; acq_seq_out, signaling time for the next synchronized ABU startup.
 A   218              
 A   219 0004be F074          call    cfreq_walk
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE    6

         0004bf 05C5'
 A   220                      
 A   221                      ; acquisition sync
 A   222 0004c0 F074          call    sync_units
         0004c1 05E6'
 A   223                              
 A   224 0004c2 7410          portr   rs_rx_fifo, AR0    ; Reset Rx FIFO - also sent by wire to Slave
         0004c3 A000 
 A   225                              
 A   226              ;       dld             #
 A   227                      
 A   228 0004c4 60F8          cmpm    *(unit_designation), #0
         0004c5 043C'
         0004c6 0000 
 A   229 0004c7 F820          bc              slave_startup, NTC
         0004c8 04CF'
 A   230                      
 A   231                      ; if Master (unit 0) insert delay time to allow
 A   232                      ; Slaves time to detect acq_seq_out and start up
 A   233 0004c9 EC80          rpt             #128
 A   234 0004ca F495          nop
 A   235                      
 A   236 0004cb F074          call    rsp_mstart      ; start digitizing as Master
         0004cc 01D4!
 A   237                      
 A   238 0004cd F073          b               data_acq_start
         0004ce 04D1'
 A   239                      
 A   240 0004cf       slave_startup:
 A   241              
 A   242 0004cf F074          call    rsp_sstart      ; start digitizing as Slave
         0004d0 01DB!
 A   243              
 A   244                      
 A   245              ;
 A   246              ; Reads
 A   247              ;
 A   248 0004d1       data_acq_start:
 A   249              
 A   250 0004d1 7660          st      #0, @bridge_count       ; reset bridged data counter
         0004d2 0000 
 A   251 0004d3 7661          st      #0, @minor_count        ; reset minor frame counter
         0004d4 0000 
 A   252              
 A   253              ;
 A   254              ; Set wait states for Rx FIFO
 A   255              ;
 A   256 0004d5 4828          ldm     SWWSR, A
 A   257 0004d6 F120          ld      #65535, B
         0004d7 FFFF 
 A   258 0004d8 F35C          xor     #7, #swwsr_is, B ; (0b111<<Nset XOR 0d65535) creates bitmask
         0004d9 0007 
 A   259 0004da F280          and     B, A                     ; mask out bits of interest
 A   260 0004db F04C          or      #0, #swwsr_is, A ; (A or Nwait<<Nset) to set Nwait to Nset
         0004dc 0000 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE    7

 A   261                      ; Nwait = 0 means no additional waits
 A   262 0004dd 8828          stlm    A, SWWSR
 A   263              
 A   264                      .global pre_disc, pre_read
 A   265 0004de       pre_disc:
 A   266              
 A   267              ; loop to read and discard first data out of AD6620
 A   268 0004de 7712          stm             #(data_discard), AR2
         0004df 0200 
 A   269 0004e0 F495          nop
 A   270 0004e1       rx_discard_loop:
 A   271                      ; read only if rx fifo is nonempty
 A   272 0004e1 7410          portr   rd_disc, AR0
         0004e2 8000 
 A   273 0004e3 F495          nop
 A   274 0004e4 F495          nop
 A   275 0004e5 6110          bitf    AR0, rx_efo
         0004e6 0040 
 A   276                      
 A   277 0004e7 F820          bc      discard_fifo_empty, NTC
         0004e8 04EC'
 A   278 0004e9 7411          portr   rd_rx_out, AR1          ; read data into AR1
         0004ea 0000 
 A   279 0004eb 6D8A          mar     *AR2-                           ; decrement word counter                
 A   280 0004ec       discard_fifo_empty:
 A   281              
 A   282 0004ec 6C82          banz    rx_discard_loop, *AR2
         0004ed 04E1'
 A   283                      
 A   284                      
 A   285              ; loop to read data from Rx FIFO into RAM
 A   286 0004ee 7710          stm     #2, AR0
         0004ef 0002 
 A   287 0004f0 7711          stm     #data_addr, AR1 ; set address for first data word
         0004f1 2000-
 A   288 0004f2 7712          stm     #(data_n*2-1), AR2
         0004f3 03FF 
 A   289 0004f4       pre_read:
 A   290 0004f4 F495          nop
 A   291 0004f5       rx_read_loop:
 A   292                      ; read only if rx fifo is nonempty
 A   293 0004f5 7413          portr   rd_disc, AR3
         0004f6 8000 
 A   294 0004f7 F495          nop
 A   295 0004f8 F495          nop
 A   296 0004f9 6113          bitf    AR3, rx_efo
         0004fa 0040 
 A   297                      
 A   298 0004fb F820          bc      read_fifo_empty, NTC
         0004fc 0500'
 A   299                      
 A   300 0004fd 7491          portr   rd_rx_out, *AR1+
         0004fe 0000 
 A   301 0004ff 6D8A          mar     *AR2-                   ; decrement word counter
 A   302                      
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE    8

 A   303 000500       read_fifo_empty:
 A   304              
 A   305 000500 6E82          banzd   rx_read_loop, *AR2
         000501 04F5'
 A   306 000502 F495          nop
 A   307 000503 F495          nop
 A   308                      
 A   309              ;
 A   310              ; Set wait states for other stuff (full 7)
 A   311              ;
 A   312 000504 4828          ldm     SWWSR, A
 A   313 000505 F04C          or      #7, #swwsr_is, A ; (A or Nwait<<Nset) to set Nwait to Nset
         000506 0007 
 A   314 000507 8828          stlm    A, SWWSR
 A   315 000508 F495          nop
 A   316 000509 F495          nop
 A   317                      
 A   318              ; Stop acquisition
 A   319 00050a F074          call    rsp_reset
         00050b 01CD!
 A   320              
 A   321                      ; drop acq flags
 A   322 00050c 7710          stm             #lsb_sel, AR0
         00050d 0002 
 A   323 00050e 7510          portw   AR0, wr_disc
         00050f 8000 
 A   324                      
 A   325              *
 A   326              * End data collection, begin serial data handling
 A   327              *
 A   328              
 A   329 000510 7663          st      #4*data_n, @bridge_size
         000511 0800 
 A   330              
 A   331              ; entry point for bridging data transfers over multiple serial half-buffers
 A   332 000512       bridge_data:
 A   333                      .global bridge_data
 A   334              
 A   335 000512 7710          stm             #(acq_test5+lsb_sel), AR0 ; send acq_seq, set lsb_sel
         000513 0022 
 A   336 000514 7510          portw   AR0, wr_disc
         000515 8000 
 A   337              
 A   338 000516 F495          nop
 A   339 000517 F495          nop
 A   340                      ; Determine serial buffer position
 A   341 000518 7713          stm             #abu_buff_loc, AR3      ; load buffer base
         000519 0800-
 A   342                      
 A   343 00051a 6162          bitf    @bspce_save, #bspce_xh          ; read XH out of stored BSPCE register
         00051b 0800 
 A   344 00051c F495          nop
 A   345 00051d F495          nop
 A   346 00051e F820          bc              buff_skip, NTC  ; if first half _finished_ (XH=0, NTC), do nothing
         00051f 0526'
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE    9

 A   347                      
 A   348 000520 6B13          addm    #(abu_buff_sz/2), @AR3
         000521 020C 
 A   349 000522 7710          stm             #(acq_test3+lsb_sel), AR0
         000523 000A 
 A   350 000524 7510          portw   AR0, wr_disc
         000525 8000 
 A   351              
 A   352 000526       buff_skip:
 A   353 000526 F495          nop
 A   354 000527 F495          nop
 A   355 000528 F495          nop
 A   356 000529 F495          nop
 A   357              
 A   358 00052a       abu_first_half:
 A   359                      .global abu_first_half
 A   360              
 A   361 00052a F7BB          ssbx    INTM
 A   362                      
 A   363              ; Clear serial buffer half
 A   364 00052b E734          mvmm    AR3, AR4
 A   365 00052c F495          nop
 A   366 00052d F070          rpt             #(abu_buff_sz/2-1)
         00052e 020B 
 A   367 00052f 7694          st              #0x00, *AR4+
         000530 0000 
 A   368                      
 A   369                      
 A   370              ; reset AR4 for data copy
 A   371 000531 E734          mvmm    AR3, AR4
 A   372 000532 F495          nop
 A   373 000533 F495          nop
 A   374                      
 A   375 000534       abu_fill_start:
 A   376                      .global abu_fill_start
 A   377              
 A   378              
 A   379                      ; two-byte frame sync 0xEB90
 A   380 000534 7694          st              #0xEB, *AR4+
         000535 00EB 
 A   381 000536 7694          st              #0x90, *AR4+
         000537 0090 
 A   382              
 A   383                      ; two-byte infofoop
 A   384 000538 6FF8          ld              *(unit_designation), #6, A      ; byte 1, 2 MSB, unit number
         000539 043C'
         00053a 0C46 
 A   385 00053b 1A61          or              @minor_count, A                         ; byte 1, 6 LSB, minor frame number
 A   386 00053c 8094          stl             A, *AR4+
 A   387 00053d 5664          dld             @major_count, A                         ; byte 2, 8 bit, major frame number
 A   388 00053e F030          and             #0xFF, A
         00053f 00FF 
 A   389 000540 8094          stl             A, *AR4+
 A   390              
 A   391 000541       dinner_is_ready:
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   10

 A   392                      .global dinner_is_ready
 A   393                      
 A   394              
 A   395 000541 F120          ld              #((abu_buff_sz/2-fsync_sz)/2-1), B      ; let's stick the BRC value here...
         000542 0103 
 A   396                      
 A   397                      ; If haltx is true, we are starting a new major frame, so write the header
 A   398 000543 6123          bitf    BSPCE0, #bspce_haltx
         000544 1000 
 A   399 000545 F820          bc              header_skip, NTC
         000546 054B'
 A   400                      
 A   401 000547 F074          call    hwrite  ; write out header, uses & modified write address in AR4
         000548 05FC'
 A   402 000549 F310          sub             #16, B  ; oops, 32 bytes less space in this half buffer
         00054a 0010 
 A   403              
 A   404 00054b       header_skip:
 A   405                      
 A   406                                              
 A   407                      ; copy raw data (words) into serial buffer (bytes)
 A   408 00054b F020          ld              #data_addr, A
         00054c 2000-
 A   409 00054d 6F60          add             @bridge_count, #-1, A   ; div by 2 to increment input word-wise
         00054e 0C1F 
 A   410 00054f 8812          stlm    A, AR2
 A   411 000550 891A          stlm    B, BRC  ; and here's our BRC setup
 A   412                      
 A   413 000551 7210          mvdm    @bridge_size, AR0       ; goal bridge size
         000552 0063 
 A   414 000553 7211          mvdm    @bridge_count, AR1      ; current count
         000554 0060 
 A   415                      
 A   416 000555 F072          rptb    rawdata_loop - 1
         000556 056B'
 A   417              
 A   418 000557 6F82          ld              *AR2, -8, A     ; load (data word) >> 8 to Acc
         000558 0C58 
 A   419 000559 F030          and             #0xFF, A        ; mask to low-byte
         00055a 00FF 
 A   420 00055b 8094          stl             A, *AR4+        ; save to serial buffer
 A   421 00055c 6D91          mar             *AR1+           ; count bytes
 A   422                      
 A   423 00055d 1092          ld              *AR2+, A        ; reload and increment
 A   424 00055e F030          and             #0xFF, A        ; mask
         00055f 00FF 
 A   425 000560 8094          stl             A, *AR4+        ; save
 A   426 000561 6D91          mar             *AR1+           ; count bytes
 A   427                      
 A   428 000562 F5A9          cmpr    LT, AR1                         ; If we're not done with a bridged data sequence, 
 A   429 000563 F495          nop
 A   430 000564 F495          nop
 A   431 000565 FD20          xc              1, NTC
 A   432 000566 F6BF          rsbx    BRAF
 A   433 000567 F495          nop
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   11

 A   434 000568 F495          nop
 A   435 000569 F495          nop
 A   436 00056a F495          nop
 A   437 00056b F495          nop
 A   438                      .global rawdata_loop, dbg_transfer_skip
 A   439 00056c       rawdata_loop:
 A   440              
 A   441 00056c F495          nop
 A   442 00056d F495          nop
 A   443                      
 A   444 00056e 7311          mvmd    AR1, @bridge_count
         00056f 0060 
 A   445              
 A   446              ; Bit reverse and add start/stop bits
 A   447 000570 4813          ldm             AR3, A
 A   448 000571 F120          ld              #(abu_buff_sz/2), B
         000572 020C 
 A   449              
 A   450 000573 F074          call    _serial_cook
         000574 0652!
 A   451                      
 A   452              
 A   453              ;       rsbx    INTM
 A   454                      
 A   455 000575 6B61          addm    #1, @minor_count
         000576 0001 
 A   456 000577 F495          nop
 A   457 000578 F495          nop
 A   458 000579 7710          stm             #(lsb_sel), AR0
         00057a 0002 
 A   459 00057b 7510          portw   AR0, wr_disc
         00057c 8000 
 A   460              
 A   461              ; buffer is now loaded
 A   462 00057d F074          call    rsp_clear       ; clear NCO RAM, do it here since we have some free time
         00057e 0234!
 A   463              
 A   464              ; Strobe watchdog- once per minor frame cycle
 A   465 00057f 7710          stm             #0, AR0        ; Data is not used- just the wr_dog strobe
         000580 0000 
 A   466 000581 7510          portw   AR0,wr_dog     ; Strobe the watchdog
         000582 A000 
 A   467              
 A   468              ; clear interrupt flags, then idle until an interrupt.
 A   469                      .global pre_sleep
 A   470 000583       pre_sleep:
 A   471                      
 A   472 000583 F7BB          ssbx    INTM
 A   473 000584 7701          stm             #0FFh,IFR               ; Clear any pending interrupts
         000585 00FF 
 A   474                      
 A   475 000586 F6E1          idle    2       ; and now...we wait.
 A   476              
 A   477                      .global post_sleep
 A   478 000587       post_sleep:
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   12

 A   479                      
 A   480              ; check for aux int -> serial monitor
 A   481              ;       bitf    IFR, #int_3
 A   482              ;       cc              inth_3, TC
 A   483                      
 A   484              ; make sure we had a serial interrupt
 A   485 000587 6101          bitf    IFR, #int_bx
         000588 0020 
 A   486 000589 F820          bc              pre_sleep, NTC  ; stray interrupt, go back to IDLE
         00058a 0583'
 A   487                      
 A   488 00058b F495          nop
 A   489                              
 A   490 00058c 7701          stm             #int_bx, IFR    ; clear int flag
         00058d 0020 
 A   491                      
 A   492 00058e 7323          mvmd    BSPCE0, @bspce_save ; store control extension register
         00058f 0062 
 A   493                      
 A   494              ; if this is a new major frame, we need to sync
 A   495              ; everyone up by waiting for all ABU haltx.
 A   496              
 A   497 000590 6123          bitf    BSPCE0, #bspce_haltx
         000591 1000 
 A   498 000592 F820          bc              abu_restart_skip, NTC
         000593 05A3'
 A   499              
 A   500 000594       abu_haltx_wait:
 A   501                      .global abu_haltx_wait
 A   502              
 A   503                      ; ABU has halted.  Reset ABU, and synchronize
 A   504 000594 7723          stm             #(bspce_fe+bspce_bxe), BSPCE0   ; 10-bit words, enable tx ABU, disable haltx
         000595 0480 
 A   505              
 A   506 000596 F074          call    sync_units
         000597 05E6'
 A   507                      
 A   508                      ; Start BSP transmits
 A   509 000598 7722          stm             #(bspc_Free + bspc_fsm + bspc_nXrst), BSPC0     ; have to hold fsm bit
         000599 8048 
 A   510 00059a F495          nop
 A   511 00059b F495          nop
 A   512                      
 A   513 00059c F070          rpt             #16383
         00059d 3FFF 
 A   514 00059e F495          nop
 A   515                      
 A   516              ; unset acq_seq, keep lsb_sel
 A   517 00059f 7710          stm             #lsb_sel, AR0
         0005a0 0002 
 A   518 0005a1 7510          portw   AR0, wr_disc
         0005a2 8000 
 A   519              
 A   520 0005a3       abu_restart_skip:
 A   521                      .global abu_restart_skip
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   13

 A   522                      
 A   523 0005a3 7210          mvdm    @bridge_size, AR0       ; need to copy these 
         0005a4 0063 
 A   524 0005a5 7211          mvdm    @bridge_count, AR1      ; to use CMPR
         0005a6 0060 
 A   525 0005a7 F495          nop
 A   526 0005a8 F495          nop
 A   527 0005a9 F5A9          cmpr    LT, AR1                         ; If we're not done with a bridged data sequence, 
 A   528 0005aa F830          bc              bridge_data, TC ; jump to bridge_data to continue transfers, otherwise...
         0005ab 0512'
 A   529              
 A   530 0005ac 5664          dld             @major_count, A ; increment major frame counter
 A   531 0005ad F000          add             #1, A
         0005ae 0001 
 A   532 0005af 4E64          dst             A, @major_count
 A   533                      
 A   534                      ; The final half is transmitting, we want to halt when it finishes.
 A   535 0005b0 7710          stm             #(acq_test4+lsb_sel), AR0
         0005b1 0012 
 A   536 0005b2 7510          portw   AR0, wr_disc
         0005b3 8000 
 A   537 0005b4 6923          orm             #bspce_haltx, BSPCE0
         0005b5 1000 
 A   538 0005b6 F495          nop
 A   539 0005b7 F495          nop
 A   540              ;       stm             #(lsb_sel), AR0
 A   541              ;       portw   AR0, wr_disc
 A   542              
 A   543 0005b8 F073          b               major_loop              ; new data acquisition
         0005b9 04BE'
 A   544              
 A   545              ;;
 A   546              ; Main acquisiton ('appcode') branch done
 A   547              ;;      
 A   548              
 A   549              ;;
 A   550              ; Interrupts
 A   551              ;;
 A   552              
 A   553              ; Non-Maskable Interrupt
 A   554              ;               this is hit by the watchdog
 A   555 0005ba       int_nmi:
 A   556              
 A   557 0005ba F495          nop     
 A   558 0005bb 771D          stm             #npmst, PMST    ; Reset PMST to be sure IPTR -> 0x80
         0005bc 00A3 
 A   559                      
 A   560              ; Alternative: IPTR=0x1FF, OVLY=1, all else =0
 A   561              ; This should set things up to completely reload the program from the EPROM on reset
 A   562              ;       stm             #0xFFA0, PMST
 A   563              
 A   564 0005bd F7E0          reset   ; I don't have to take this.  ...I'm going home.
 A   565                      
 A   566 0005be FC00          ret             ; should never get here!
 A   567                      
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   14

 A   568              
 A   569 0005bf       inth_3:
 A   570 0005bf F7BB          ssbx    INTM
 A   571 0005c0 7701          stm             #int_3, IFR     ; clear int flag
         0005c1 0100 
 A   572              
 A   573                      ; call serial monitor
 A   574              
 A   575                      
 A   576              ;       calld   _RxDSP_Monitor
 A   577              ;       stm             #bspce_haltx, BSPCE      ; tell serial transmit to halt after completing this half-bu
 A   578              
 A   579                      
 A   580 0005c2 FE00          retd
 A   581 0005c3 F495          nop
 A   582 0005c4 F495          nop
 A   583              
 A   584              ****
 A   585              * cfreq_walk
 A   586              *
 A   587              * walks through the table of center frequencies at label #cfreq_table
 A   588              *
 A   589              * stores table position @cfreq_tp and current NCO value as a 32-bit number @nco_freq
 A   590              *
 A   591              ****
 A   592              
 A   593 0005c5       cfreq_walk:
 A   594              
 A   595 0005c5 6B68          addm    #2, @cfreq_tp
         0005c6 0002 
 A   596 0005c7 F495          nop
 A   597 0005c8 F495          nop
 A   598 0005c9 6068          cmpm    @cfreq_tp, #cfreq_table_sz
         0005ca 0008 
 A   599 0005cb F495          nop
 A   600 0005cc F495          nop
 A   601 0005cd FF30          xc              2, TC
 A   602 0005ce 7668          st              #0, @cfreq_tp
         0005cf 0000 
 A   603                      
 A   604 0005d0 F495          nop
 A   605 0005d1 F495          nop
 A   606                      
 A   607 0005d2 F020          ld              #(cfreq_table), A
         0005d3 0447'
 A   608 0005d4 0068          add             @cfreq_tp, A
 A   609 0005d5 8810          stlm    A, AR0
 A   610 0005d6 F495          nop
 A   611 0005d7 F495          nop
 A   612 0005d8 1190          ld              *AR0+, B
 A   613 0005d9 8166          stl             B, @nco_freq
 A   614 0005da F3E8          sftl    B, #8
 A   615 0005db F3E8          sftl    B, #8
 A   616 0005dc 1080          ld              *AR0, A
 A   617 0005dd 8067          stl             A, @(nco_freq+1)
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   15

 A   618 0005de F2A0          or              B, A
 A   619              
 A   620              
 A   621 0005df F495          nop
 A   622 0005e0 F495          nop             
 A   623              
 A   624 0005e1 F074          call    rsp_freq
         0005e2 01E2!
 A   625                              
 A   626 0005e3 FE00          retd
 A   627 0005e4 F495          nop
 A   628 0005e5 F495          nop
 A   629              
 A   630              
 A   631              ****
 A   632              * sync_units
 A   633              *
 A   634              * synchronizes master/slave units by toggling and waiting for latched lines
 A   635              *
 A   636              ****
 A   637              
 A   638 0005e6       sync_units:
 A   639                      
 A   640                      ; Raise test2 line.  On the Master this should do nothing (NC),
 A   641                      ; on the Slaves it signals the Master they are ready.
 A   642              
 A   643 0005e6 7710          stm             #(acq_seq_rdy+lsb_sel), AR0
         0005e7 0006 
 A   644 0005e8 7510          portw   AR0, wr_disc
         0005e9 8000 
 A   645 0005ea F495          nop
 A   646 0005eb F495          nop
 A   647                      
 A   648                      ; Check status of TSP, wait for IN1 & IN2 high
 A   649 0005ec       ready_loop:
 A   650              
 A   651 0005ec F495          nop
 A   652                      
 A   653 0005ed 6132          bitf    TSPC, #tspc_in0
         0005ee 0100 
 A   654 0005ef F820          bc              ready_loop, NTC
         0005f0 05EC'
 A   655                      
 A   656 0005f1 6132          bitf    TSPC, #tspc_in1
         0005f2 0200 
 A   657 0005f3 F820          bc              ready_loop, NTC
         0005f4 05EC'
 A   658                      
 A   659                      ; Raise acq_seq_out--on the Master this signals the Slaves to start, 
 A   660                      ; on the Slaves it does nothing (NC).
 A   661                      
 A   662 0005f5 7710          stm             #(acq_seq_out+acq_seq_rdy+lsb_sel), AR0 ; send acq_seq_out
         0005f6 0086 
 A   663 0005f7 7510          portw   AR0, wr_disc
         0005f8 8000 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   16

 A   664              
 A   665 0005f9 FE00          retd
 A   666 0005fa F495          nop
 A   667 0005fb F495          nop
 A   668                      
 A   669                      
 A   670              ****
 A   671              * hwrite
 A   672              *
 A   673              * Writes a 32-bit header:
 A   674              *
 A   675              * <0xFE6B2840><RxDSP><Unit #><Ver #><NCOF><MFCB><00000000>
 A   676              *
 A   677              ****
 A   678              
 A   679                      .mmregs
 A   680              
 A   681 0005fc       hwrite:
 A   682                      .global hwrite
 A   683              
 A   684 0005fc 4A13          pshm    AR3
 A   685              
 A   686              ; 4-byte sync
 A   687 0005fd 7713          stm             #static_header, AR3     ; Point to static header words
         0005fe 0642'
 A   688 0005ff F070          rpt             #static_header_len              ; <SYNC><RxDSP>
         000600 0008 
 A   689 000601 E59A          mvdd    *AR3+, *AR4+
 A   690                      
 A   691 000602 10F8          ld              *(unit_designation), A
         000603 043C'
 A   692 000604 F000          add             #0x30, A        ; we want the header unit number to be in ASCII
         000605 0030 
 A   693 000606 8094          stl             A, *AR4+
 A   694                      
 A   695 000607 7713          stm             #station_code, AR3
         000608 0441'
 A   696 000609 EC01          rpt             #1
 A   697 00060a E59A          mvdd    *AR3+, *AR4+
 A   698                      
 A   699 00060b 7713          stm             #code_version, AR3
         00060c 043D'
 A   700 00060d EC03          rpt             #3
 A   701 00060e E59A          mvdd    *AR3+, *AR4+
 A   702                      
 A   703 00060f 7713          stm             nco_freq, AR3
         000610 0066 
 A   704 000611 6F83          ld              *AR3, #-8, A
         000612 0C58 
 A   705 000613 F030          and             #0xFF, A
         000614 00FF 
 A   706 000615 8094          stl             A, *AR4+
 A   707 000616 1093          ld              *AR3+, A        ; inc to second word
 A   708 000617 F030          and             #0xFF, A
         000618 00FF 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   17

 A   709 000619 8094          stl             A, *AR4+
 A   710 00061a 6F83          ld              *AR3, #-8, A
         00061b 0C58 
 A   711 00061c F030          and             #0xFF, A
         00061d 00FF 
 A   712 00061e 8094          stl             A, *AR4+
 A   713 00061f 1083          ld              *AR3, A
 A   714 000620 F030          and             #0xFF, A
         000621 00FF 
 A   715 000622 8094          stl             A, *AR4+
 A   716                              
 A   717                      
 A   718 000623 7713          stm             #band_width, AR3
         000624 0443'
 A   719 000625 EC03          rpt             #3
 A   720 000626 E59A          mvdd    *AR3+, *AR4+
 A   721              
 A   722 000627 7713          stm             major_count, AR3
         000628 0064 
 A   723 000629 6F83          ld              *AR3, #-8, A
         00062a 0C58 
 A   724 00062b F030          and             #0xFF, A
         00062c 00FF 
 A   725 00062d 8094          stl             A, *AR4+
 A   726 00062e 1093          ld              *AR3+, A        ; inc to second word
 A   727 00062f F030          and             #0xFF, A
         000630 00FF 
 A   728 000631 8094          stl             A, *AR4+
 A   729 000632 6F83          ld              *AR3, #-8, A
         000633 0C58 
 A   730 000634 F030          and             #0xFF, A
         000635 00FF 
 A   731 000636 8094          stl             A, *AR4+
 A   732 000637 1083          ld              *AR3, A
 A   733 000638 F030          and             #0xFF, A
         000639 00FF 
 A   734 00063a 8094          stl             A, *AR4+
 A   735                      
 A   736 00063b EC03          rpt             #3
 A   737 00063c 7694          st              #0, *AR4+
         00063d 0000 
 A   738                      
 A   739 00063e 8A13          popm    AR3
 A   740                      
 A   741 00063f FE00          retd
 A   742 000640 F495          nop
 A   743 000641 F495          nop
 A   744              
 A   745 000642       static_header:
 A   746 000642 00FE                  .word   0xFE, 0x6B, 0x28, 0x40
         000643 006B 
         000644 0028 
         000645 0040 
 A   747 000646 0052                  .string "RxDSP"
         000647 0078 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   18

         000648 0044 
         000649 0053 
         00064a 0050 
 A   748 00064b       static_header_end:
 A   749                      
 A   750        0008  static_header_len       .set    static_header_end-static_header-1
 A   751              
 A   752              ;       .include "ad6620.asm"
 A   753              ;       .include "cbrev.asm"
 A   754              
 A   755                      .end

No Assembly Errors, No Assembly Warnings
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   19

LABEL                                VALUE       DEFN    REF

.TMS320C540                         000000          0 
.TMS320C541                         000000          0 
.TMS320C541A                        000000          0 
.TMS320C542                         000001          0 
.TMS320C543                         000000          0 
.TMS320C544                         000000          0 
.TMS320C545                         000000          0 
.TMS320C545LP                       000000          0 
.TMS320C546                         000000          0 
.TMS320C546LP                       000000          0 
.TMS320C548                         000000          0 
.TMS320C549                         000000          0 
ARCR                                   REF             A  11 
BMAR                                   REF             A  11 
CBER1                                  REF             A  12 
CBER2                                  REF             A  12 
CBSR1                                  REF             A  12 
CBSR2                                  REF             A  12 
CR                                  00000d      B 130 
CRLF                                000d0a      B 132 
DBMR                                   REF             A  11 
ESC                                 00001b      B 133 
INDX                                   REF             A  11 
LF                                  00000a      B 131 
PREG                                   REF             A  11 
RXDSP_START                         00044f'     A  70  A  13 
TREG1                                  REF             A  11 
TREG2                                  REF             A  12 
TempLmem                            000140-     A  67 
ZERO                                   REF             A  11 
__TI_ASSEMBLER_VERSION__            3d10d0          0 
__far_mode                          000000          0 
__lflags                            000000          0 
__no_fret                           000000          0 
__stores_bug                        000000          0 
_serial_cook                           REF             A  15  A 450 
abu_buff_hloc                       000a0c-     A  56 
abu_buff_loc                        000800-     A  55  A  56  A 141  A 146  A 341 
abu_buff_sz                         000418      A  49  A  55  A  56  A 143  A 147 
                                                       A 348  A 366  A 395  A 448 
abu_fill_start                      000534'     A 375  A 376 
abu_first_half                      00052a'     A 358  A 359 
abu_haltx_wait                      000594'     A 500  A 501 
abu_restart_skip                    0005a3'     A 520  A 498  A 521 
acq_seq_in                          000002      B 161 
acq_seq_len                         007fff      B 143 
acq_seq_out                         000080      B 156  A 662 
acq_seq_rdy                         000004      B 151  A 643  A 662 
acq_test3                           000008      B 152  A 349 
acq_test4                           000010      B 153  A 535 
acq_test5                           000020      B 154  A 335 
acq_test6                           000040      B 155 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   20

LABEL                                VALUE       DEFN    REF

ago_main                            00044f'     A  71  A  20 
amr                                 000007      B 116 
appcode                             00045c'     A  91 
band_width                          000443'     A  31  A 718 
boot_delay_loop                     0004b6'     A 189  A 177 
bridge_count                        000060      A  59  A 250  A 409  A 414  A 444 
                                                       A 524 
bridge_data                         000512'     A 332  A  19  A 333  A 528 
bridge_size                         000063      A  62  A 329  A 413  A 523 
bspc_Free                           008000      B 204  A 138  A 198  A 509 
bspc_RSRfull                        002000      B 202 
bspc_Rrdy                           000400      B 199 
bspc_Soft                           004000      B 203 
bspc_XSRfull                        001000      B 201 
bspc_Xrdy                           000800      B 200 
bspc_dlb                            000002      B 190 
bspc_fo                             000004      B 191 
bspc_fsm                            000008      B 192  A 138  A 198  A 509 
bspc_in0                            000100      B 197 
bspc_in1                            000200      B 198 
bspc_mcm                            000010      B 193 
bspc_nRrst                          000080      B 196 
bspc_nXrst                          000040      B 195  A 198  A 509 
bspc_txm                            000020      B 194 
bspce_bre                           002000      B 217 
bspce_bxe                           000400      B 214  A 140  A 504 
bspce_clkp                          000040      B 210 
bspce_fe                            000080      B 211  A 140  A 504 
bspce_fig                           000100      B 212 
bspce_fsp                           000020      B 209 
bspce_haltr                         008000      B 219 
bspce_haltx                         001000      B 216  A 140  A 398  A 497  A 537 
bspce_pcm                           000200      B 213 
bspce_rh                            004000      B 218 
bspce_save                          000062      A  61  A 171  A 343  A 492 
bspce_xh                            000800      B 215  A 171  A 343 
buff_clear_loop                        REF             A  19 
buff_init_loop                      0004a2'     A 152  A 148  A 151 
buff_skip                           000526'     A 352  A 346 
cfreq_table                         000447'     A  37  A  43  A 607 
cfreq_table_end                     00044f'     A  42  A  43 
cfreq_table_sz                      000008      A  43  A 156  A 598 
cfreq_tp                            000068      A  65  A 156  A 595  A 598  A 602 
                                                       A 608 
cfreq_walk                          0005c5'     A 593  A 219 
clk_rx_out                          002000      B  56 
code_version                        00043d'     A  28  A 699 
data_acq_start                      0004d1'     A 248  A 238 
data_addr                           002000-     A  53  A 287  A 408 
data_discard                        000200      A  47  A 268 
data_minor_sz                       000001      A  48 
data_n                              000200      A  46  A 288  A 329 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   21

LABEL                                VALUE       DEFN    REF

dbg_transfer_skip                      REF             A 438 
defst0                              001800      B  14 
defst1                              002900      B  21 
dinner_is_ready                     000541'     A 391  A 392 
disc_0                              000001      B 160 
discard_fifo_empty                  0004ec'     A 280  A 277 
dr0                                 000000      B 109 
dr1                                 000001      B 110 
dr2                                 000002      B 111 
dr3                                 000003      B 112 
dr4                                 000004      B 113 
find_me                             00043a'     A  26 
fsync_sz                            000004      A  50  A 395 
head_ramp                              REF             A 151 
header_skip                         00054b'     A 404  A 399 
hwrite                              0005fc'     A 681  A 401  A 682 
int_0                               000001      B  95 
int_1                               000002      B  96 
int_2                               000004      B  97 
int_3                               000100      B 103  A 571 
int_br                              000010      B  99 
int_bx                              000020      B 100  A 139  A 485  A 490 
int_nmi                             0005ba'     A 555  A  20 
int_t                               000008      B  98 
int_tr                              000040      B 101 
int_tx                              000080      B 102 
inth_3                              0005bf'     A 569 
iq_len                              00003f      B 142 
lar                                 000006      B 115 
lsb_sel                             000002      B 150  A 126  A 322  A 335  A 349 
                                                       A 458  A 517  A 535  A 643 
                                                       A 662 
major_count                         000064      A  63  A 167  A 387  A 530  A 532 
                                                       A 722 
major_loop                          0004be'     A 206  A 151  A 207  A 543 
minor_count                         000061      A  60  A 251  A 385  A 455 
nco_freq                            000066      A  64  A 613  A 617  A 703 
nload                               000020      B  88 
npmst                               0000a3      B   4  A  78  A 558 
nprd                                00095f      B  89 
ntddr                               000000      B  86 
ntss                                000010      B  85  A 108 
nwait                               00063f      B  90 
par_tm_en                           000001      B 149 
post_sleep                          000587'     A 478  A 477 
pre_disc                            0004de'     A 265  A 264 
pre_read                            0004f4'     A 289  A 264 
pre_sleep                           000583'     A 470  A 469  A 486 
prom                                008000      B  35 
rawdata_loop                        00056c'     A 439  A 416  A 438 
rd_disc                             008000      B  59  A 272  A 293 
rd_out2                             006000      B  58 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   22

LABEL                                VALUE       DEFN    REF

rd_rsv                              00e000      B  62 
rd_rx                               004000      B  57 
rd_rx_out                           000000      B  55  A 278  A 300 
read_fifo_empty                     000500'     A 303  A 298 
read_init                           000478'     A 111  A 109 
ready_loop                          0005ec'     A 649  A 654  A 657 
rs_fifo                             00c000      B  61 
rs_rx_fifo                          00a000      B  60  A 122  A 224 
rsp_clear                              REF             A  16  A 114  A 462 
rsp_freq                               REF             A  16  A 624 
rsp_init                               REF             A  16  A 113 
rsp_mstart                             REF             A  16  A 115  A 236 
rsp_reset                              REF             A  16  A 112  A 120  A 319 
rsp_sstart                             REF             A  16  A 242 
rsv                                 000005      B 114 
rx_discard_loop                     0004e1'     A 270  A 282 
rx_efo                              000040      B 166  A 275  A 296 
rx_ffo                              000020      B 165 
rx_hfo                              000080      B 167 
rx_read_loop                        0004f5'     A 291  A 305 
scratch                             000060      B  36  A  59  A  60  A  61  A  62 
                                                       A  63  A  64  A  65 
seq_len                             00ffff      B 144 
slave_startup                       0004cf'     A 240  A 229 
stack                               00013f      B  37 
stackres                            000100-     A  54  A  77 
static_header                       000642'     A 745  A 687  A 750 
static_header_end                   00064b'     A 748  A 750 
static_header_len                   000008      A 750  A 688 
station_code                        000441'     A  29  A 695 
swwsr_ds0                           000006      B  73 
swwsr_ds1                           000009      B  74 
swwsr_is                            00000c      B  75  A 258  A 260  A 313 
swwsr_ps0                           000000      B  71 
swwsr_ps1                           000003      B  72 
sync_units                          0005e6'     A 638  A 195  A 222  A 506 
test_28                             000002      B 126 
tlm_efo                             000008      B 163 
tlm_ffo                             000004      B 162 
tlm_hfo                             000010      B 164 
transfer                               REF             A  18 
transfer_table_sz                      REF             A  18 
trm_28                              000001      B 125 
tspc_Free                           008000      B 186  A 134 
tspc_RSRfull                        002000      B 184 
tspc_Rrdy                           000400      B 181 
tspc_Soft                           004000      B 185 
tspc_XSRfull                        001000      B 183 
tspc_Xrdy                           000800      B 182 
tspc_dlb                            000002      B 172 
tspc_fo                             000004      B 173 
tspc_fsm                            000008      B 174  A 134 
TMS320C54x Assembler PC v4.2.0 Tue Jul 17 18:27:34 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
sond_v1.0.abs                                                        PAGE   23

LABEL                                VALUE       DEFN    REF

tspc_in0                            000100      B 179  A 653 
tspc_in1                            000200      B 180  A 656 
tspc_mcm                            000010      B 175 
tspc_nRrst                          000080      B 178 
tspc_nXrst                          000040      B 177 
tspc_tdm                            000001      B 171 
tspc_txm                            000020      B 176 
unit_designation                    00043c'     A  27  A 228  A 384  A 691 
wr_disc                             008000      B  48  A  95  A 127  A 323  A 336 
                                                       A 350  A 459  A 518  A 536 
                                                       A 644  A 663 
wr_dog                              00a000      B  49  A  96  A 466 
wr_out                              00c000      B  50 
wr_out0                             002000      B  44 
wr_out1                             004000      B  45 
wr_rd_fifo                          006000      B  47 
wr_rs_rx                            000000      B  43  A  94 
wr_rsv                              00e000      B  51 
wr_rx                               004000      B  46 
