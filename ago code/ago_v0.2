TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE    1

      73 001436                 .text
      74                        .copy       "ago_v0.2.asm"
 A     1              ;*****************************************************************************
 A     2              ;
 A     3              ; Dartmouth College AGO Rx-DSP Program
 A     4              ;
 A     5              ; Written by: Micah P. Dombrowski and Nathan B. Utterback
 A     6              ;     w/ code segments from TI DSP Library
 A     7              ;
 A     8              ;*****************************************************************************
 A     9              
 A    10                      .mmregs
 A    11                      .global ZERO, BMAR, PREG, DBMR, INDX, ARCR, TREG1
 A    12                      .global TREG2, CBSR1, CBER1, CBSR2, CBER2
 A    13                      .global RXDSP_START
 A    14              ;       .ref    _RxDSP_Monitor
 A    15                      .ref    _cbrev32, _cfft32_512, _log_10, _hann_window, _sqmag, _serial_cook
 A    16                      .ref    _log_prescale, _sqmag_prescale, _descale
 A    17                      .ref    rsp_clear, rsp_reset, rsp_init, rsp_mstart, rsp_sstart
 A    18              ;       .ref    ad6620_soft_reset, ad6620_filter, ad6620_master_run, rsp_setup
 A    19                      .ref    transfer, transfer_table_sz
 A    20                      .global bridge_data, buff_clear_loop
 A    21                      .def    ago_main, int_nmi
 A    22                      
 A    23                      .include "rx-dsp.h"
 A    24              ;       .include "int_table.h"
 A    25 001436               .text
 A    26              
 A    27              ; Output constants
 A    28              
 A    29              ;output_scale_factor            .set    128             ; 0 to 32767
 A    30        0008  output_shift_n                  .set    8       ; left shift before 8-bit mask
 A    31              
 A    32              ; Run constants 
 A    33        0000  fft_scaling             .set    0               ; 
 A    34              ;data_addr              .set    0x2000  ; Where to store data for FFTing
 A    35        0200  data_n          .set    512     ; Size of each FFT (# of IQ pairs)
 A    36        0200  data_discard    .set    512             ; number of words to discard from Rx FIFO before taking data
 A    37        0001  data_minor_sz   .set    1               ; number of acquisitions per half-buffer interrupt
 A    38              ;abu_buff_loc   .set    0x0800  ; serial buffer start location
 A    39        00C8  abu_buff_sz             .set    200             ; size of serial buffer (2x major frame size IN BYTES)
 A    40        0004  fsync_sz                .set    4               ; # of serial frame sync bytes (should be multiple of 4)
 A    41              
 A    42              ; Memory allocations
 A    43 002000       data_addr       .usect  ".data_v", 0x800, 1, 1
 A    44 001e00       scale_addr      .usect  ".scale_v", 0x200, 1, 1
 A    45 000100       stackres        .usect  ".stack_v", 0x40, 1, 1
 A    46 000800       abu_buff_loc    .usect  ".sbuff_v", abu_buff_sz, 1, 1
 A    47        0864- abu_buff_hloc   .set    abu_buff_loc+abu_buff_sz/2      ; half-way
 A    48              
 A    49              ; Memory pointers
 A    50        2000- iq_data         .set    data_addr       ; 512 * 2 words * I/Q
 A    51        2000- fft_data        .set    data_addr       ; 512 * 2 words * Re/Im
 A    52        1E00- scale_data      .set    scale_addr      ; 512 words
 A    53        2000- sqmag_data      .set    data_addr       ; 512 * 2 words
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE    2

 A    54        2400- sqsc_data       .set    data_addr+2*data_n      ; 512 words
 A    55        2000- log_data        .set    data_addr       ; 512 * 2 words
 A    56        2000- power_data      .set    data_addr       ; 512 words 
 A    57        2200- ebs_data        .set    data_addr+data_n        ; 512 words
 A    58              
 A    59              ; mode flags
 A    60        0001  mode_std_bit    .set    0001b   ; standard operations
 A    61        0002  mode_dbg_bit    .set    0010b   ; debug
 A    62              
 A    63        0000! mode_std_n              .set    transfer_table_sz
 A    64        0200  mode_dbg_n              .set    512
 A    65              
 A    66              ; Scratchpad RAM usage
 A    67        0060  bridge_count    .set    scratch
 A    68        0061  minor_count     .set    scratch+1
 A    69        0062  bspce_save      .set    scratch+2
 A    70        0063  bridge_size     .set    scratch+3
 A    71        0064  mode_flag       .set    scratch+4
 A    72              ;ebs_max                .set    scratch+5
 A    73              ;ebs_min                .set    scratch+6
 A    74        0065  major_count     .set    scratch+5
 A    75              
 A    76 000144               .bss TempLmem,1*2,0,0  ;temporary dword
 A    77              
 A    78              
 A    79 001436       RXDSP_START
 A    80 001436       ago_main:
 A    81              
 A    82 001436 F6BD          rsbx    XF
 A    83              
 A    84              ; Processor setup
 A    85 001437 F7BB          ssbx    INTM            ; Disable interrupts 
 A    86 001438 7718          stm     #(stackres+0x40), SP    ; set Stack Pointer
         001439 0140-
 A    87 00143a 771D          stm     #npmst,PMST     ; Set processor mode/status
         00143b 00A3 
 A    88              ;       stm #defst0, ST0
 A    89              ;       stm     #defst1, ST1
 A    90 00143c F6B8          rsbx    SXM             ; Suppress sign extension 
 A    91              ;       rsbx    XF
 A    92 00143d F495          nop                     ; Space for branch to app
 A    93 00143e F495          nop
 A    94               
 A    95 00143f       appcode:
 A    96              ;       stm     #0,state        ; Clear interrupt routine state
 A    97 00143f 7710          stm     #0,AR0          ; Clear auxilliary register 0
         001440 0000 
 A    98                      
 A    99 001441 7510          portw   AR0,wr_disc     ; Enable parallel TLM drivers, I_Q out
         001442 8000 
 A   100 001443 7510          portw   AR0,wr_dog      ; Strobe watchdog timer
         001444 A000 
 A   101                      
 A   102 001445 7710          stm     #0,AR0  ; Clear all auxiliary registers
         001446 0000 
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE    3

 A   103 001447 7711          stm     #0,AR1
         001448 0000 
 A   104 001449 7712          stm     #0,AR2
         00144a 0000 
 A   105 00144b 7713          stm     #0,AR3
         00144c 0000 
 A   106 00144d 7714          stm     #0,AR4
         00144e 0000 
 A   107 00144f 7715          stm     #0,AR5
         001450 0000 
 A   108 001451 7716          stm     #0,AR6
         001452 0000 
 A   109 001453 7717          stm     #0,AR7
         001454 0000 
 A   110              
 A   111 001455 7701          stm     #0FFh,IFR       ; Clear any pending interrupts
         001456 00FF 
 A   112 001457 7726          stm     #ntss,TCR       ; Stop timer, if running
         001458 0010 
 A   113                              
 A   114              ; Main data code start
 A   115 001459       read_init:
 A   116 001459 F074          call    rsp_reset
         00145a 0C00!
 A   117 00145b F495          nop
 A   118 00145c F495          nop             
 A   119 00145d 7510          portw   AR0,wr_rs_rx    ; Hardware reset of AD6620 RSP
         00145e 0000 
 A   120 00145f 7510          portw   AR0,wr_rs_rx    ; Hardware reset of AD6620 RSP
         001460 0000 
 A   121 001461 7510          portw   AR0,wr_rs_rx    ; Hardware reset of AD6620 RSP
         001462 0000 
 A   122 001463 7510          portw   AR0,wr_rs_rx    ; Hardware reset of AD6620 RSP
         001464 0000 
 A   123 001465 7510          portw   AR0,wr_rs_rx    ; Hardware reset of AD6620 RSP
         001466 0000 
 A   124 001467 7510          portw   AR0,wr_rs_rx    ; Hardware reset of AD6620 RSP
         001468 0000 
 A   125 001469 F495          nop
 A   126 00146a F495          nop
 A   127 00146b F074          call    rsp_reset
         00146c 0C00!
 A   128 00146d F074          call    rsp_init
         00146e 0C07!
 A   129 00146f F074          call    rsp_clear
         001470 0C1C!
 A   130 001471 F074          call    rsp_mstart
         001472 0C0E!
 A   131                      
 A   132 001473 F070          rpt             #4444   ; Let the AD6620 do its first initialization in peace
         001474 115C 
 A   133 001475 F495          nop
 A   134                      
 A   135 001476 F074          call    rsp_reset
         001477 0C00!
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE    4

 A   136                      
 A   137 001478 7410          portr   rs_rx_fifo, AR0    ; Reset Rx FIFO - also sent by wire to Slave
         001479 A000 
 A   138 00147a F495          nop
 A   139 00147b F495          nop     
 A   140              
 A   141 00147c 7710          stm     #lsb_sel, AR0   ; Reset acq_seq
         00147d 0002 
 A   142 00147e 7510          portw   AR0, wr_disc
         00147f 8000 
 A   143 001480 F495          nop
 A   144                      
 A   145                      ; BSP prep
 A   146              
 A   147 001481 7722          stm             #(bspc_Free+bspc_fsm), BSPC0            ; reset BSP
         001482 8008 
 A   148 001483 7700          stm             #(int_bx), IMR                  ; unmask serial transmit interrupt
         001484 0020 
 A   149 001485 7723          stm             #(bspce_fe+bspce_bxe), BSPCE0   ; 10-bit words, enable tx autobuffer
         001486 0480 
 A   150 001487 7738          stm             #(abu_buff_loc-0x800), AXR      ; where in the 2048 words of buffer RAM 
         001488 0000-
 A   151                                                                      ; does the transmit buffer start?
 A   152 001489 7739          stm             #(abu_buff_sz), BKX             ; buffer size
         00148a 00C8 
 A   153                      
 A   154              ; Clear entire serial buffer
 A   155 00148b 771A          stm             #abu_buff_sz-1, BRC
         00148c 00C7 
 A   156 00148d 7714          stm             #abu_buff_loc, AR4
         00148e 0800-
 A   157 00148f F072          rptb    buff_init_loop - 1
         001490 1492'
 A   158                      
 A   159 001491 7694          st              #0h, *AR4+
         001492 0000 
 A   160                      
 A   161 001493       buff_init_loop:
 A   162                      .global buff_init_loop, head_ramp, major_loop
 A   163              
 A   164              ; Write out header to first buffer half
 A   165              
 A   166 001493 7714          stm             #abu_buff_loc, AR4
         001494 0800-
 A   167                      ; two-byte frame sync 0xEB90
 A   168              ;       stm             #(abu_buff_loc+abu_buff_sz/2-2), AR4
 A   169 001495 7694          st              #0xEB, *AR4+
         001496 00EB 
 A   170 001497 7694          st              #0x90, *AR4+
         001498 0090 
 A   171                      
 A   172 001499 7694          st              #0xFE, *AR4+    ; 4-byte initialization sync
         00149a 00FE 
 A   173 00149b 7694          st              #0x6B, *AR4+
         00149c 006B 
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE    5

 A   174 00149d 7694          st              #0x28, *AR4+
         00149e 0028 
 A   175 00149f 7694          st              #0x40, *AR4+
         0014a0 0040 
 A   176                      
 A   177 0014a1 7710          stm             #static_header, AR0     ; Point to static header words
         0014a2 164B'
 A   178 0014a3       header_loop:
 A   179 0014a3 1090          ld              *AR0+, A                ; Get a word, point to next
 A   180 0014a4 F845          bc              header_loop_x, AEQ              ; If terminator, end static header
         0014a5 14A9'
 A   181 0014a6 8094          stl             A, *AR4+                ; Write to serial buffer
 A   182 0014a7 F073          b               header_loop
         0014a8 14A3'
 A   183 0014a9       header_loop_x:
 A   184              
 A   185              
 A   186              
 A   187 0014a9 F020          ld              #abu_buff_loc, A
         0014aa 0800-
 A   188 0014ab E964          ld              #(abu_buff_sz/2), B
 A   189                      
 A   190 0014ac F074          call    _serial_cook
         0014ad 1A0B!
 A   191              
 A   192              ; Set initial bspce_save such that the first acquisition will
 A   193              ; write to the second half of the serial buffer
 A   194 0014ae 7662          st              #bspce_xh, @bspce_save
         0014af 0800 
 A   195                              
 A   196              ; Start BSP transmits
 A   197 0014b0 7722          stm             #(bspc_Free + bspc_fsm + bspc_nXrst), BSPC0     ; have to hold fsm bit
         0014b1 8048 
 A   198              
 A   199              ;       rsbx    INTM ; global interrupt enable
 A   200              
 A   201              ; All Aux Registers are fungible in the main loop: values which must be preserved
 A   202              ; over time are stored in the scratchpad RAM as defined above.  Note that only AR6
 A   203              ; and AR7 are required to be preserved by the DSP Library functions (and most others),
 A   204              ; all other ARx may be modified within function calls.
 A   205              
 A   206 0014b2 7665          st              #0, @major_count
         0014b3 0000 
 A   207              
 A   208 0014b4       major_loop:
 A   209                      
 A   210 0014b4 7410          portr   rs_rx_fifo, AR0    ; Reset Rx FIFO - also sent by wire to Slave
         0014b5 A000 
 A   211 0014b6 F495          nop
 A   212 0014b7 F495          nop
 A   213                              
 A   214 0014b8 7710          stm     #(acq_seq_out+lsb_sel), AR0 ; send acq_seq, set lsb_sel
         0014b9 0082 
 A   215 0014ba 7510          portw   AR0, wr_disc
         0014bb 8000 
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE    6

 A   216                      
 A   217 0014bc F074          call    rsp_clear       ; clear NCO RAM
         0014bd 0C1C!
 A   218 0014be F074          call    rsp_mstart      ; and start digitizing  
         0014bf 0C0E!
 A   219                      
 A   220              ;
 A   221              ; Reads
 A   222              ;
 A   223 0014c0       data_acq_start:
 A   224              
 A   225 0014c0 7660          st      #0, @bridge_count               ; reset bridged data counter
         0014c1 0000 
 A   226 0014c2 7661          st      #0, @minor_count        ; set minor frame counter
         0014c3 0000 
 A   227              
 A   228                      
 A   229              ;
 A   230              ; Set wait states for Rx FIFO
 A   231              ;
 A   232 0014c4 4828          ldm     SWWSR, A
 A   233 0014c5 F120          ld      #65535, B
         0014c6 FFFF 
 A   234 0014c7 F35C          xor     #7, #swwsr_is, B ; (0b111<<Nset XOR 0d65535) creates bitmask
         0014c8 0007 
 A   235 0014c9 F280          and     B, A                     ; mask out bits of interest
 A   236 0014ca F04C          or      #0, #swwsr_is, A ; (A or Nwait<<Nset) to set Nwait to Nset
         0014cb 0000 
 A   237                      ; Nwait = 0 means no additional waits
 A   238 0014cc 8828          stlm    A, SWWSR
 A   239              
 A   240 0014cd F7BD          ssbx    XF
 A   241 0014ce EC64          rpt #100
 A   242 0014cf F495          nop
 A   243 0014d0 F6BD          rsbx    XF
 A   244                      
 A   245                      
 A   246                      .global pre_disc, pre_read
 A   247 0014d1       pre_disc:
 A   248              
 A   249              ; loop to read and discard first data out of AD6620
 A   250 0014d1 7712          stm             #(data_discard), AR2
         0014d2 0200 
 A   251 0014d3 F495          nop
 A   252 0014d4       rx_discard_loop:
 A   253                      ; read only if rx fifo is nonempty
 A   254 0014d4 7410          portr   rd_disc, AR0
         0014d5 8000 
 A   255 0014d6 F495          nop
 A   256 0014d7 F495          nop
 A   257 0014d8 6110          bitf    AR0, #rx_efo
         0014d9 0040 
 A   258                      
 A   259 0014da F820          bc      discard_fifo_empty, NTC
         0014db 14DF'
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE    7

 A   260 0014dc 7411          portr   rd_rx_out, AR1          ; read data into AR1
         0014dd 0000 
 A   261 0014de 6D8A          mar     *AR2-                           ; decrement word counter                
 A   262 0014df       discard_fifo_empty:
 A   263              
 A   264 0014df 6C82          banz    rx_discard_loop, *AR2
         0014e0 14D4'
 A   265                      
 A   266                      
 A   267              ; loop to read data from Rx FIFO into RAM
 A   268 0014e1 7710          stm     #2, AR0
         0014e2 0002 
 A   269 0014e3 7711          stm     #iq_data, AR1   ; set address for first data word
         0014e4 2000-
 A   270 0014e5 7712          stm     #(data_n*2-1), AR2
         0014e6 03FF 
 A   271 0014e7       pre_read:
 A   272 0014e7 F495          nop
 A   273 0014e8       rx_read_loop:
 A   274                      ; read only if rx fifo is nonempty
 A   275 0014e8 7413          portr   rd_disc, AR3
         0014e9 8000 
 A   276 0014ea F495          nop
 A   277 0014eb F495          nop
 A   278 0014ec 6113          bitf    AR3, #rx_efo
         0014ed 0040 
 A   279                      
 A   280 0014ee F820          bc      read_fifo_empty, NTC
         0014ef 14F5'
 A   281                      
 A   282 0014f0 7491          portr   rd_rx_out, *AR1+
         0014f1 0000 
 A   283 0014f2 7691          st      #0, *AR1+               ; zero out second word
         0014f3 0000 
 A   284 0014f4 6D8A          mar     *AR2-                   ; decrement word counter
 A   285                      
 A   286 0014f5       read_fifo_empty:
 A   287              
 A   288 0014f5 6E82          banzd   rx_read_loop, *AR2
         0014f6 14E8'
 A   289 0014f7 F495          nop
 A   290 0014f8 F495          nop
 A   291                      
 A   292              ;
 A   293              ; Set wait states for other stuff (full 7)
 A   294              ;
 A   295 0014f9 4828          ldm     SWWSR, A
 A   296 0014fa F04C          or      #7, #swwsr_is, A ; (A or Nwait<<Nset) to set Nwait to Nset
         0014fb 0007 
 A   297 0014fc 8828          stlm    A, SWWSR
 A   298 0014fd F495          nop
 A   299 0014fe F495          nop
 A   300                      
 A   301 0014ff F7BD          ssbx    XF
 A   302 001500 EC32          rpt #50
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE    8

 A   303 001501 F495          nop
 A   304 001502 F6BD          rsbx    XF
 A   305                      
 A   306              *
 A   307              * End data acquisition, begin data processing
 A   308              *
 A   309               
 A   310 001503       data_process:
 A   311              
 A   312              
 A   313                      .global pre_window
 A   314 001503       pre_window:
 A   315              
 A   316 001503 F020          ld      #iq_data, A
         001504 2000-
 A   317 001505 F120          ld      #data_n, B
         001506 0200 
 A   318                      
 A   319 001507 F074          call    _hann_window
         001508 1A30!
 A   320              
 A   321                      .global pre_bit_rev
 A   322 001509       pre_bit_rev:
 A   323                      
 A   324              ; Bit reversal
 A   325 001509 7710          stm             #data_n, AR0
         00150a 0200 
 A   326 00150b 4A10          pshm    AR0
 A   327 00150c 7710          stm             #iq_data, AR0
         00150d 2000-
 A   328 00150e 4A10          pshm    AR0
 A   329 00150f F020          ld              #iq_data, A
         001510 2000-
 A   330                      
 A   331 001511 F074          call _cbrev32
         001512 07B8!
 A   332                      
 A   333 001513 EE02          frame   2
 A   334              
 A   335              
 A   336                      .global pre_fft
 A   337 001514       pre_fft:
 A   338 001514 7710          stm             #fft_scaling, AR0
         001515 0000 
 A   339 001516 4A10          pshm    AR0
 A   340 001517 F020          ld              #fft_data, A
         001518 2000-
 A   341                      
 A   342 001519 F074          call    _cfft32_512
         00151a 17CA!
 A   343                      
 A   344 00151b EE01          frame   1
 A   345              
 A   346                      
 A   347                      .global pre_move
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE    9

 A   348 00151c       pre_move:
 A   349              ; flip things into proper power spectra order (swap halves)
 A   350              ; remove zeroes here, too
 A   351              
 A   352 00151c 771A          stm             #(data_n-1), BRC
         00151d 01FF 
 A   353 00151e 7712          stm             #fft_data, AR2
         00151f 2000-
 A   354 001520 7713          stm             #(fft_data + 2*data_n), AR3
         001521 2400-
 A   355                      
 A   356 001522 F072          rptb    move_loop - 1
         001523 152F'
 A   357              
 A   358 001524 5682          dld             *AR2, A
 A   359 001525 5783          dld             *AR3, B
 A   360                      
 A   361 001526 F495          nop
 A   362 001527 F495          nop
 A   363 001528 FF45          xc              2, AEQ
 A   364 001529 F000          add             #1, A
         00152a 0001 
 A   365 00152b FF4D          xc              2, BEQ
 A   366 00152c F300          add             #1, B
         00152d 0001 
 A   367                      
 A   368 00152e 4E93          dst             A, *AR3+
 A   369 00152f 4F92          dst             B, *AR2+        
 A   370                      
 A   371 001530       move_loop:
 A   372                      
 A   373              
 A   374                      .global pre_sqscale
 A   375 001530       pre_sqscale:
 A   376              
 A   377 001530 7710          stm             #scale_addr, AR0        ; scale saves
         001531 1E00-
 A   378 001532 4A10          pshm    AR0
 A   379 001533 7710          stm             #fft_data, AR0          ; output
         001534 2000-
 A   380 001535 4A10          pshm    AR0
 A   381 001536 7710          stm             #fft_data, AR0          ; input
         001537 2000-
 A   382 001538 4A10          pshm    AR0
 A   383 001539 F020          ld              #data_n, A      ; N
         00153a 0200 
 A   384              
 A   385 00153b F074          call    _sqmag_prescale
         00153c 1887!
 A   386                      
 A   387 00153d EE03          frame   3       ; free stack
 A   388              
 A   389              
 A   390                      .global pre_abs
 A   391 00153e       pre_abs:
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   10

 A   392 00153e F7B8          ssbx    SXM
 A   393 00153f F7B9          ssbx    OVM
 A   394 001540 F495          nop
 A   395 001541 F495          nop
 A   396              
 A   397 001542 771A          stm             #(2*data_n-1), BRC
         001543 03FF 
 A   398 001544 7710          stm             #fft_data, AR0
         001545 2000-
 A   399 001546 F072          rptb    abs_loop - 1
         001547 154A'
 A   400                      
 A   401 001548 5680          dld             *AR0, A
 A   402 001549 F485          abs             A
 A   403 00154a 4E90          dst             A, *AR0+
 A   404              
 A   405 00154b       abs_loop:
 A   406              
 A   407              
 A   408                      .global pre_sqmag, pre_log, pre_db
 A   409 00154b       pre_sqmag:
 A   410              ; |FFT|^2
 A   411 00154b F020          ld              #sqmag_data, A
         00154c 2000-
 A   412 00154d F120          ld              #data_n, B
         00154e 0200 
 A   413                      
 A   414 00154f F074          call    _sqmag
         001550 19DB!
 A   415              
 A   416              
 A   417              
 A   418              
 A   419                      .global pre_logps
 A   420 001551       pre_logps:
 A   421                      
 A   422 001551 7710          stm             #scale_data, AR0        ; scale saves
         001552 1E00-
 A   423 001553 4A10          pshm    AR0
 A   424 001554 7710          stm             #sqsc_data, AR0 ; output
         001555 2400-
 A   425 001556 4A10          pshm    AR0
 A   426 001557 7710          stm             #sqmag_data, AR0                                ; input
         001558 2000-
 A   427 001559 4A10          pshm    AR0
 A   428 00155a F020          ld              #data_n, A      ; N
         00155b 0200 
 A   429              
 A   430 00155c F074          call    _log_prescale
         00155d 18C0!
 A   431                      
 A   432 00155e EE03          frame   3
 A   433              
 A   434              
 A   435 00155f       pre_scale:
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   11

 A   436                      
 A   437              
 A   438 00155f       pre_log:
 A   439              ; log_10(|FFT|^2) (outputs 32-bit Q16.15)
 A   440              
 A   441 00155f 7710          stm             #data_n, AR0
         001560 0200 
 A   442 001561 4A10          pshm    AR0
 A   443 001562 7710          stm             #log_data, AR0                  ; write to beginning of data buffer
         001563 2000-
 A   444 001564 4A10          pshm    AR0
 A   445 001565 F020          ld              #sqsc_data, A   ; read from halfway point of data buffer
         001566 2400-
 A   446                      
 A   447 001567 F074          call _log_10
         001568 197D!
 A   448              
 A   449 001569 EE02          frame   2
 A   450              
 A   451              
 A   452                      .global pre_descale
 A   453 00156a       pre_descale:
 A   454              
 A   455 00156a 7710          stm             #scale_data, AR0        ; scale saves
         00156b 1E00-
 A   456 00156c 4A10          pshm    AR0
 A   457 00156d 7710          stm             #power_data, AR0                ; output
         00156e 2000-
 A   458 00156f 4A10          pshm    AR0
 A   459 001570 7710          stm             #log_data, AR0          ; input
         001571 2000-
 A   460 001572 4A10          pshm    AR0
 A   461 001573 F020          ld              #data_n, A      ; N
         001574 0200 
 A   462              
 A   463 001575 F074          call    _descale
         001576 18E8!
 A   464                      
 A   465 001577 EE03          frame   3       ; free stack
 A   466              
 A   467              
 A   468                      .global post_descale
 A   469 001578       post_descale:
 A   470              ; multiply by output_scale_factor, shift right by output_shift_n, re-store
 A   471              
 A   472 001578 4A06          pshm    ST0
 A   473 001579 4A07          pshm    ST1
 A   474 00157a F7B6          ssbx    FRCT
 A   475 00157b F7B8          ssbx    SXM
 A   476 00157c F7B9          ssbx    OVM
 A   477 00157d F6B7          rsbx    C16
 A   478              
 A   479              ; Scale and shift, save 8-bit data
 A   480              
 A   481 00157e 771A          stm             #data_n-1, BRC
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   12

         00157f 01FF 
 A   482 001580 7710          stm             #power_data, AR0
         001581 2000-
 A   483 001582 7711          stm             #(data_addr + 2*data_n), AR1
         001583 2400-
 A   484 001584 7712          stm             #ebs_data, AR2
         001585 2200-
 A   485              ;       stm             #output_scale_factor, T
 A   486 001586 F072          rptb    ebs_loop - 1
         001587 158E'
 A   487                      
 A   488              ;       mpy             *AR0+, A        ; multiply by scale factor in T
 A   489              ;       sfta    A, #0-output_shift_n
 A   490              ;       and             #0xFF0000, A
 A   491              ;       dst             A, *AR1+
 A   492                      
 A   493              ;       mpy             *AR0+, A        ; multiply by scale factor in T
 A   494 001588 1090          ld              *AR0+, A
 A   495 001589 F478          sfta    A, #0-output_shift_n
 A   496 00158a F000          add             #128, A
         00158b 0080 
 A   497 00158c F030          and             #0xFF, A
         00158d 00FF 
 A   498 00158e 8092          stl             A, *AR2+
 A   499              ;       dadd    output_shift_n, A       ; shift
 A   500              ;       sat             A
 A   501              ;       and             #0xFF, #16, A                   ; mask to A(23-16)
 A   502              ;       sth             A, *AR2+                                ; store A(23-16)
 A   503                      
 A   504 00158f       ebs_loop:
 A   505              
 A   506 00158f F495          nop
 A   507              
 A   508                      .global dp_end
 A   509 001590       dp_end:
 A   510              
 A   511 001590 8A07          popm    ST1
 A   512 001591 8A06          popm    ST0
 A   513              
 A   514 001592 F495          nop
 A   515              
 A   516              *
 A   517              * End data processing, begin serial data handling
 A   518              *
 A   519              
 A   520              ; Standard mode (#buff_size bytes) or debug mode (#debug_size) depending on trm_28 state.
 A   521 001593 7410          portr   rd_disc, AR0    ; Get discrete bits
         001594 8000 
 A   522 001595 6110          bitf    AR0, #trm_28    ; Test for high terminal input  
         001596 0001 
 A   523 001597 F820          bc              standard_mode, NTC      ; If trm_28 is low (NTC), standard data settings
         001598 159F'
 A   524                                              ; to #debug_size
 A   525              
 A   526 001599 7663          st      #mode_dbg_n, @bridge_size
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   13

         00159a 0200 
 A   527 00159b 7664          st      #mode_dbg_bit, @mode_flag
         00159c 0002 
 A   528                      
 A   529 00159d F073          b       debug_mode_skip
         00159e 15A3'
 A   530              
 A   531 00159f       standard_mode:
 A   532              
 A   533 00159f 7663          st      #mode_std_n, @bridge_size
         0015a0 0000!
 A   534 0015a1 7664          st      #mode_std_bit, @mode_flag
         0015a2 0001 
 A   535              
 A   536 0015a3       debug_mode_skip:
 A   537                      
 A   538              
 A   539                      
 A   540              ; entry point for bridging data transfers over multiple serial half-buffers
 A   541 0015a3       bridge_data:
 A   542 0015a3 7710          stm             #(acq_seq_out+lsb_sel), AR0 ; send acq_seq, set lsb_sel
         0015a4 0082 
 A   543 0015a5 7510          portw   AR0, wr_disc
         0015a6 8000 
 A   544              
 A   545 0015a7 F495          nop
 A   546 0015a8 F495          nop
 A   547                      ; Determine serial buffer position
 A   548 0015a9 7713          stm             #abu_buff_loc, AR3      ; load buffer base
         0015aa 0800-
 A   549                      
 A   550 0015ab 6162          bitf    @bspce_save, #bspce_xh          ; read XH out of stored BSPCE register
         0015ac 0800 
 A   551 0015ad F495          nop
 A   552 0015ae F495          nop
 A   553 0015af F820          bc              buff_skip, NTC ; if first half _finished_ (XH=0, NTC), do nothing
         0015b0 15B7'
 A   554                      
 A   555 0015b1 6B13          addm    #(abu_buff_sz/2), @AR3
         0015b2 0064 
 A   556 0015b3 7710          stm             #(acq_seq_out+acq_test3+lsb_sel), AR0
         0015b4 008A 
 A   557 0015b5 7510          portw   AR0, wr_disc
         0015b6 8000 
 A   558                      
 A   559 0015b7       buff_skip:
 A   560 0015b7 F495          nop
 A   561 0015b8 F495          nop
 A   562 0015b9 F495          nop
 A   563 0015ba F495          nop
 A   564              
 A   565 0015bb       abu_first_half:
 A   566                      .global abu_first_half
 A   567              
 A   568 0015bb F7BB          ssbx    INTM
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   14

 A   569                      
 A   570              ; Clear serial buffer half
 A   571 0015bc E734          mvmm    AR3, AR4
 A   572 0015bd F495          nop
 A   573 0015be EC63          rpt             #(abu_buff_sz/2-1)
 A   574 0015bf 7694          st              #0xFF, *AR4+
         0015c0 00FF 
 A   575                      
 A   576                      ; reset AR4 for data copy
 A   577 0015c1 E734          mvmm    AR3, AR4
 A   578 0015c2 F495          nop
 A   579 0015c3 F495          nop
 A   580                      
 A   581 0015c4       abu_fill_start:
 A   582                      .global abu_fill_start
 A   583                              
 A   584                      ; two-byte frame sync 0xEB90
 A   585 0015c4 7694          st              #0xEB, *AR4+
         0015c5 00EB 
 A   586 0015c6 7694          st              #0x90, *AR4+
         0015c7 0090 
 A   587              
 A   588                      ; two-byte infofoop
 A   589 0015c8 1061          ld              @minor_count, A                         ; byte 1, minor frame number
 A   590 0015c9 8094          stl             A, *AR4+
 A   591 0015ca 1065          ld              @major_count, A                         ; byte 2, major frame number
 A   592 0015cb 8094          stl             A, *AR4+
 A   593              
 A   594 0015cc       post_sync_write:
 A   595                      .global post_sync_write
 A   596              
 A   597              ; Transfer in selected data mode
 A   598              
 A   599 0015cc 6164          bitf    @mode_flag, #mode_dbg_bit
         0015cd 0002 
 A   600 0015ce F830          bc              dbg_transfer, TC
         0015cf 15E4'
 A   601                      
 A   602                      ; in standard mode, transfer selected data to serial buffer
 A   603 0015d0 F020          ld              #ebs_data, A
         0015d1 2200-
 A   604 0015d2 4914          ldm             AR4, B
 A   605                      
 A   606 0015d3 F074          call    transfer
         0015d4 190E!
 A   607                      
 A   608 0015d5 8914          stlm    B, AR4
 A   609 0015d6 7660          st              #mode_std_n, @bridge_count      ; fake it out
         0015d7 0000!
 A   610                      
 A   611 0015d8 F495          nop
 A   612 0015d9 F495          nop
 A   613 0015da F495          nop
 A   614 0015db F495          nop
 A   615 0015dc F495          nop
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   15

 A   616 0015dd F495          nop
 A   617 0015de F495          nop
 A   618 0015df F495          nop
 A   619 0015e0 F495          nop
 A   620 0015e1 F495          nop
 A   621 0015e2 F073          b               end_transfer
         0015e3 1600'
 A   622              
 A   623 0015e4       dbg_transfer:
 A   624              
 A   625                      ; copy raw data (words) into serial buffer (bytes)
 A   626 0015e4 F020          ld              #ebs_data, A
         0015e5 2200-
 A   627 0015e6 0060          add             @bridge_count, A
 A   628 0015e7 8812          stlm    A, AR2
 A   629                      
 A   630 0015e8 7210          mvdm    @bridge_size, AR0       ; goal bridge size
         0015e9 0063 
 A   631 0015ea 7211          mvdm    @bridge_count, AR1      ; current count
         0015eb 0060 
 A   632              
 A   633 0015ec 771A          stm             #((abu_buff_sz/2-fsync_sz)-1), BRC
         0015ed 005F 
 A   634 0015ee F072          rptb    rawdata_loop - 1
         0015ef 15FC'
 A   635                      
 A   636              ;       ld              *AR2+, A                ; load (data word) to Acc
 A   637              ;       and             #0xFF, A        ; mask to low-byte
 A   638              ;       stl             A, *AR4+        ; save to serial buffer
 A   639              
 A   640 0015f0 E58A          mvdd    *AR2+, *AR4+
 A   641                      
 A   642 0015f1 6D91          mar             *AR1+
 A   643 0015f2 F5A9          cmpr    LT, AR1                         ; If we're not done with a bridged data sequence, 
 A   644 0015f3 F495          nop
 A   645 0015f4 F495          nop
 A   646 0015f5 FF20          xc              2, NTC
 A   647 0015f6 F6BF          rsbx    BRAF
 A   648 0015f7 F495          nop
 A   649 0015f8 F495          nop
 A   650 0015f9 F495          nop
 A   651 0015fa F495          nop
 A   652 0015fb F495          nop
 A   653 0015fc F495          nop
 A   654                      .global rawdata_loop, dbg_transfer_skip
 A   655 0015fd       rawdata_loop:
 A   656                      
 A   657 0015fd 7311          mvmd    AR1, @bridge_count
         0015fe 0060 
 A   658 0015ff F495          nop
 A   659                      
 A   660 001600       end_transfer:
 A   661                      .global end_transfer
 A   662              
 A   663 001600 F495          nop
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   16

 A   664              
 A   665                      
 A   666 001601       serial_transfer_end:
 A   667                      .global serial_transfer_end
 A   668                      
 A   669 001601 F495          nop
 A   670                      
 A   671                      
 A   672              ; Bit reverse and add start/stop bits
 A   673 001602 4813          ldm             AR3, A
 A   674 001603 E964          ld              #(abu_buff_sz/2), B
 A   675              
 A   676 001604 F074          call    _serial_cook
         001605 1A0B!
 A   677                      
 A   678              
 A   679              ;       rsbx    INTM
 A   680                              
 A   681 001606 6B61          addm    #1, @minor_count
         001607 0001 
 A   682                              
 A   683              ; If a major frame is complete, shut it down
 A   684              
 A   685              ; unset acq_seq, keep lsb_sel
 A   686 001608 7710          stm             #lsb_sel, AR0
         001609 0002 
 A   687 00160a 7510          portw   AR0, wr_disc
         00160b 8000 
 A   688              
 A   689              ; Strobe watchdog- once per acquisition
 A   690 00160c 7710          stm             #0, AR0        ; Data is not used- just the wr_dog strobe
         00160d 0000 
 A   691 00160e 7510          portw   AR0,wr_dog     ; Strobe the watchdog
         00160f A000 
 A   692              
 A   693              ; Stop acquisition, clear interrupts, then idle until an interrupt.
 A   694 001610 F074          call    rsp_reset
         001611 0C00!
 A   695              
 A   696 001612 F495          nop
 A   697 001613 F495          nop
 A   698              
 A   699                      .global pre_sleep
 A   700 001614       pre_sleep:
 A   701                      
 A   702 001614 F7BB          ssbx    INTM
 A   703 001615 7701          stm             #0FFh,IFR               ; Clear any pending interrupts
         001616 00FF 
 A   704                      
 A   705 001617 F6E1          idle    2       ; and now...we wait.
 A   706              
 A   707                      .global post_sleep
 A   708 001618       post_sleep:
 A   709                      
 A   710              ; check for aux int -> serial monitor
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   17

 A   711              ;       bitf    IFR, #int_3
 A   712              ;       cc              inth_3, TC
 A   713                      
 A   714              ; make sure we had a serial interrupt
 A   715              ;       bitf    IFR, #int_bx
 A   716              ;       bc              pre_sleep, NTC  ; stray interrupt, go back to IDLE
 A   717                      
 A   718 001618 F495          nop
 A   719                              
 A   720 001619 7701          stm             #int_bx, IFR    ; clear int flag
         00161a 0020 
 A   721                      
 A   722 00161b 7323          mvmd    BSPCE0, @bspce_save ; store control extension register in AR6
         00161c 0062 
 A   723              
 A   724 00161d 6123          bitf    BSPCE0, #bspce_xh
         00161e 0800 
 A   725 00161f F820          bc              xh_skip, NTC
         001620 1625'
 A   726              
 A   727 001621 7710          stm             #(acq_seq_atx+lsb_sel), AR0
         001622 0006 
 A   728 001623 7510          portw   AR0, wr_disc
         001624 8000 
 A   729                      
 A   730 001625       xh_skip:
 A   731              
 A   732 001625 EC64          rpt             #100
 A   733 001626 F495          nop
 A   734                      
 A   735 001627 7710          stm             #lsb_sel, AR0
         001628 0002 
 A   736 001629 7510          portw   AR0, wr_disc
         00162a 8000 
 A   737                      
 A   738 00162b 7210          mvdm    @bridge_size, AR0       ; need to copy these 
         00162c 0063 
 A   739 00162d 7211          mvdm    @bridge_count, AR1      ; to use CMPR
         00162e 0060 
 A   740 00162f F495          nop
 A   741 001630 F495          nop
 A   742 001631 F5A9          cmpr    LT, AR1                         ; If we're not done with a bridged data sequence, 
 A   743 001632 F830          bc              bridge_data, TC ; jump to bridge_data to continue transfers, otherwise...
         001633 15A3'
 A   744              
 A   745 001634 6B65          addm    #1, @major_count
         001635 0001 
 A   746                      
 A   747 001636 F073          b               major_loop              ; new data acquisition
         001637 14B4'
 A   748              
 A   749              ;;
 A   750              ; Main acquisiton ('appcode') branch done
 A   751              ;;      
 A   752              
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   18

 A   753              ;;
 A   754              ; Interrupts
 A   755              ;;
 A   756              
 A   757              ; Non-Maskable Interrupt
 A   758              ;               this is hit by the watchdog
 A   759 001638       int_nmi:
 A   760 001638 F495          nop
 A   761 001639 F495          nop
 A   762                              
 A   763 00163a 7710          stm             #0, AR0
         00163b 0000 
 A   764 00163c 7510          portw   AR0,wr_dog      ; Strobe watchdog timer
         00163d A000 
 A   765                      
 A   766 00163e F073          b               0xF800
         00163f F800 
 A   767                      
 A   768              ; Setup: IPTR=0x1FF, OVLY=1, all else =0
 A   769              ; This should set things up to completely reload the program from the EPROM on reset
 A   770 001640 771D          stm             #0xFFA0, PMST
         001641 FFA0 
 A   771 001642 F495          nop
 A   772 001643 F495          nop
 A   773              
 A   774              ;       reset   ; I don't have to take this.  ...I'm going home.
 A   775                      
 A   776 001644 FC00          ret             ; should never get here!
 A   777              
 A   778 001645       inth_3:
 A   779 001645 F7BB          ssbx    INTM
 A   780 001646 7701          stm             #int_3, IFR     ; clear int flag
         001647 0100 
 A   781              
 A   782                      ; call serial monitor
 A   783              
 A   784                      
 A   785              ;       calld   _RxDSP_Monitor
 A   786              ;       stm             #bspce_haltx, BSPCE      ; tell serial transmit to halt after completing this half-bu
 A   787              
 A   788                      
 A   789 001648 FE00          retd
 A   790 001649 F495          nop
 A   791 00164a F495          nop
 A   792              
 A   793 00164b       static_header:
 A   794 00164b 0044          .string "Dartmouth College Rx-DSP, AGO Site 2 Unit 0."
         00164c 0061 
         00164d 0072 
         00164e 0074 
         00164f 006D 
         001650 006F 
         001651 0075 
         001652 0074 
         001653 0068 
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   19

         001654 0020 
         001655 0043 
         001656 006F 
         001657 006C 
         001658 006C 
         001659 0065 
         00165a 0067 
         00165b 0065 
         00165c 0020 
         00165d 0052 
         00165e 0078 
         00165f 002D 
         001660 0044 
         001661 0053 
         001662 0050 
         001663 002C 
         001664 0020 
         001665 0041 
         001666 0047 
         001667 004F 
         001668 0020 
         001669 0053 
         00166a 0069 
         00166b 0074 
         00166c 0065 
         00166d 0020 
         00166e 0032 
         00166f 0020 
         001670 0055 
         001671 006E 
         001672 0069 
         001673 0074 
         001674 0020 
         001675 0030 
         001676 002E 
 A   795 001677 0000          .word   0000h   ; Null terminator
 A   796                      
 A   797              
 A   798              ;       .include "ad6620.asm"
 A   799              ;       .include "cbrev.asm"
 A   800              
 A   801                      .end

No Assembly Errors, No Assembly Warnings
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   20

LABEL                                VALUE       DEFN    REF

.TMS320C540                         000000          0 
.TMS320C541                         000000          0 
.TMS320C541A                        000000          0 
.TMS320C542                         000001          0 
.TMS320C543                         000000          0 
.TMS320C544                         000000          0 
.TMS320C545                         000000          0 
.TMS320C545LP                       000000          0 
.TMS320C546                         000000          0 
.TMS320C546LP                       000000          0 
.TMS320C548                         000000          0 
.TMS320C549                         000000          0 
ARCR                                   REF             A  11 
BMAR                                   REF             A  11 
CBER1                                  REF             A  12 
CBER2                                  REF             A  12 
CBSR1                                  REF             A  12 
CBSR2                                  REF             A  12 
CR                                  00000d      B 130 
CRLF                                000d0a      B 132 
DBMR                                   REF             A  11 
ESC                                 00001b      B 133 
INDX                                   REF             A  11 
LF                                  00000a      B 131 
PREG                                   REF             A  11 
RXDSP_START                         001436'     A  79  A  13 
TREG1                                  REF             A  11 
TREG2                                  REF             A  12 
TempLmem                            000144-     A  76 
ZERO                                   REF             A  11 
__TI_ASSEMBLER_VERSION__            3d10d0          0 
__far_mode                          000000          0 
__lflags                            000000          0 
__no_fret                           000000          0 
__stores_bug                        000000          0 
_cbrev32                               REF             A  15  A 331 
_cfft32_512                            REF             A  15  A 342 
_descale                               REF             A  16  A 463 
_hann_window                           REF             A  15  A 319 
_log_10                                REF             A  15  A 447 
_log_prescale                          REF             A  16  A 430 
_serial_cook                           REF             A  15  A 190  A 676 
_sqmag                                 REF             A  15  A 414 
_sqmag_prescale                        REF             A  16  A 385 
abs_loop                            00154b'     A 405  A 399 
abu_buff_hloc                       000864-     A  47 
abu_buff_loc                        000800-     A  46  A  47  A 150  A 156  A 166 
                                                       A 187  A 548 
abu_buff_sz                         0000c8      A  39  A  46  A  47  A 152  A 155 
                                                       A 188  A 555  A 573  A 633 
                                                       A 674 
abu_fill_start                      0015c4'     A 581  A 582 
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   21

LABEL                                VALUE       DEFN    REF

abu_first_half                      0015bb'     A 565  A 566 
acq_seq_atx                         000004      B 151  A 727 
acq_seq_in                          000002      B 159 
acq_seq_len                         007fff      B 143 
acq_seq_out                         000080      B 153  A 214  A 542  A 556 
acq_seq_rdy                         000100      B 154 
acq_test3                           000008      B 152  A 556 
ago_main                            001436'     A  80  A  21 
amr                                 000007      B 116 
appcode                             00143f'     A  95 
bridge_count                        000060      A  67  A 225  A 609  A 627  A 631 
                                                       A 657  A 739 
bridge_data                         0015a3'     A 541  A  20  A 743 
bridge_size                         000063      A  70  A 526  A 533  A 630  A 738 
bspc_Free                           008000      B 196  A 147  A 197 
bspc_RSRfull                        002000      B 194 
bspc_Rrdy                           000400      B 191 
bspc_Soft                           004000      B 195 
bspc_XSRfull                        001000      B 193 
bspc_Xrdy                           000800      B 192 
bspc_dlb                            000002      B 182 
bspc_fo                             000004      B 183 
bspc_fsm                            000008      B 184  A 147  A 197 
bspc_in0                            000100      B 189 
bspc_in1                            000200      B 190 
bspc_mcm                            000010      B 185 
bspc_nRrst                          000080      B 188 
bspc_nXrst                          000040      B 187  A 197 
bspc_txm                            000020      B 186 
bspce_bre                           002000      B 209 
bspce_bxe                           000400      B 206  A 149 
bspce_clkp                          000040      B 202 
bspce_fe                            000080      B 203  A 149 
bspce_fig                           000100      B 204 
bspce_fsp                           000020      B 201 
bspce_haltr                         008000      B 211 
bspce_haltx                         001000      B 208 
bspce_pcm                           000200      B 205 
bspce_rh                            004000      B 210 
bspce_save                          000062      A  69  A 194  A 550  A 722 
bspce_xh                            000800      B 207  A 194  A 550  A 724 
buff_clear_loop                        REF             A  20 
buff_init_loop                      001493'     A 161  A 157  A 162 
buff_skip                           0015b7'     A 559  A 553 
clk_rx_out                          002000      B  56 
data_acq_start                      0014c0'     A 223 
data_addr                           002000-     A  43  A  50  A  51  A  53  A  54 
                                                       A  55  A  56  A  57  A 483 
data_discard                        000200      A  36  A 250 
data_minor_sz                       000001      A  37 
data_n                              000200      A  35  A  54  A  57  A 270  A 317 
                                                       A 325  A 352  A 354  A 383 
                                                       A 397  A 412  A 428  A 441 
                                                       A 461  A 481  A 483 
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   22

LABEL                                VALUE       DEFN    REF

data_process                        001503'     A 310 
dbg_transfer                        0015e4'     A 623  A 600 
dbg_transfer_skip                      REF             A 654 
debug_mode_skip                     0015a3'     A 536  A 529 
defst0                              001800      B  14 
defst1                              002900      B  21 
disc_0                              000001      B 158 
discard_fifo_empty                  0014df'     A 262  A 259 
dp_end                              001590'     A 509  A 508 
dr0                                 000000      B 109 
dr1                                 000001      B 110 
dr2                                 000002      B 111 
dr3                                 000003      B 112 
dr4                                 000004      B 113 
ebs_data                            002200-     A  57  A 484  A 603  A 626 
ebs_loop                            00158f'     A 504  A 486 
end_transfer                        001600'     A 660  A 621  A 661 
fft_data                            002000-     A  51  A 340  A 353  A 354  A 379 
                                                       A 381  A 398 
fft_scaling                         000000      A  33  A 338 
fsync_sz                            000004      A  40  A 633 
head_ramp                              REF             A 162 
header_loop                         0014a3'     A 178  A 182 
header_loop_x                       0014a9'     A 183  A 180 
int_0                               000001      B  95 
int_1                               000002      B  96 
int_2                               000004      B  97 
int_3                               000100      B 103  A 780 
int_br                              000010      B  99 
int_bx                              000020      B 100  A 148  A 720 
int_nmi                             001638'     A 759  A  21 
int_t                               000008      B  98 
int_tr                              000040      B 101 
int_tx                              000080      B 102 
inth_3                              001645'     A 778 
iq_data                             002000-     A  50  A 269  A 316  A 327  A 329 
iq_len                              00003f      B 142 
lar                                 000006      B 115 
log_data                            002000-     A  55  A 443  A 459 
lsb_sel                             000002      B 150  A 141  A 214  A 542  A 556 
                                                       A 686  A 727  A 735 
major_count                         000065      A  74  A 206  A 591  A 745 
major_loop                          0014b4'     A 208  A 162  A 747 
minor_count                         000061      A  68  A 226  A 589  A 681 
mode_dbg_bit                        000002      A  61  A 527  A 599 
mode_dbg_n                          000200      A  64  A 526 
mode_flag                           000064      A  71  A 527  A 534  A 599 
mode_std_bit                        000001      A  60  A 534 
mode_std_n                          000000      A  63  A 533  A 609 
move_loop                           001530'     A 371  A 356 
nload                               000020      B  88 
npmst                               0000a3      B   4  A  87 
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   23

LABEL                                VALUE       DEFN    REF

nprd                                00095f      B  89 
ntddr                               000000      B  86 
ntss                                000010      B  85  A 112 
nwait                               00063f      B  90 
output_shift_n                      000008      A  30  A 495 
par_tm_en                           000001      B 149 
post_descale                        001578'     A 469  A 468 
post_sleep                          001618'     A 708  A 707 
post_sync_write                     0015cc'     A 594  A 595 
power_data                          002000-     A  56  A 457  A 482 
pre_abs                             00153e'     A 391  A 390 
pre_bit_rev                         001509'     A 322  A 321 
pre_db                                 REF             A 408 
pre_descale                         00156a'     A 453  A 452 
pre_disc                            0014d1'     A 247  A 246 
pre_fft                             001514'     A 337  A 336 
pre_log                             00155f'     A 438  A 408 
pre_logps                           001551'     A 420  A 419 
pre_move                            00151c'     A 348  A 347 
pre_read                            0014e7'     A 271  A 246 
pre_scale                           00155f'     A 435 
pre_sleep                           001614'     A 700  A 699 
pre_sqmag                           00154b'     A 409  A 408 
pre_sqscale                         001530'     A 375  A 374 
pre_window                          001503'     A 314  A 313 
prom                                008000      B  35 
rawdata_loop                        0015fd'     A 655  A 634  A 654 
rd_disc                             008000      B  59  A 254  A 275  A 521 
rd_out2                             006000      B  58 
rd_rsv                              00e000      B  62 
rd_rx                               004000      B  57 
rd_rx_out                           000000      B  55  A 260  A 282 
read_fifo_empty                     0014f5'     A 286  A 280 
read_init                           001459'     A 115 
rs_fifo                             00c000      B  61 
rs_rx_fifo                          00a000      B  60  A 137  A 210 
rsp_clear                              REF             A  17  A 129  A 217 
rsp_init                               REF             A  17  A 128 
rsp_mstart                             REF             A  17  A 130  A 218 
rsp_reset                              REF             A  17  A 116  A 127  A 135 
                                                       A 694 
rsp_sstart                             REF             A  17 
rsv                                 000005      B 114 
rx_discard_loop                     0014d4'     A 252  A 264 
rx_efo                              000040      B 164  A 257  A 278 
rx_ffo                              000020      B 163 
rx_hfo                              000080      B 165 
rx_read_loop                        0014e8'     A 273  A 288 
scale_addr                          001e00-     A  44  A  52  A 377 
scale_data                          001e00-     A  52  A 422  A 455 
scratch                             000060      B  36  A  67  A  68  A  69  A  70 
                                                       A  71  A  74 
TMS320C54x Assembler PC v4.2.0 Sat Jul 14 22:43:29 2012

Tools Copyright (c) 1996-2008 Texas Instruments Incorporated
ago_v0.2.abs                                                         PAGE   24

LABEL                                VALUE       DEFN    REF

seq_len                             00ffff      B 144 
serial_transfer_end                 001601'     A 666  A 667 
sqmag_data                          002000-     A  53  A 411  A 426 
sqsc_data                           002400-     A  54  A 424  A 445 
stack                               00013f      B  37 
stackres                            000100-     A  45  A  86 
standard_mode                       00159f'     A 531  A 523 
static_header                       00164b'     A 793  A 177 
swwsr_ds0                           000006      B  73 
swwsr_ds1                           000009      B  74 
swwsr_is                            00000c      B  75  A 234  A 236  A 296 
swwsr_ps0                           000000      B  71 
swwsr_ps1                           000003      B  72 
test_28                             000002      B 126 
tlm_efo                             000008      B 161 
tlm_ffo                             000004      B 160 
tlm_hfo                             000010      B 162 
transfer                               REF             A  19  A 606 
transfer_table_sz                      REF             A  19  A  63 
trm_28                              000001      B 125  A 522 
tspc_Free                           008000      B 178 
tspc_Rrdy                           000400      B 175 
tspc_Soft                           004000      B 177 
tspc_Xrdy                           000800      B 176 
tspc_in0                            000100      B 173 
tspc_in1                            000200      B 174 
tspc_mcm                            000010      B 169 
tspc_nRrst                          000080      B 172 
tspc_nXrst                          000040      B 171 
tspc_txm                            000020      B 170 
wr_disc                             008000      B  48  A  99  A 142  A 215  A 543 
                                                       A 557  A 687  A 728  A 736 
wr_dog                              00a000      B  49  A 100  A 691  A 764 
wr_out                              00c000      B  50 
wr_out0                             002000      B  44 
wr_out1                             004000      B  45 
wr_rd_fifo                          006000      B  47 
wr_rs_rx                            000000      B  43  A 119  A 120  A 121  A 122 
                                                       A 123  A 124 
wr_rsv                              00e000      B  51 
wr_rx                               004000      B  46 
xh_skip                             001625'     A 730  A 725 
